# coding: utf-8

"""
    Ory APIs

    Documentation for all public and administrative Ory APIs. Administrative APIs can only be accessed with a valid Personal Access Token. Public APIs are mostly used in browsers. 

    The version of the OpenAPI document: v1.12.1
    Contact: support@ory.sh
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ory_client.models.create_invite_response import CreateInviteResponse

class TestCreateInviteResponse(unittest.TestCase):
    """CreateInviteResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateInviteResponse:
        """Test CreateInviteResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateInviteResponse`
        """
        model = CreateInviteResponse()
        if include_optional:
            return CreateInviteResponse(
                all_invites = [
                    ory_client.models.member_invite.memberInvite(
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        id = '', 
                        invitee_email = '', 
                        invitee_id = '', 
                        owner_email = '', 
                        owner_id = '', 
                        project_id = '', 
                        status = 'pending', 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        workspace_id = '', )
                    ],
                created_invite = ory_client.models.member_invite.memberInvite(
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    id = '', 
                    invitee_email = '', 
                    invitee_id = '', 
                    owner_email = '', 
                    owner_id = '', 
                    project_id = '', 
                    status = 'pending', 
                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    workspace_id = '', )
            )
        else:
            return CreateInviteResponse(
                all_invites = [
                    ory_client.models.member_invite.memberInvite(
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        id = '', 
                        invitee_email = '', 
                        invitee_id = '', 
                        owner_email = '', 
                        owner_id = '', 
                        project_id = '', 
                        status = 'pending', 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        workspace_id = '', )
                    ],
                created_invite = ory_client.models.member_invite.memberInvite(
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    id = '', 
                    invitee_email = '', 
                    invitee_id = '', 
                    owner_email = '', 
                    owner_id = '', 
                    project_id = '', 
                    status = 'pending', 
                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    workspace_id = '', ),
        )
        """

    def testCreateInviteResponse(self):
        """Test CreateInviteResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
