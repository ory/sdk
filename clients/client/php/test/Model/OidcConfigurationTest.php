<?php
/**
 * OidcConfigurationTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Ory\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Ory APIs
 *
 * # Introduction Documentation for all public and administrative Ory APIs. Administrative APIs can only be accessed with a valid Personal Access Token. Public APIs are mostly used in browsers.  ## SDKs This document describes the APIs available in the Ory Network. The APIs are available as SDKs for the following languages:  | Language       | Download SDK                                                     | Documentation                                                                        | | -------------- | ---------------------------------------------------------------- | ------------------------------------------------------------------------------------ | | Dart           | [pub.dev](https://pub.dev/packages/ory_client)                   | [README](https://github.com/ory/sdk/blob/master/clients/client/dart/README.md)       | | .NET           | [nuget.org](https://www.nuget.org/packages/Ory.Client/)          | [README](https://github.com/ory/sdk/blob/master/clients/client/dotnet/README.md)     | | Elixir         | [hex.pm](https://hex.pm/packages/ory_client)                     | [README](https://github.com/ory/sdk/blob/master/clients/client/elixir/README.md)     | | Go             | [github.com](https://github.com/ory/client-go)                   | [README](https://github.com/ory/sdk/blob/master/clients/client/go/README.md)         | | Java           | [maven.org](https://search.maven.org/artifact/sh.ory/ory-client) | [README](https://github.com/ory/sdk/blob/master/clients/client/java/README.md)       | | JavaScript     | [npmjs.com](https://www.npmjs.com/package/@ory/client)           | [README](https://github.com/ory/sdk/blob/master/clients/client/typescript/README.md) | | JavaScript (With fetch) | [npmjs.com](https://www.npmjs.com/package/@ory/client-fetch)           | [README](https://github.com/ory/sdk/blob/master/clients/client/typescript-fetch/README.md) |  | PHP            | [packagist.org](https://packagist.org/packages/ory/client)       | [README](https://github.com/ory/sdk/blob/master/clients/client/php/README.md)        | | Python         | [pypi.org](https://pypi.org/project/ory-client/)                 | [README](https://github.com/ory/sdk/blob/master/clients/client/python/README.md)     | | Ruby           | [rubygems.org](https://rubygems.org/gems/ory-client)             | [README](https://github.com/ory/sdk/blob/master/clients/client/ruby/README.md)       | | Rust           | [crates.io](https://crates.io/crates/ory-client)                 | [README](https://github.com/ory/sdk/blob/master/clients/client/rust/README.md)       |
 *
 * The version of the OpenAPI document: v1.21.3
 * Contact: support@ory.sh
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.12.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace Ory\Client\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * OidcConfigurationTest Class Doc Comment
 *
 * @category    Class
 * @description Includes links to several endpoints (for example &#x60;/oauth2/token&#x60;) and exposes information on supported signature algorithms among others.
 * @package     Ory\Client
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class OidcConfigurationTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "OidcConfiguration"
     */
    public function testOidcConfiguration()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "authorizationEndpoint"
     */
    public function testPropertyAuthorizationEndpoint()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "backchannelLogoutSessionSupported"
     */
    public function testPropertyBackchannelLogoutSessionSupported()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "backchannelLogoutSupported"
     */
    public function testPropertyBackchannelLogoutSupported()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "claimsParameterSupported"
     */
    public function testPropertyClaimsParameterSupported()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "claimsSupported"
     */
    public function testPropertyClaimsSupported()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "codeChallengeMethodsSupported"
     */
    public function testPropertyCodeChallengeMethodsSupported()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "credentialsEndpointDraft00"
     */
    public function testPropertyCredentialsEndpointDraft00()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "credentialsSupportedDraft00"
     */
    public function testPropertyCredentialsSupportedDraft00()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "deviceAuthorizationEndpoint"
     */
    public function testPropertyDeviceAuthorizationEndpoint()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "endSessionEndpoint"
     */
    public function testPropertyEndSessionEndpoint()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "frontchannelLogoutSessionSupported"
     */
    public function testPropertyFrontchannelLogoutSessionSupported()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "frontchannelLogoutSupported"
     */
    public function testPropertyFrontchannelLogoutSupported()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "grantTypesSupported"
     */
    public function testPropertyGrantTypesSupported()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "idTokenSignedResponseAlg"
     */
    public function testPropertyIdTokenSignedResponseAlg()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "idTokenSigningAlgValuesSupported"
     */
    public function testPropertyIdTokenSigningAlgValuesSupported()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "issuer"
     */
    public function testPropertyIssuer()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "jwksUri"
     */
    public function testPropertyJwksUri()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "registrationEndpoint"
     */
    public function testPropertyRegistrationEndpoint()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "requestObjectSigningAlgValuesSupported"
     */
    public function testPropertyRequestObjectSigningAlgValuesSupported()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "requestParameterSupported"
     */
    public function testPropertyRequestParameterSupported()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "requestUriParameterSupported"
     */
    public function testPropertyRequestUriParameterSupported()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "requireRequestUriRegistration"
     */
    public function testPropertyRequireRequestUriRegistration()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "responseModesSupported"
     */
    public function testPropertyResponseModesSupported()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "responseTypesSupported"
     */
    public function testPropertyResponseTypesSupported()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "revocationEndpoint"
     */
    public function testPropertyRevocationEndpoint()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "scopesSupported"
     */
    public function testPropertyScopesSupported()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "subjectTypesSupported"
     */
    public function testPropertySubjectTypesSupported()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "tokenEndpoint"
     */
    public function testPropertyTokenEndpoint()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "tokenEndpointAuthMethodsSupported"
     */
    public function testPropertyTokenEndpointAuthMethodsSupported()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "userinfoEndpoint"
     */
    public function testPropertyUserinfoEndpoint()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "userinfoSignedResponseAlg"
     */
    public function testPropertyUserinfoSignedResponseAlg()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "userinfoSigningAlgValuesSupported"
     */
    public function testPropertyUserinfoSigningAlgValuesSupported()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
