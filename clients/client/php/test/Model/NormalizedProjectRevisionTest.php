<?php
/**
 * NormalizedProjectRevisionTest
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  Ory\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Ory APIs
 *
 * Documentation for all public and administrative Ory APIs. Administrative APIs can only be accessed with a valid Personal Access Token. Public APIs are mostly used in browsers.
 *
 * The version of the OpenAPI document: v0.0.1-alpha.152
 * Contact: support@ory.sh
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace Ory\Client\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * NormalizedProjectRevisionTest Class Doc Comment
 *
 * @category    Class
 * @description NormalizedProjectRevision
 * @package     Ory\Client
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class NormalizedProjectRevisionTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "NormalizedProjectRevision"
     */
    public function testNormalizedProjectRevision()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "createdAt"
     */
    public function testPropertyCreatedAt()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCookiesSameSite"
     */
    public function testPropertyKratosCookiesSameSite()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierSmtpConnectionUri"
     */
    public function testPropertyKratosCourierSmtpConnectionUri()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierSmtpFromAddress"
     */
    public function testPropertyKratosCourierSmtpFromAddress()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierSmtpFromName"
     */
    public function testPropertyKratosCourierSmtpFromName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierSmtpHeaders"
     */
    public function testPropertyKratosCourierSmtpHeaders()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierTemplatesRecoveryInvalidEmailBodyHtml"
     */
    public function testPropertyKratosCourierTemplatesRecoveryInvalidEmailBodyHtml()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierTemplatesRecoveryInvalidEmailBodyPlaintext"
     */
    public function testPropertyKratosCourierTemplatesRecoveryInvalidEmailBodyPlaintext()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierTemplatesRecoveryInvalidEmailSubject"
     */
    public function testPropertyKratosCourierTemplatesRecoveryInvalidEmailSubject()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierTemplatesRecoveryValidEmailBodyHtml"
     */
    public function testPropertyKratosCourierTemplatesRecoveryValidEmailBodyHtml()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierTemplatesRecoveryValidEmailBodyPlaintext"
     */
    public function testPropertyKratosCourierTemplatesRecoveryValidEmailBodyPlaintext()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierTemplatesRecoveryValidEmailSubject"
     */
    public function testPropertyKratosCourierTemplatesRecoveryValidEmailSubject()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierTemplatesVerificationInvalidEmailBodyHtml"
     */
    public function testPropertyKratosCourierTemplatesVerificationInvalidEmailBodyHtml()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierTemplatesVerificationInvalidEmailBodyPlaintext"
     */
    public function testPropertyKratosCourierTemplatesVerificationInvalidEmailBodyPlaintext()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierTemplatesVerificationInvalidEmailSubject"
     */
    public function testPropertyKratosCourierTemplatesVerificationInvalidEmailSubject()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierTemplatesVerificationValidEmailBodyHtml"
     */
    public function testPropertyKratosCourierTemplatesVerificationValidEmailBodyHtml()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierTemplatesVerificationValidEmailBodyPlaintext"
     */
    public function testPropertyKratosCourierTemplatesVerificationValidEmailBodyPlaintext()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierTemplatesVerificationValidEmailSubject"
     */
    public function testPropertyKratosCourierTemplatesVerificationValidEmailSubject()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosIdentitySchemas"
     */
    public function testPropertyKratosIdentitySchemas()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSecretsCipher"
     */
    public function testPropertyKratosSecretsCipher()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSecretsCookie"
     */
    public function testPropertyKratosSecretsCookie()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSecretsDefault"
     */
    public function testPropertyKratosSecretsDefault()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceAllowedReturnUrls"
     */
    public function testPropertyKratosSelfserviceAllowedReturnUrls()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceDefaultBrowserReturnUrl"
     */
    public function testPropertyKratosSelfserviceDefaultBrowserReturnUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsErrorUiUrl"
     */
    public function testPropertyKratosSelfserviceFlowsErrorUiUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsHooks"
     */
    public function testPropertyKratosSelfserviceFlowsHooks()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsLoginAfterDefaultBrowserReturnUrl"
     */
    public function testPropertyKratosSelfserviceFlowsLoginAfterDefaultBrowserReturnUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsLoginAfterOidcDefaultBrowserReturnUrl"
     */
    public function testPropertyKratosSelfserviceFlowsLoginAfterOidcDefaultBrowserReturnUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsLoginAfterPasswordDefaultBrowserReturnUrl"
     */
    public function testPropertyKratosSelfserviceFlowsLoginAfterPasswordDefaultBrowserReturnUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsLoginAfterWebauthnDefaultBrowserReturnUrl"
     */
    public function testPropertyKratosSelfserviceFlowsLoginAfterWebauthnDefaultBrowserReturnUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsLoginLifespan"
     */
    public function testPropertyKratosSelfserviceFlowsLoginLifespan()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsLoginUiUrl"
     */
    public function testPropertyKratosSelfserviceFlowsLoginUiUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsLogoutAfterDefaultBrowserReturnUrl"
     */
    public function testPropertyKratosSelfserviceFlowsLogoutAfterDefaultBrowserReturnUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsRecoveryAfterDefaultBrowserReturnUrl"
     */
    public function testPropertyKratosSelfserviceFlowsRecoveryAfterDefaultBrowserReturnUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsRecoveryEnabled"
     */
    public function testPropertyKratosSelfserviceFlowsRecoveryEnabled()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsRecoveryLifespan"
     */
    public function testPropertyKratosSelfserviceFlowsRecoveryLifespan()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsRecoveryUiUrl"
     */
    public function testPropertyKratosSelfserviceFlowsRecoveryUiUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsRegistrationAfterDefaultBrowserReturnUrl"
     */
    public function testPropertyKratosSelfserviceFlowsRegistrationAfterDefaultBrowserReturnUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsRegistrationAfterOidcDefaultBrowserReturnUrl"
     */
    public function testPropertyKratosSelfserviceFlowsRegistrationAfterOidcDefaultBrowserReturnUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsRegistrationAfterPasswordDefaultBrowserReturnUrl"
     */
    public function testPropertyKratosSelfserviceFlowsRegistrationAfterPasswordDefaultBrowserReturnUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsRegistrationAfterWebauthnDefaultBrowserReturnUrl"
     */
    public function testPropertyKratosSelfserviceFlowsRegistrationAfterWebauthnDefaultBrowserReturnUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsRegistrationEnabled"
     */
    public function testPropertyKratosSelfserviceFlowsRegistrationEnabled()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsRegistrationLifespan"
     */
    public function testPropertyKratosSelfserviceFlowsRegistrationLifespan()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsRegistrationUiUrl"
     */
    public function testPropertyKratosSelfserviceFlowsRegistrationUiUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsSettingsAfterDefaultBrowserReturnUrl"
     */
    public function testPropertyKratosSelfserviceFlowsSettingsAfterDefaultBrowserReturnUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsSettingsAfterPasswordDefaultBrowserReturnUrl"
     */
    public function testPropertyKratosSelfserviceFlowsSettingsAfterPasswordDefaultBrowserReturnUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsSettingsAfterProfileDefaultBrowserReturnUrl"
     */
    public function testPropertyKratosSelfserviceFlowsSettingsAfterProfileDefaultBrowserReturnUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsSettingsLifespan"
     */
    public function testPropertyKratosSelfserviceFlowsSettingsLifespan()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsSettingsPrivilegedSessionMaxAge"
     */
    public function testPropertyKratosSelfserviceFlowsSettingsPrivilegedSessionMaxAge()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsSettingsRequiredAal"
     */
    public function testPropertyKratosSelfserviceFlowsSettingsRequiredAal()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsSettingsUiUrl"
     */
    public function testPropertyKratosSelfserviceFlowsSettingsUiUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsVerificationAfterDefaultBrowserReturnUrl"
     */
    public function testPropertyKratosSelfserviceFlowsVerificationAfterDefaultBrowserReturnUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsVerificationEnabled"
     */
    public function testPropertyKratosSelfserviceFlowsVerificationEnabled()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsVerificationLifespan"
     */
    public function testPropertyKratosSelfserviceFlowsVerificationLifespan()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsVerificationUiUrl"
     */
    public function testPropertyKratosSelfserviceFlowsVerificationUiUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceMethodsLinkConfigBaseUrl"
     */
    public function testPropertyKratosSelfserviceMethodsLinkConfigBaseUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceMethodsLinkConfigLifespan"
     */
    public function testPropertyKratosSelfserviceMethodsLinkConfigLifespan()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceMethodsLinkEnabled"
     */
    public function testPropertyKratosSelfserviceMethodsLinkEnabled()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceMethodsLookupSecretEnabled"
     */
    public function testPropertyKratosSelfserviceMethodsLookupSecretEnabled()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceMethodsOidcConfigBaseRedirectUri"
     */
    public function testPropertyKratosSelfserviceMethodsOidcConfigBaseRedirectUri()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceMethodsOidcConfigProviders"
     */
    public function testPropertyKratosSelfserviceMethodsOidcConfigProviders()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceMethodsOidcEnabled"
     */
    public function testPropertyKratosSelfserviceMethodsOidcEnabled()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceMethodsPasswordConfigHaveibeenpwnedEnabled"
     */
    public function testPropertyKratosSelfserviceMethodsPasswordConfigHaveibeenpwnedEnabled()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceMethodsPasswordConfigIdentifierSimilarityCheckEnabled"
     */
    public function testPropertyKratosSelfserviceMethodsPasswordConfigIdentifierSimilarityCheckEnabled()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceMethodsPasswordConfigIgnoreNetworkErrors"
     */
    public function testPropertyKratosSelfserviceMethodsPasswordConfigIgnoreNetworkErrors()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceMethodsPasswordConfigMaxBreaches"
     */
    public function testPropertyKratosSelfserviceMethodsPasswordConfigMaxBreaches()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceMethodsPasswordConfigMinPasswordLength"
     */
    public function testPropertyKratosSelfserviceMethodsPasswordConfigMinPasswordLength()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceMethodsPasswordEnabled"
     */
    public function testPropertyKratosSelfserviceMethodsPasswordEnabled()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceMethodsProfileEnabled"
     */
    public function testPropertyKratosSelfserviceMethodsProfileEnabled()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceMethodsTotpConfigIssuer"
     */
    public function testPropertyKratosSelfserviceMethodsTotpConfigIssuer()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceMethodsTotpEnabled"
     */
    public function testPropertyKratosSelfserviceMethodsTotpEnabled()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceMethodsWebauthnConfigPasswordless"
     */
    public function testPropertyKratosSelfserviceMethodsWebauthnConfigPasswordless()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceMethodsWebauthnConfigRpDisplayName"
     */
    public function testPropertyKratosSelfserviceMethodsWebauthnConfigRpDisplayName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceMethodsWebauthnConfigRpIcon"
     */
    public function testPropertyKratosSelfserviceMethodsWebauthnConfigRpIcon()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceMethodsWebauthnConfigRpId"
     */
    public function testPropertyKratosSelfserviceMethodsWebauthnConfigRpId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceMethodsWebauthnConfigRpOrigin"
     */
    public function testPropertyKratosSelfserviceMethodsWebauthnConfigRpOrigin()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceMethodsWebauthnEnabled"
     */
    public function testPropertyKratosSelfserviceMethodsWebauthnEnabled()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSessionCookiePersistent"
     */
    public function testPropertyKratosSessionCookiePersistent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSessionCookieSameSite"
     */
    public function testPropertyKratosSessionCookieSameSite()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSessionLifespan"
     */
    public function testPropertyKratosSessionLifespan()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSessionWhoamiRequiredAal"
     */
    public function testPropertyKratosSessionWhoamiRequiredAal()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "name"
     */
    public function testPropertyName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "projectId"
     */
    public function testPropertyProjectId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "updatedAt"
     */
    public function testPropertyUpdatedAt()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
