<?php
/**
 * CreateProjectNormalizedPayloadTest
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  Ory\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Ory APIs
 *
 * Documentation for all public and administrative Ory APIs. Administrative APIs can only be accessed with a valid Personal Access Token. Public APIs are mostly used in browsers.
 *
 * The version of the OpenAPI document: v1.8.1
 * Contact: support@ory.sh
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace Ory\Client\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * CreateProjectNormalizedPayloadTest Class Doc Comment
 *
 * @category    Class
 * @description Create project (normalized) request payload
 * @package     Ory\Client
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class CreateProjectNormalizedPayloadTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "CreateProjectNormalizedPayload"
     */
    public function testCreateProjectNormalizedPayload()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "createdAt"
     */
    public function testPropertyCreatedAt()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "disableAccountExperienceWelcomeScreen"
     */
    public function testPropertyDisableAccountExperienceWelcomeScreen()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enableAxV2"
     */
    public function testPropertyEnableAxV2()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "environment"
     */
    public function testPropertyEnvironment()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hydraOauth2AllowedTopLevelClaims"
     */
    public function testPropertyHydraOauth2AllowedTopLevelClaims()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hydraOauth2ClientCredentialsDefaultGrantAllowedScope"
     */
    public function testPropertyHydraOauth2ClientCredentialsDefaultGrantAllowedScope()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hydraOauth2ExcludeNotBeforeClaim"
     */
    public function testPropertyHydraOauth2ExcludeNotBeforeClaim()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hydraOauth2GrantJwtIatOptional"
     */
    public function testPropertyHydraOauth2GrantJwtIatOptional()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hydraOauth2GrantJwtJtiOptional"
     */
    public function testPropertyHydraOauth2GrantJwtJtiOptional()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hydraOauth2GrantJwtMaxTtl"
     */
    public function testPropertyHydraOauth2GrantJwtMaxTtl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hydraOauth2MirrorTopLevelClaims"
     */
    public function testPropertyHydraOauth2MirrorTopLevelClaims()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hydraOauth2PkceEnforced"
     */
    public function testPropertyHydraOauth2PkceEnforced()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hydraOauth2PkceEnforcedForPublicClients"
     */
    public function testPropertyHydraOauth2PkceEnforcedForPublicClients()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hydraOauth2RefreshTokenHook"
     */
    public function testPropertyHydraOauth2RefreshTokenHook()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hydraOauth2TokenHook"
     */
    public function testPropertyHydraOauth2TokenHook()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hydraOidcDynamicClientRegistrationDefaultScope"
     */
    public function testPropertyHydraOidcDynamicClientRegistrationDefaultScope()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hydraOidcDynamicClientRegistrationEnabled"
     */
    public function testPropertyHydraOidcDynamicClientRegistrationEnabled()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hydraOidcSubjectIdentifiersPairwiseSalt"
     */
    public function testPropertyHydraOidcSubjectIdentifiersPairwiseSalt()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hydraOidcSubjectIdentifiersSupportedTypes"
     */
    public function testPropertyHydraOidcSubjectIdentifiersSupportedTypes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hydraSecretsCookie"
     */
    public function testPropertyHydraSecretsCookie()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hydraSecretsSystem"
     */
    public function testPropertyHydraSecretsSystem()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hydraServeCookiesSameSiteLegacyWorkaround"
     */
    public function testPropertyHydraServeCookiesSameSiteLegacyWorkaround()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hydraServeCookiesSameSiteMode"
     */
    public function testPropertyHydraServeCookiesSameSiteMode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hydraStrategiesAccessToken"
     */
    public function testPropertyHydraStrategiesAccessToken()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hydraStrategiesScope"
     */
    public function testPropertyHydraStrategiesScope()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hydraTtlAccessToken"
     */
    public function testPropertyHydraTtlAccessToken()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hydraTtlAuthCode"
     */
    public function testPropertyHydraTtlAuthCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hydraTtlIdToken"
     */
    public function testPropertyHydraTtlIdToken()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hydraTtlLoginConsentRequest"
     */
    public function testPropertyHydraTtlLoginConsentRequest()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hydraTtlRefreshToken"
     */
    public function testPropertyHydraTtlRefreshToken()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hydraUrlsConsent"
     */
    public function testPropertyHydraUrlsConsent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hydraUrlsError"
     */
    public function testPropertyHydraUrlsError()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hydraUrlsLogin"
     */
    public function testPropertyHydraUrlsLogin()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hydraUrlsLogout"
     */
    public function testPropertyHydraUrlsLogout()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hydraUrlsPostLogoutRedirect"
     */
    public function testPropertyHydraUrlsPostLogoutRedirect()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hydraUrlsRegistration"
     */
    public function testPropertyHydraUrlsRegistration()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hydraUrlsSelfIssuer"
     */
    public function testPropertyHydraUrlsSelfIssuer()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hydraWebfingerJwksBroadcastKeys"
     */
    public function testPropertyHydraWebfingerJwksBroadcastKeys()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hydraWebfingerOidcDiscoveryAuthUrl"
     */
    public function testPropertyHydraWebfingerOidcDiscoveryAuthUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hydraWebfingerOidcDiscoveryClientRegistrationUrl"
     */
    public function testPropertyHydraWebfingerOidcDiscoveryClientRegistrationUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hydraWebfingerOidcDiscoveryJwksUrl"
     */
    public function testPropertyHydraWebfingerOidcDiscoveryJwksUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hydraWebfingerOidcDiscoverySupportedClaims"
     */
    public function testPropertyHydraWebfingerOidcDiscoverySupportedClaims()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hydraWebfingerOidcDiscoverySupportedScope"
     */
    public function testPropertyHydraWebfingerOidcDiscoverySupportedScope()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hydraWebfingerOidcDiscoveryTokenUrl"
     */
    public function testPropertyHydraWebfingerOidcDiscoveryTokenUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hydraWebfingerOidcDiscoveryUserinfoUrl"
     */
    public function testPropertyHydraWebfingerOidcDiscoveryUserinfoUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ketoNamespaceConfiguration"
     */
    public function testPropertyKetoNamespaceConfiguration()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ketoNamespaces"
     */
    public function testPropertyKetoNamespaces()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCookiesSameSite"
     */
    public function testPropertyKratosCookiesSameSite()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierChannels"
     */
    public function testPropertyKratosCourierChannels()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierDeliveryStrategy"
     */
    public function testPropertyKratosCourierDeliveryStrategy()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierHttpRequestConfigAuthApiKeyIn"
     */
    public function testPropertyKratosCourierHttpRequestConfigAuthApiKeyIn()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierHttpRequestConfigAuthApiKeyName"
     */
    public function testPropertyKratosCourierHttpRequestConfigAuthApiKeyName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierHttpRequestConfigAuthApiKeyValue"
     */
    public function testPropertyKratosCourierHttpRequestConfigAuthApiKeyValue()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierHttpRequestConfigAuthBasicAuthPassword"
     */
    public function testPropertyKratosCourierHttpRequestConfigAuthBasicAuthPassword()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierHttpRequestConfigAuthBasicAuthUser"
     */
    public function testPropertyKratosCourierHttpRequestConfigAuthBasicAuthUser()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierHttpRequestConfigAuthType"
     */
    public function testPropertyKratosCourierHttpRequestConfigAuthType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierHttpRequestConfigBody"
     */
    public function testPropertyKratosCourierHttpRequestConfigBody()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierHttpRequestConfigHeaders"
     */
    public function testPropertyKratosCourierHttpRequestConfigHeaders()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierHttpRequestConfigMethod"
     */
    public function testPropertyKratosCourierHttpRequestConfigMethod()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierHttpRequestConfigUrl"
     */
    public function testPropertyKratosCourierHttpRequestConfigUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierSmtpConnectionUri"
     */
    public function testPropertyKratosCourierSmtpConnectionUri()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierSmtpFromAddress"
     */
    public function testPropertyKratosCourierSmtpFromAddress()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierSmtpFromName"
     */
    public function testPropertyKratosCourierSmtpFromName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierSmtpHeaders"
     */
    public function testPropertyKratosCourierSmtpHeaders()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierSmtpLocalName"
     */
    public function testPropertyKratosCourierSmtpLocalName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierTemplatesLoginCodeValidEmailBodyHtml"
     */
    public function testPropertyKratosCourierTemplatesLoginCodeValidEmailBodyHtml()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierTemplatesLoginCodeValidEmailBodyPlaintext"
     */
    public function testPropertyKratosCourierTemplatesLoginCodeValidEmailBodyPlaintext()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierTemplatesLoginCodeValidEmailSubject"
     */
    public function testPropertyKratosCourierTemplatesLoginCodeValidEmailSubject()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierTemplatesLoginCodeValidSmsBodyPlaintext"
     */
    public function testPropertyKratosCourierTemplatesLoginCodeValidSmsBodyPlaintext()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierTemplatesRecoveryCodeInvalidEmailBodyHtml"
     */
    public function testPropertyKratosCourierTemplatesRecoveryCodeInvalidEmailBodyHtml()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierTemplatesRecoveryCodeInvalidEmailBodyPlaintext"
     */
    public function testPropertyKratosCourierTemplatesRecoveryCodeInvalidEmailBodyPlaintext()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierTemplatesRecoveryCodeInvalidEmailSubject"
     */
    public function testPropertyKratosCourierTemplatesRecoveryCodeInvalidEmailSubject()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierTemplatesRecoveryCodeValidEmailBodyHtml"
     */
    public function testPropertyKratosCourierTemplatesRecoveryCodeValidEmailBodyHtml()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierTemplatesRecoveryCodeValidEmailBodyPlaintext"
     */
    public function testPropertyKratosCourierTemplatesRecoveryCodeValidEmailBodyPlaintext()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierTemplatesRecoveryCodeValidEmailSubject"
     */
    public function testPropertyKratosCourierTemplatesRecoveryCodeValidEmailSubject()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierTemplatesRecoveryInvalidEmailBodyHtml"
     */
    public function testPropertyKratosCourierTemplatesRecoveryInvalidEmailBodyHtml()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierTemplatesRecoveryInvalidEmailBodyPlaintext"
     */
    public function testPropertyKratosCourierTemplatesRecoveryInvalidEmailBodyPlaintext()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierTemplatesRecoveryInvalidEmailSubject"
     */
    public function testPropertyKratosCourierTemplatesRecoveryInvalidEmailSubject()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierTemplatesRecoveryValidEmailBodyHtml"
     */
    public function testPropertyKratosCourierTemplatesRecoveryValidEmailBodyHtml()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierTemplatesRecoveryValidEmailBodyPlaintext"
     */
    public function testPropertyKratosCourierTemplatesRecoveryValidEmailBodyPlaintext()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierTemplatesRecoveryValidEmailSubject"
     */
    public function testPropertyKratosCourierTemplatesRecoveryValidEmailSubject()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierTemplatesRegistrationCodeValidEmailBodyHtml"
     */
    public function testPropertyKratosCourierTemplatesRegistrationCodeValidEmailBodyHtml()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierTemplatesRegistrationCodeValidEmailBodyPlaintext"
     */
    public function testPropertyKratosCourierTemplatesRegistrationCodeValidEmailBodyPlaintext()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierTemplatesRegistrationCodeValidEmailSubject"
     */
    public function testPropertyKratosCourierTemplatesRegistrationCodeValidEmailSubject()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierTemplatesVerificationCodeInvalidEmailBodyHtml"
     */
    public function testPropertyKratosCourierTemplatesVerificationCodeInvalidEmailBodyHtml()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierTemplatesVerificationCodeInvalidEmailBodyPlaintext"
     */
    public function testPropertyKratosCourierTemplatesVerificationCodeInvalidEmailBodyPlaintext()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierTemplatesVerificationCodeInvalidEmailSubject"
     */
    public function testPropertyKratosCourierTemplatesVerificationCodeInvalidEmailSubject()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierTemplatesVerificationCodeValidEmailBodyHtml"
     */
    public function testPropertyKratosCourierTemplatesVerificationCodeValidEmailBodyHtml()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierTemplatesVerificationCodeValidEmailBodyPlaintext"
     */
    public function testPropertyKratosCourierTemplatesVerificationCodeValidEmailBodyPlaintext()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierTemplatesVerificationCodeValidEmailSubject"
     */
    public function testPropertyKratosCourierTemplatesVerificationCodeValidEmailSubject()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierTemplatesVerificationCodeValidSmsBodyPlaintext"
     */
    public function testPropertyKratosCourierTemplatesVerificationCodeValidSmsBodyPlaintext()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierTemplatesVerificationInvalidEmailBodyHtml"
     */
    public function testPropertyKratosCourierTemplatesVerificationInvalidEmailBodyHtml()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierTemplatesVerificationInvalidEmailBodyPlaintext"
     */
    public function testPropertyKratosCourierTemplatesVerificationInvalidEmailBodyPlaintext()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierTemplatesVerificationInvalidEmailSubject"
     */
    public function testPropertyKratosCourierTemplatesVerificationInvalidEmailSubject()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierTemplatesVerificationValidEmailBodyHtml"
     */
    public function testPropertyKratosCourierTemplatesVerificationValidEmailBodyHtml()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierTemplatesVerificationValidEmailBodyPlaintext"
     */
    public function testPropertyKratosCourierTemplatesVerificationValidEmailBodyPlaintext()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosCourierTemplatesVerificationValidEmailSubject"
     */
    public function testPropertyKratosCourierTemplatesVerificationValidEmailSubject()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosFeatureFlagsCacheableSessions"
     */
    public function testPropertyKratosFeatureFlagsCacheableSessions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosFeatureFlagsUseContinueWithTransitions"
     */
    public function testPropertyKratosFeatureFlagsUseContinueWithTransitions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosIdentitySchemas"
     */
    public function testPropertyKratosIdentitySchemas()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosOauth2ProviderHeaders"
     */
    public function testPropertyKratosOauth2ProviderHeaders()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosOauth2ProviderOverrideReturnTo"
     */
    public function testPropertyKratosOauth2ProviderOverrideReturnTo()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosOauth2ProviderUrl"
     */
    public function testPropertyKratosOauth2ProviderUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosPreviewDefaultReadConsistencyLevel"
     */
    public function testPropertyKratosPreviewDefaultReadConsistencyLevel()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSecretsCipher"
     */
    public function testPropertyKratosSecretsCipher()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSecretsCookie"
     */
    public function testPropertyKratosSecretsCookie()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSecretsDefault"
     */
    public function testPropertyKratosSecretsDefault()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceAllowedReturnUrls"
     */
    public function testPropertyKratosSelfserviceAllowedReturnUrls()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceDefaultBrowserReturnUrl"
     */
    public function testPropertyKratosSelfserviceDefaultBrowserReturnUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsErrorUiUrl"
     */
    public function testPropertyKratosSelfserviceFlowsErrorUiUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsLoginAfterCodeDefaultBrowserReturnUrl"
     */
    public function testPropertyKratosSelfserviceFlowsLoginAfterCodeDefaultBrowserReturnUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsLoginAfterDefaultBrowserReturnUrl"
     */
    public function testPropertyKratosSelfserviceFlowsLoginAfterDefaultBrowserReturnUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsLoginAfterLookupSecretDefaultBrowserReturnUrl"
     */
    public function testPropertyKratosSelfserviceFlowsLoginAfterLookupSecretDefaultBrowserReturnUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsLoginAfterOidcDefaultBrowserReturnUrl"
     */
    public function testPropertyKratosSelfserviceFlowsLoginAfterOidcDefaultBrowserReturnUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsLoginAfterPasswordDefaultBrowserReturnUrl"
     */
    public function testPropertyKratosSelfserviceFlowsLoginAfterPasswordDefaultBrowserReturnUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsLoginAfterTotpDefaultBrowserReturnUrl"
     */
    public function testPropertyKratosSelfserviceFlowsLoginAfterTotpDefaultBrowserReturnUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsLoginAfterWebauthnDefaultBrowserReturnUrl"
     */
    public function testPropertyKratosSelfserviceFlowsLoginAfterWebauthnDefaultBrowserReturnUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsLoginLifespan"
     */
    public function testPropertyKratosSelfserviceFlowsLoginLifespan()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsLoginUiUrl"
     */
    public function testPropertyKratosSelfserviceFlowsLoginUiUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsLogoutAfterDefaultBrowserReturnUrl"
     */
    public function testPropertyKratosSelfserviceFlowsLogoutAfterDefaultBrowserReturnUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsRecoveryAfterDefaultBrowserReturnUrl"
     */
    public function testPropertyKratosSelfserviceFlowsRecoveryAfterDefaultBrowserReturnUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsRecoveryEnabled"
     */
    public function testPropertyKratosSelfserviceFlowsRecoveryEnabled()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsRecoveryLifespan"
     */
    public function testPropertyKratosSelfserviceFlowsRecoveryLifespan()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsRecoveryNotifyUnknownRecipients"
     */
    public function testPropertyKratosSelfserviceFlowsRecoveryNotifyUnknownRecipients()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsRecoveryUiUrl"
     */
    public function testPropertyKratosSelfserviceFlowsRecoveryUiUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsRecoveryUse"
     */
    public function testPropertyKratosSelfserviceFlowsRecoveryUse()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsRegistrationAfterCodeDefaultBrowserReturnUrl"
     */
    public function testPropertyKratosSelfserviceFlowsRegistrationAfterCodeDefaultBrowserReturnUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsRegistrationAfterDefaultBrowserReturnUrl"
     */
    public function testPropertyKratosSelfserviceFlowsRegistrationAfterDefaultBrowserReturnUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsRegistrationAfterOidcDefaultBrowserReturnUrl"
     */
    public function testPropertyKratosSelfserviceFlowsRegistrationAfterOidcDefaultBrowserReturnUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsRegistrationAfterPasswordDefaultBrowserReturnUrl"
     */
    public function testPropertyKratosSelfserviceFlowsRegistrationAfterPasswordDefaultBrowserReturnUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsRegistrationAfterWebauthnDefaultBrowserReturnUrl"
     */
    public function testPropertyKratosSelfserviceFlowsRegistrationAfterWebauthnDefaultBrowserReturnUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsRegistrationEnabled"
     */
    public function testPropertyKratosSelfserviceFlowsRegistrationEnabled()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsRegistrationLifespan"
     */
    public function testPropertyKratosSelfserviceFlowsRegistrationLifespan()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsRegistrationLoginHints"
     */
    public function testPropertyKratosSelfserviceFlowsRegistrationLoginHints()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsRegistrationUiUrl"
     */
    public function testPropertyKratosSelfserviceFlowsRegistrationUiUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsSettingsAfterDefaultBrowserReturnUrl"
     */
    public function testPropertyKratosSelfserviceFlowsSettingsAfterDefaultBrowserReturnUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsSettingsAfterLookupSecretDefaultBrowserReturnUrl"
     */
    public function testPropertyKratosSelfserviceFlowsSettingsAfterLookupSecretDefaultBrowserReturnUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsSettingsAfterOidcDefaultBrowserReturnUrl"
     */
    public function testPropertyKratosSelfserviceFlowsSettingsAfterOidcDefaultBrowserReturnUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsSettingsAfterPasswordDefaultBrowserReturnUrl"
     */
    public function testPropertyKratosSelfserviceFlowsSettingsAfterPasswordDefaultBrowserReturnUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsSettingsAfterProfileDefaultBrowserReturnUrl"
     */
    public function testPropertyKratosSelfserviceFlowsSettingsAfterProfileDefaultBrowserReturnUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsSettingsAfterTotpDefaultBrowserReturnUrl"
     */
    public function testPropertyKratosSelfserviceFlowsSettingsAfterTotpDefaultBrowserReturnUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsSettingsAfterWebauthnDefaultBrowserReturnUrl"
     */
    public function testPropertyKratosSelfserviceFlowsSettingsAfterWebauthnDefaultBrowserReturnUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsSettingsLifespan"
     */
    public function testPropertyKratosSelfserviceFlowsSettingsLifespan()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsSettingsPrivilegedSessionMaxAge"
     */
    public function testPropertyKratosSelfserviceFlowsSettingsPrivilegedSessionMaxAge()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsSettingsRequiredAal"
     */
    public function testPropertyKratosSelfserviceFlowsSettingsRequiredAal()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsSettingsUiUrl"
     */
    public function testPropertyKratosSelfserviceFlowsSettingsUiUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsVerificationAfterDefaultBrowserReturnUrl"
     */
    public function testPropertyKratosSelfserviceFlowsVerificationAfterDefaultBrowserReturnUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsVerificationEnabled"
     */
    public function testPropertyKratosSelfserviceFlowsVerificationEnabled()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsVerificationLifespan"
     */
    public function testPropertyKratosSelfserviceFlowsVerificationLifespan()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsVerificationNotifyUnknownRecipients"
     */
    public function testPropertyKratosSelfserviceFlowsVerificationNotifyUnknownRecipients()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsVerificationUiUrl"
     */
    public function testPropertyKratosSelfserviceFlowsVerificationUiUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceFlowsVerificationUse"
     */
    public function testPropertyKratosSelfserviceFlowsVerificationUse()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceMethodsCodeConfigLifespan"
     */
    public function testPropertyKratosSelfserviceMethodsCodeConfigLifespan()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceMethodsCodeEnabled"
     */
    public function testPropertyKratosSelfserviceMethodsCodeEnabled()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceMethodsCodeMfaEnabled"
     */
    public function testPropertyKratosSelfserviceMethodsCodeMfaEnabled()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceMethodsCodePasswordlessEnabled"
     */
    public function testPropertyKratosSelfserviceMethodsCodePasswordlessEnabled()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceMethodsLinkConfigBaseUrl"
     */
    public function testPropertyKratosSelfserviceMethodsLinkConfigBaseUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceMethodsLinkConfigLifespan"
     */
    public function testPropertyKratosSelfserviceMethodsLinkConfigLifespan()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceMethodsLinkEnabled"
     */
    public function testPropertyKratosSelfserviceMethodsLinkEnabled()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceMethodsLookupSecretEnabled"
     */
    public function testPropertyKratosSelfserviceMethodsLookupSecretEnabled()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceMethodsOidcConfigBaseRedirectUri"
     */
    public function testPropertyKratosSelfserviceMethodsOidcConfigBaseRedirectUri()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceMethodsOidcConfigProviders"
     */
    public function testPropertyKratosSelfserviceMethodsOidcConfigProviders()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceMethodsOidcEnabled"
     */
    public function testPropertyKratosSelfserviceMethodsOidcEnabled()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceMethodsPasswordConfigHaveibeenpwnedEnabled"
     */
    public function testPropertyKratosSelfserviceMethodsPasswordConfigHaveibeenpwnedEnabled()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceMethodsPasswordConfigIdentifierSimilarityCheckEnabled"
     */
    public function testPropertyKratosSelfserviceMethodsPasswordConfigIdentifierSimilarityCheckEnabled()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceMethodsPasswordConfigIgnoreNetworkErrors"
     */
    public function testPropertyKratosSelfserviceMethodsPasswordConfigIgnoreNetworkErrors()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceMethodsPasswordConfigMaxBreaches"
     */
    public function testPropertyKratosSelfserviceMethodsPasswordConfigMaxBreaches()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceMethodsPasswordConfigMinPasswordLength"
     */
    public function testPropertyKratosSelfserviceMethodsPasswordConfigMinPasswordLength()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceMethodsPasswordEnabled"
     */
    public function testPropertyKratosSelfserviceMethodsPasswordEnabled()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceMethodsProfileEnabled"
     */
    public function testPropertyKratosSelfserviceMethodsProfileEnabled()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceMethodsTotpConfigIssuer"
     */
    public function testPropertyKratosSelfserviceMethodsTotpConfigIssuer()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceMethodsTotpEnabled"
     */
    public function testPropertyKratosSelfserviceMethodsTotpEnabled()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceMethodsWebauthnConfigPasswordless"
     */
    public function testPropertyKratosSelfserviceMethodsWebauthnConfigPasswordless()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceMethodsWebauthnConfigRpDisplayName"
     */
    public function testPropertyKratosSelfserviceMethodsWebauthnConfigRpDisplayName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceMethodsWebauthnConfigRpIcon"
     */
    public function testPropertyKratosSelfserviceMethodsWebauthnConfigRpIcon()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceMethodsWebauthnConfigRpId"
     */
    public function testPropertyKratosSelfserviceMethodsWebauthnConfigRpId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceMethodsWebauthnConfigRpOrigins"
     */
    public function testPropertyKratosSelfserviceMethodsWebauthnConfigRpOrigins()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSelfserviceMethodsWebauthnEnabled"
     */
    public function testPropertyKratosSelfserviceMethodsWebauthnEnabled()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSessionCookiePersistent"
     */
    public function testPropertyKratosSessionCookiePersistent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSessionCookieSameSite"
     */
    public function testPropertyKratosSessionCookieSameSite()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSessionLifespan"
     */
    public function testPropertyKratosSessionLifespan()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSessionWhoamiRequiredAal"
     */
    public function testPropertyKratosSessionWhoamiRequiredAal()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kratosSessionWhoamiTokenizerTemplates"
     */
    public function testPropertyKratosSessionWhoamiTokenizerTemplates()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "name"
     */
    public function testPropertyName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "projectId"
     */
    public function testPropertyProjectId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "projectRevisionHooks"
     */
    public function testPropertyProjectRevisionHooks()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "serveAdminCorsAllowedOrigins"
     */
    public function testPropertyServeAdminCorsAllowedOrigins()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "serveAdminCorsEnabled"
     */
    public function testPropertyServeAdminCorsEnabled()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "servePublicCorsAllowedOrigins"
     */
    public function testPropertyServePublicCorsAllowedOrigins()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "servePublicCorsEnabled"
     */
    public function testPropertyServePublicCorsEnabled()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "strictSecurity"
     */
    public function testPropertyStrictSecurity()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "updatedAt"
     */
    public function testPropertyUpdatedAt()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "workspaceId"
     */
    public function testPropertyWorkspaceId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
