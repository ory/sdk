<?php
/**
 * AccountExperienceColorsTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Ory\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Ory APIs
 *
 * # Introduction Documentation for all public and administrative Ory APIs. Administrative APIs can only be accessed with a valid Personal Access Token. Public APIs are mostly used in browsers.  ## SDKs This document describes the APIs available in the Ory Network. The APIs are available as SDKs for the following languages:  | Language       | Download SDK                                                     | Documentation                                                                        | | -------------- | ---------------------------------------------------------------- | ------------------------------------------------------------------------------------ | | Dart           | [pub.dev](https://pub.dev/packages/ory_client)                   | [README](https://github.com/ory/sdk/blob/master/clients/client/dart/README.md)       | | .NET           | [nuget.org](https://www.nuget.org/packages/Ory.Client/)          | [README](https://github.com/ory/sdk/blob/master/clients/client/dotnet/README.md)     | | Elixir         | [hex.pm](https://hex.pm/packages/ory_client)                     | [README](https://github.com/ory/sdk/blob/master/clients/client/elixir/README.md)     | | Go             | [github.com](https://github.com/ory/client-go)                   | [README](https://github.com/ory/sdk/blob/master/clients/client/go/README.md)         | | Java           | [maven.org](https://search.maven.org/artifact/sh.ory/ory-client) | [README](https://github.com/ory/sdk/blob/master/clients/client/java/README.md)       | | JavaScript     | [npmjs.com](https://www.npmjs.com/package/@ory/client)           | [README](https://github.com/ory/sdk/blob/master/clients/client/typescript/README.md) | | JavaScript (With fetch) | [npmjs.com](https://www.npmjs.com/package/@ory/client-fetch)           | [README](https://github.com/ory/sdk/blob/master/clients/client/typescript-fetch/README.md) |  | PHP            | [packagist.org](https://packagist.org/packages/ory/client)       | [README](https://github.com/ory/sdk/blob/master/clients/client/php/README.md)        | | Python         | [pypi.org](https://pypi.org/project/ory-client/)                 | [README](https://github.com/ory/sdk/blob/master/clients/client/python/README.md)     | | Ruby           | [rubygems.org](https://rubygems.org/gems/ory-client)             | [README](https://github.com/ory/sdk/blob/master/clients/client/ruby/README.md)       | | Rust           | [crates.io](https://crates.io/crates/ory-client)                 | [README](https://github.com/ory/sdk/blob/master/clients/client/rust/README.md)       |
 *
 * The version of the OpenAPI document: v1.21.5
 * Contact: support@ory.sh
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.12.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace Ory\Client\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * AccountExperienceColorsTest Class Doc Comment
 *
 * @category    Class
 * @description AccountExperienceColors
 * @package     Ory\Client
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class AccountExperienceColorsTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "AccountExperienceColors"
     */
    public function testAccountExperienceColors()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "axBackgroundDefault"
     */
    public function testPropertyAxBackgroundDefault()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "brand100"
     */
    public function testPropertyBrand100()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "brand200"
     */
    public function testPropertyBrand200()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "brand300"
     */
    public function testPropertyBrand300()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "brand400"
     */
    public function testPropertyBrand400()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "brand50"
     */
    public function testPropertyBrand50()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "brand500"
     */
    public function testPropertyBrand500()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "brand600"
     */
    public function testPropertyBrand600()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "brand700"
     */
    public function testPropertyBrand700()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "brand800"
     */
    public function testPropertyBrand800()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "brand900"
     */
    public function testPropertyBrand900()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "brand950"
     */
    public function testPropertyBrand950()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "buttonIdentifierBackgroundDefault"
     */
    public function testPropertyButtonIdentifierBackgroundDefault()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "buttonIdentifierBackgroundHover"
     */
    public function testPropertyButtonIdentifierBackgroundHover()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "buttonIdentifierBorderBorderDefault"
     */
    public function testPropertyButtonIdentifierBorderBorderDefault()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "buttonIdentifierBorderBorderHover"
     */
    public function testPropertyButtonIdentifierBorderBorderHover()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "buttonIdentifierForegroundDefault"
     */
    public function testPropertyButtonIdentifierForegroundDefault()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "buttonIdentifierForegroundHover"
     */
    public function testPropertyButtonIdentifierForegroundHover()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "buttonLinkBrandBrand"
     */
    public function testPropertyButtonLinkBrandBrand()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "buttonLinkBrandBrandHover"
     */
    public function testPropertyButtonLinkBrandBrandHover()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "buttonLinkDefaultPrimary"
     */
    public function testPropertyButtonLinkDefaultPrimary()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "buttonLinkDefaultPrimaryHover"
     */
    public function testPropertyButtonLinkDefaultPrimaryHover()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "buttonLinkDefaultSecondary"
     */
    public function testPropertyButtonLinkDefaultSecondary()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "buttonLinkDefaultSecondaryHover"
     */
    public function testPropertyButtonLinkDefaultSecondaryHover()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "buttonLinkDisabledDisabled"
     */
    public function testPropertyButtonLinkDisabledDisabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "buttonPrimaryBackgroundDefault"
     */
    public function testPropertyButtonPrimaryBackgroundDefault()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "buttonPrimaryBackgroundDisabled"
     */
    public function testPropertyButtonPrimaryBackgroundDisabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "buttonPrimaryBackgroundHover"
     */
    public function testPropertyButtonPrimaryBackgroundHover()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "buttonPrimaryBorderDefault"
     */
    public function testPropertyButtonPrimaryBorderDefault()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "buttonPrimaryBorderDisabled"
     */
    public function testPropertyButtonPrimaryBorderDisabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "buttonPrimaryBorderHover"
     */
    public function testPropertyButtonPrimaryBorderHover()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "buttonPrimaryForegroundDefault"
     */
    public function testPropertyButtonPrimaryForegroundDefault()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "buttonPrimaryForegroundDisabled"
     */
    public function testPropertyButtonPrimaryForegroundDisabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "buttonPrimaryForegroundHover"
     */
    public function testPropertyButtonPrimaryForegroundHover()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "buttonSecondaryBackgroundDefault"
     */
    public function testPropertyButtonSecondaryBackgroundDefault()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "buttonSecondaryBackgroundDisabled"
     */
    public function testPropertyButtonSecondaryBackgroundDisabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "buttonSecondaryBackgroundHover"
     */
    public function testPropertyButtonSecondaryBackgroundHover()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "buttonSecondaryBorderDefault"
     */
    public function testPropertyButtonSecondaryBorderDefault()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "buttonSecondaryBorderDisabled"
     */
    public function testPropertyButtonSecondaryBorderDisabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "buttonSecondaryBorderHover"
     */
    public function testPropertyButtonSecondaryBorderHover()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "buttonSecondaryForegroundDefault"
     */
    public function testPropertyButtonSecondaryForegroundDefault()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "buttonSecondaryForegroundDisabled"
     */
    public function testPropertyButtonSecondaryForegroundDisabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "buttonSecondaryForegroundHover"
     */
    public function testPropertyButtonSecondaryForegroundHover()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "buttonSocialBackgroundDefault"
     */
    public function testPropertyButtonSocialBackgroundDefault()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "buttonSocialBackgroundDisabled"
     */
    public function testPropertyButtonSocialBackgroundDisabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "buttonSocialBackgroundGenericProvider"
     */
    public function testPropertyButtonSocialBackgroundGenericProvider()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "buttonSocialBackgroundHover"
     */
    public function testPropertyButtonSocialBackgroundHover()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "buttonSocialBorderDefault"
     */
    public function testPropertyButtonSocialBorderDefault()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "buttonSocialBorderDisabled"
     */
    public function testPropertyButtonSocialBorderDisabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "buttonSocialBorderGenericProvider"
     */
    public function testPropertyButtonSocialBorderGenericProvider()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "buttonSocialBorderHover"
     */
    public function testPropertyButtonSocialBorderHover()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "buttonSocialForegroundDefault"
     */
    public function testPropertyButtonSocialForegroundDefault()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "buttonSocialForegroundDisabled"
     */
    public function testPropertyButtonSocialForegroundDisabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "buttonSocialForegroundGenericProvider"
     */
    public function testPropertyButtonSocialForegroundGenericProvider()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "buttonSocialForegroundHover"
     */
    public function testPropertyButtonSocialForegroundHover()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "checkboxBackgroundChecked"
     */
    public function testPropertyCheckboxBackgroundChecked()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "checkboxBackgroundDefault"
     */
    public function testPropertyCheckboxBackgroundDefault()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "checkboxBorderCheckboxBorderChecked"
     */
    public function testPropertyCheckboxBorderCheckboxBorderChecked()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "checkboxBorderCheckboxBorderDefault"
     */
    public function testPropertyCheckboxBorderCheckboxBorderDefault()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "checkboxForegroundChecked"
     */
    public function testPropertyCheckboxForegroundChecked()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "checkboxForegroundDefault"
     */
    public function testPropertyCheckboxForegroundDefault()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "formBackgroundDefault"
     */
    public function testPropertyFormBackgroundDefault()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "formBorderDefault"
     */
    public function testPropertyFormBorderDefault()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "inputBackgroundDefault"
     */
    public function testPropertyInputBackgroundDefault()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "inputBackgroundDisabled"
     */
    public function testPropertyInputBackgroundDisabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "inputBackgroundHover"
     */
    public function testPropertyInputBackgroundHover()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "inputBorderDefault"
     */
    public function testPropertyInputBorderDefault()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "inputBorderDisabled"
     */
    public function testPropertyInputBorderDisabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "inputBorderFocus"
     */
    public function testPropertyInputBorderFocus()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "inputBorderHover"
     */
    public function testPropertyInputBorderHover()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "inputForegroundDisabled"
     */
    public function testPropertyInputForegroundDisabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "inputForegroundPrimary"
     */
    public function testPropertyInputForegroundPrimary()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "inputForegroundSecondary"
     */
    public function testPropertyInputForegroundSecondary()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "inputForegroundTertiary"
     */
    public function testPropertyInputForegroundTertiary()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "interfaceBackgroundBrandPrimary"
     */
    public function testPropertyInterfaceBackgroundBrandPrimary()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "interfaceBackgroundBrandPrimaryHover"
     */
    public function testPropertyInterfaceBackgroundBrandPrimaryHover()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "interfaceBackgroundBrandSecondary"
     */
    public function testPropertyInterfaceBackgroundBrandSecondary()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "interfaceBackgroundBrandSecondaryHover"
     */
    public function testPropertyInterfaceBackgroundBrandSecondaryHover()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "interfaceBackgroundDefaultInverted"
     */
    public function testPropertyInterfaceBackgroundDefaultInverted()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "interfaceBackgroundDefaultInvertedHover"
     */
    public function testPropertyInterfaceBackgroundDefaultInvertedHover()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "interfaceBackgroundDefaultNone"
     */
    public function testPropertyInterfaceBackgroundDefaultNone()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "interfaceBackgroundDefaultPrimary"
     */
    public function testPropertyInterfaceBackgroundDefaultPrimary()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "interfaceBackgroundDefaultPrimaryHover"
     */
    public function testPropertyInterfaceBackgroundDefaultPrimaryHover()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "interfaceBackgroundDefaultSecondary"
     */
    public function testPropertyInterfaceBackgroundDefaultSecondary()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "interfaceBackgroundDefaultSecondaryHover"
     */
    public function testPropertyInterfaceBackgroundDefaultSecondaryHover()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "interfaceBackgroundDefaultTertiary"
     */
    public function testPropertyInterfaceBackgroundDefaultTertiary()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "interfaceBackgroundDefaultTertiaryHover"
     */
    public function testPropertyInterfaceBackgroundDefaultTertiaryHover()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "interfaceBackgroundDisabledDisabled"
     */
    public function testPropertyInterfaceBackgroundDisabledDisabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "interfaceBackgroundValidationDanger"
     */
    public function testPropertyInterfaceBackgroundValidationDanger()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "interfaceBackgroundValidationSuccess"
     */
    public function testPropertyInterfaceBackgroundValidationSuccess()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "interfaceBackgroundValidationWarning"
     */
    public function testPropertyInterfaceBackgroundValidationWarning()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "interfaceBorderBrandBrand"
     */
    public function testPropertyInterfaceBorderBrandBrand()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "interfaceBorderDefaultInverted"
     */
    public function testPropertyInterfaceBorderDefaultInverted()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "interfaceBorderDefaultNone"
     */
    public function testPropertyInterfaceBorderDefaultNone()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "interfaceBorderDefaultPrimary"
     */
    public function testPropertyInterfaceBorderDefaultPrimary()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "interfaceBorderDisabledDisabled"
     */
    public function testPropertyInterfaceBorderDisabledDisabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "interfaceBorderValidationDanger"
     */
    public function testPropertyInterfaceBorderValidationDanger()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "interfaceBorderValidationSuccess"
     */
    public function testPropertyInterfaceBorderValidationSuccess()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "interfaceBorderValidationWarning"
     */
    public function testPropertyInterfaceBorderValidationWarning()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "interfaceForegroundBrandOnPrimary"
     */
    public function testPropertyInterfaceForegroundBrandOnPrimary()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "interfaceForegroundBrandOnSecondary"
     */
    public function testPropertyInterfaceForegroundBrandOnSecondary()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "interfaceForegroundBrandPrimary"
     */
    public function testPropertyInterfaceForegroundBrandPrimary()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "interfaceForegroundBrandSecondary"
     */
    public function testPropertyInterfaceForegroundBrandSecondary()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "interfaceForegroundDefaultInverted"
     */
    public function testPropertyInterfaceForegroundDefaultInverted()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "interfaceForegroundDefaultPrimary"
     */
    public function testPropertyInterfaceForegroundDefaultPrimary()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "interfaceForegroundDefaultSecondary"
     */
    public function testPropertyInterfaceForegroundDefaultSecondary()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "interfaceForegroundDefaultTertiary"
     */
    public function testPropertyInterfaceForegroundDefaultTertiary()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "interfaceForegroundDisabledDisabled"
     */
    public function testPropertyInterfaceForegroundDisabledDisabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "interfaceForegroundDisabledOnDisabled"
     */
    public function testPropertyInterfaceForegroundDisabledOnDisabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "interfaceForegroundValidationDanger"
     */
    public function testPropertyInterfaceForegroundValidationDanger()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "interfaceForegroundValidationSuccess"
     */
    public function testPropertyInterfaceForegroundValidationSuccess()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "interfaceForegroundValidationWarning"
     */
    public function testPropertyInterfaceForegroundValidationWarning()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "oryBackgroundDefault"
     */
    public function testPropertyOryBackgroundDefault()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "oryBorderDefault"
     */
    public function testPropertyOryBorderDefault()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "oryForegroundDefault"
     */
    public function testPropertyOryForegroundDefault()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "radioBackgroundChecked"
     */
    public function testPropertyRadioBackgroundChecked()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "radioBackgroundDefault"
     */
    public function testPropertyRadioBackgroundDefault()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "radioBorderChecked"
     */
    public function testPropertyRadioBorderChecked()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "radioBorderDefault"
     */
    public function testPropertyRadioBorderDefault()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "radioForegroundChecked"
     */
    public function testPropertyRadioForegroundChecked()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "radioForegroundDefault"
     */
    public function testPropertyRadioForegroundDefault()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "toggleBackgroundChecked"
     */
    public function testPropertyToggleBackgroundChecked()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "toggleBackgroundDefault"
     */
    public function testPropertyToggleBackgroundDefault()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "toggleBorderChecked"
     */
    public function testPropertyToggleBorderChecked()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "toggleBorderDefault"
     */
    public function testPropertyToggleBorderDefault()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "toggleForegroundChecked"
     */
    public function testPropertyToggleForegroundChecked()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "toggleForegroundDefault"
     */
    public function testPropertyToggleForegroundDefault()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ui100"
     */
    public function testPropertyUi100()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ui200"
     */
    public function testPropertyUi200()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ui300"
     */
    public function testPropertyUi300()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ui400"
     */
    public function testPropertyUi400()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ui50"
     */
    public function testPropertyUi50()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ui500"
     */
    public function testPropertyUi500()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ui600"
     */
    public function testPropertyUi600()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ui700"
     */
    public function testPropertyUi700()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ui800"
     */
    public function testPropertyUi800()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ui900"
     */
    public function testPropertyUi900()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ui950"
     */
    public function testPropertyUi950()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "uiBlack"
     */
    public function testPropertyUiBlack()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "uiDanger"
     */
    public function testPropertyUiDanger()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "uiSuccess"
     */
    public function testPropertyUiSuccess()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "uiTransparent"
     */
    public function testPropertyUiTransparent()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "uiWarning"
     */
    public function testPropertyUiWarning()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "uiWhite"
     */
    public function testPropertyUiWhite()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
