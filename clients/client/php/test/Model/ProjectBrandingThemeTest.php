<?php
/**
 * ProjectBrandingThemeTest
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  Ory\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Ory APIs
 *
 * Documentation for all public and administrative Ory APIs. Administrative APIs can only be accessed with a valid Personal Access Token. Public APIs are mostly used in browsers.
 *
 * The version of the OpenAPI document: v1.1.25
 * Contact: support@ory.sh
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace Ory\Client\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * ProjectBrandingThemeTest Class Doc Comment
 *
 * @category    Class
 * @description The Project Branding Theme
 * @package     Ory\Client
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class ProjectBrandingThemeTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "ProjectBrandingTheme"
     */
    public function testProjectBrandingTheme()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "accentDefaultColor"
     */
    public function testPropertyAccentDefaultColor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "accentDisabledColor"
     */
    public function testPropertyAccentDisabledColor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "accentEmphasisColor"
     */
    public function testPropertyAccentEmphasisColor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "accentMutedColor"
     */
    public function testPropertyAccentMutedColor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "accentSubtleColor"
     */
    public function testPropertyAccentSubtleColor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "backgroundCanvasColor"
     */
    public function testPropertyBackgroundCanvasColor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "backgroundSubtleColor"
     */
    public function testPropertyBackgroundSubtleColor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "backgroundSurfaceColor"
     */
    public function testPropertyBackgroundSurfaceColor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "borderDefaultColor"
     */
    public function testPropertyBorderDefaultColor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "createdAt"
     */
    public function testPropertyCreatedAt()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "errorDefaultColor"
     */
    public function testPropertyErrorDefaultColor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "errorEmphasisColor"
     */
    public function testPropertyErrorEmphasisColor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "errorMutedColor"
     */
    public function testPropertyErrorMutedColor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "errorSubtleColor"
     */
    public function testPropertyErrorSubtleColor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "foregroundDefaultColor"
     */
    public function testPropertyForegroundDefaultColor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "foregroundDisabledColor"
     */
    public function testPropertyForegroundDisabledColor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "foregroundMutedColor"
     */
    public function testPropertyForegroundMutedColor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "foregroundOnAccentColor"
     */
    public function testPropertyForegroundOnAccentColor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "foregroundOnDarkColor"
     */
    public function testPropertyForegroundOnDarkColor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "foregroundOnDisabledColor"
     */
    public function testPropertyForegroundOnDisabledColor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "foregroundSubtleColor"
     */
    public function testPropertyForegroundSubtleColor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "inputBackgroundColor"
     */
    public function testPropertyInputBackgroundColor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "inputDisabledColor"
     */
    public function testPropertyInputDisabledColor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "inputPlaceholderColor"
     */
    public function testPropertyInputPlaceholderColor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "inputTextColor"
     */
    public function testPropertyInputTextColor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "logoType"
     */
    public function testPropertyLogoType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "logoUrl"
     */
    public function testPropertyLogoUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "name"
     */
    public function testPropertyName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "primaryColor"
     */
    public function testPropertyPrimaryColor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "projectBrandingId"
     */
    public function testPropertyProjectBrandingId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "secondaryColor"
     */
    public function testPropertySecondaryColor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "successEmphasisColor"
     */
    public function testPropertySuccessEmphasisColor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "textDefaultColor"
     */
    public function testPropertyTextDefaultColor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "textDisabledColor"
     */
    public function testPropertyTextDisabledColor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "updatedAt"
     */
    public function testPropertyUpdatedAt()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
