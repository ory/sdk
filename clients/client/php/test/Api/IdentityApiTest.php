<?php
/**
 * IdentityApiTest
 * PHP version 7.3
 *
 * @category Class
 * @package  Ory\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Ory APIs
 *
 * Documentation for all public and administrative Ory APIs. Administrative APIs can only be accessed with a valid Personal Access Token. Public APIs are mostly used in browsers.
 *
 * The version of the OpenAPI document: v1.1.25
 * Contact: support@ory.sh
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Ory\Client\Test\Api;

use \Ory\Client\Configuration;
use \Ory\Client\ApiException;
use \Ory\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * IdentityApiTest Class Doc Comment
 *
 * @category Class
 * @package  Ory\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class IdentityApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for batchPatchIdentities
     *
     * Create and deletes multiple identities.
     *
     */
    public function testBatchPatchIdentities()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createIdentity
     *
     * Create an Identity.
     *
     */
    public function testCreateIdentity()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createRecoveryCodeForIdentity
     *
     * Create a Recovery Code.
     *
     */
    public function testCreateRecoveryCodeForIdentity()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createRecoveryLinkForIdentity
     *
     * Create a Recovery Link.
     *
     */
    public function testCreateRecoveryLinkForIdentity()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteIdentity
     *
     * Delete an Identity.
     *
     */
    public function testDeleteIdentity()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteIdentityCredentials
     *
     * Delete a credential for a specific identity.
     *
     */
    public function testDeleteIdentityCredentials()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteIdentitySessions
     *
     * Delete & Invalidate an Identity's Sessions.
     *
     */
    public function testDeleteIdentitySessions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for disableSession
     *
     * Deactivate a Session.
     *
     */
    public function testDisableSession()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for extendSession
     *
     * Extend a Session.
     *
     */
    public function testExtendSession()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getIdentity
     *
     * Get an Identity.
     *
     */
    public function testGetIdentity()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getIdentitySchema
     *
     * Get Identity JSON Schema.
     *
     */
    public function testGetIdentitySchema()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSession
     *
     * Get Session.
     *
     */
    public function testGetSession()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listIdentities
     *
     * List Identities.
     *
     */
    public function testListIdentities()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listIdentitySchemas
     *
     * Get all Identity Schemas.
     *
     */
    public function testListIdentitySchemas()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listIdentitySessions
     *
     * List an Identity's Sessions.
     *
     */
    public function testListIdentitySessions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listSessions
     *
     * List All Sessions.
     *
     */
    public function testListSessions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patchIdentity
     *
     * Patch an Identity.
     *
     */
    public function testPatchIdentity()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateIdentity
     *
     * Update an Identity.
     *
     */
    public function testUpdateIdentity()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
