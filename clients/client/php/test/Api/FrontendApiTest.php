<?php
/**
 * FrontendApiTest
 * PHP version 7.3
 *
 * @category Class
 * @package  Ory\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Ory APIs
 *
 * Documentation for all public and administrative Ory APIs. Administrative APIs can only be accessed with a valid Personal Access Token. Public APIs are mostly used in browsers.
 *
 * The version of the OpenAPI document: v1.1.25
 * Contact: support@ory.sh
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Ory\Client\Test\Api;

use \Ory\Client\Configuration;
use \Ory\Client\ApiException;
use \Ory\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * FrontendApiTest Class Doc Comment
 *
 * @category Class
 * @package  Ory\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class FrontendApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for createBrowserLoginFlow
     *
     * Create Login Flow for Browsers.
     *
     */
    public function testCreateBrowserLoginFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createBrowserLogoutFlow
     *
     * Create a Logout URL for Browsers.
     *
     */
    public function testCreateBrowserLogoutFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createBrowserRecoveryFlow
     *
     * Create Recovery Flow for Browsers.
     *
     */
    public function testCreateBrowserRecoveryFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createBrowserRegistrationFlow
     *
     * Create Registration Flow for Browsers.
     *
     */
    public function testCreateBrowserRegistrationFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createBrowserSettingsFlow
     *
     * Create Settings Flow for Browsers.
     *
     */
    public function testCreateBrowserSettingsFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createBrowserVerificationFlow
     *
     * Create Verification Flow for Browser Clients.
     *
     */
    public function testCreateBrowserVerificationFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createNativeLoginFlow
     *
     * Create Login Flow for Native Apps.
     *
     */
    public function testCreateNativeLoginFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createNativeRecoveryFlow
     *
     * Create Recovery Flow for Native Apps.
     *
     */
    public function testCreateNativeRecoveryFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createNativeRegistrationFlow
     *
     * Create Registration Flow for Native Apps.
     *
     */
    public function testCreateNativeRegistrationFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createNativeSettingsFlow
     *
     * Create Settings Flow for Native Apps.
     *
     */
    public function testCreateNativeSettingsFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createNativeVerificationFlow
     *
     * Create Verification Flow for Native Apps.
     *
     */
    public function testCreateNativeVerificationFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for disableMyOtherSessions
     *
     * Disable my other sessions.
     *
     */
    public function testDisableMyOtherSessions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for disableMySession
     *
     * Disable one of my sessions.
     *
     */
    public function testDisableMySession()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getFlowError
     *
     * Get User-Flow Errors.
     *
     */
    public function testGetFlowError()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getLoginFlow
     *
     * Get Login Flow.
     *
     */
    public function testGetLoginFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getRecoveryFlow
     *
     * Get Recovery Flow.
     *
     */
    public function testGetRecoveryFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getRegistrationFlow
     *
     * Get Registration Flow.
     *
     */
    public function testGetRegistrationFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSettingsFlow
     *
     * Get Settings Flow.
     *
     */
    public function testGetSettingsFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getVerificationFlow
     *
     * Get Verification Flow.
     *
     */
    public function testGetVerificationFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getWebAuthnJavaScript
     *
     * Get WebAuthn JavaScript.
     *
     */
    public function testGetWebAuthnJavaScript()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listMySessions
     *
     * Get My Active Sessions.
     *
     */
    public function testListMySessions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for performNativeLogout
     *
     * Perform Logout for Native Apps.
     *
     */
    public function testPerformNativeLogout()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for toSession
     *
     * Check Who the Current HTTP Session Belongs To.
     *
     */
    public function testToSession()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateLoginFlow
     *
     * Submit a Login Flow.
     *
     */
    public function testUpdateLoginFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateLogoutFlow
     *
     * Update Logout Flow.
     *
     */
    public function testUpdateLogoutFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateRecoveryFlow
     *
     * Complete Recovery Flow.
     *
     */
    public function testUpdateRecoveryFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateRegistrationFlow
     *
     * Update Registration Flow.
     *
     */
    public function testUpdateRegistrationFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateSettingsFlow
     *
     * Complete Settings Flow.
     *
     */
    public function testUpdateSettingsFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateVerificationFlow
     *
     * Complete Verification Flow.
     *
     */
    public function testUpdateVerificationFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
