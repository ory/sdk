<?php
/**
 * ProjectApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  Ory\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Ory APIs
 *
 * Documentation for all public and administrative Ory APIs. Administrative APIs can only be accessed with a valid Personal Access Token. Public APIs are mostly used in browsers.
 *
 * The version of the OpenAPI document: v1.15.0
 * Contact: support@ory.sh
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.7.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Ory\Client\Test\Api;

use \Ory\Client\Configuration;
use \Ory\Client\ApiException;
use \Ory\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * ProjectApiTest Class Doc Comment
 *
 * @category Class
 * @package  Ory\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ProjectApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for createOrganization
     *
     * Create an Enterprise SSO Organization.
     *
     */
    public function testCreateOrganization()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createProject
     *
     * Create a Project.
     *
     */
    public function testCreateProject()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createProjectApiKey
     *
     * Create project API token.
     *
     */
    public function testCreateProjectApiKey()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteOrganization
     *
     * Delete Enterprise SSO Organization.
     *
     */
    public function testDeleteOrganization()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteProjectApiKey
     *
     * Delete project API token.
     *
     */
    public function testDeleteProjectApiKey()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganization
     *
     * Get Enterprise SSO Organization by ID.
     *
     */
    public function testGetOrganization()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getProject
     *
     * Get a Project.
     *
     */
    public function testGetProject()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getProjectMembers
     *
     * Get all members associated with this project.
     *
     */
    public function testGetProjectMembers()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listOrganizations
     *
     * List all Enterprise SSO organizations.
     *
     */
    public function testListOrganizations()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listProjectApiKeys
     *
     * List a project's API Tokens.
     *
     */
    public function testListProjectApiKeys()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listProjects
     *
     * List All Projects.
     *
     */
    public function testListProjects()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patchProject
     *
     * Patch an Ory Network Project Configuration.
     *
     */
    public function testPatchProject()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patchProjectWithRevision
     *
     * Patch an Ory Network Project Configuration based on a revision ID.
     *
     */
    public function testPatchProjectWithRevision()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for purgeProject
     *
     * Irrecoverably purge a project.
     *
     */
    public function testPurgeProject()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for removeProjectMember
     *
     * Remove a member associated with this project.
     *
     */
    public function testRemoveProjectMember()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setProject
     *
     * Update an Ory Network Project Configuration.
     *
     */
    public function testSetProject()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateOrganization
     *
     * Update an Enterprise SSO Organization.
     *
     */
    public function testUpdateOrganization()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
