<?php
/**
 * OnboardingPortalOrganization
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Ory\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Ory APIs
 *
 * # Introduction Documentation for all public and administrative Ory APIs. Administrative APIs can only be accessed with a valid Personal Access Token. Public APIs are mostly used in browsers.  ## SDKs This document describes the APIs available in the Ory Network. The APIs are available as SDKs for the following languages:  | Language       | Download SDK                                                     | Documentation                                                                        | | -------------- | ---------------------------------------------------------------- | ------------------------------------------------------------------------------------ | | Dart           | [pub.dev](https://pub.dev/packages/ory_client)                   | [README](https://github.com/ory/sdk/blob/master/clients/client/dart/README.md)       | | .NET           | [nuget.org](https://www.nuget.org/packages/Ory.Client/)          | [README](https://github.com/ory/sdk/blob/master/clients/client/dotnet/README.md)     | | Elixir         | [hex.pm](https://hex.pm/packages/ory_client)                     | [README](https://github.com/ory/sdk/blob/master/clients/client/elixir/README.md)     | | Go             | [github.com](https://github.com/ory/client-go)                   | [README](https://github.com/ory/sdk/blob/master/clients/client/go/README.md)         | | Java           | [maven.org](https://search.maven.org/artifact/sh.ory/ory-client) | [README](https://github.com/ory/sdk/blob/master/clients/client/java/README.md)       | | JavaScript     | [npmjs.com](https://www.npmjs.com/package/@ory/client)           | [README](https://github.com/ory/sdk/blob/master/clients/client/typescript/README.md) | | JavaScript (With fetch) | [npmjs.com](https://www.npmjs.com/package/@ory/client-fetch)           | [README](https://github.com/ory/sdk/blob/master/clients/client/typescript-fetch/README.md) |  | PHP            | [packagist.org](https://packagist.org/packages/ory/client)       | [README](https://github.com/ory/sdk/blob/master/clients/client/php/README.md)        | | Python         | [pypi.org](https://pypi.org/project/ory-client/)                 | [README](https://github.com/ory/sdk/blob/master/clients/client/python/README.md)     | | Ruby           | [rubygems.org](https://rubygems.org/gems/ory-client)             | [README](https://github.com/ory/sdk/blob/master/clients/client/ruby/README.md)       | | Rust           | [crates.io](https://crates.io/crates/ory-client)                 | [README](https://github.com/ory/sdk/blob/master/clients/client/rust/README.md)       |
 *
 * The version of the OpenAPI document: v1.22.6
 * Contact: support@ory.sh
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.12.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Ory\Client\Model;

use \ArrayAccess;
use \Ory\Client\ObjectSerializer;

/**
 * OnboardingPortalOrganization Class Doc Comment
 *
 * @category Class
 * @package  Ory\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class OnboardingPortalOrganization implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'onboardingPortalOrganization';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'baseUrl' => 'string',
        'kratosSelfserviceMethodsOidcConfigProviders' => '\Ory\Client\Model\NormalizedProjectRevisionThirdPartyProvider[]',
        'kratosSelfserviceMethodsSamlConfigProviders' => '\Ory\Client\Model\NormalizedProjectRevisionSAMLProvider[]',
        'organizationId' => 'string',
        'organizationLabel' => 'string',
        'revisionId' => 'string',
        'scimClients' => '\Ory\Client\Model\NormalizedProjectRevisionScimClient[]',
        'scimEnabled' => 'bool',
        'ssoEnabled' => 'bool'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'baseUrl' => null,
        'kratosSelfserviceMethodsOidcConfigProviders' => null,
        'kratosSelfserviceMethodsSamlConfigProviders' => null,
        'organizationId' => 'uuid',
        'organizationLabel' => null,
        'revisionId' => 'uuid',
        'scimClients' => null,
        'scimEnabled' => null,
        'ssoEnabled' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'baseUrl' => false,
        'kratosSelfserviceMethodsOidcConfigProviders' => false,
        'kratosSelfserviceMethodsSamlConfigProviders' => false,
        'organizationId' => false,
        'organizationLabel' => false,
        'revisionId' => false,
        'scimClients' => false,
        'scimEnabled' => false,
        'ssoEnabled' => false
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'baseUrl' => 'base_url',
        'kratosSelfserviceMethodsOidcConfigProviders' => 'kratos_selfservice_methods_oidc_config_providers',
        'kratosSelfserviceMethodsSamlConfigProviders' => 'kratos_selfservice_methods_saml_config_providers',
        'organizationId' => 'organization_id',
        'organizationLabel' => 'organization_label',
        'revisionId' => 'revision_id',
        'scimClients' => 'scim_clients',
        'scimEnabled' => 'scim_enabled',
        'ssoEnabled' => 'sso_enabled'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'baseUrl' => 'setBaseUrl',
        'kratosSelfserviceMethodsOidcConfigProviders' => 'setKratosSelfserviceMethodsOidcConfigProviders',
        'kratosSelfserviceMethodsSamlConfigProviders' => 'setKratosSelfserviceMethodsSamlConfigProviders',
        'organizationId' => 'setOrganizationId',
        'organizationLabel' => 'setOrganizationLabel',
        'revisionId' => 'setRevisionId',
        'scimClients' => 'setScimClients',
        'scimEnabled' => 'setScimEnabled',
        'ssoEnabled' => 'setSsoEnabled'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'baseUrl' => 'getBaseUrl',
        'kratosSelfserviceMethodsOidcConfigProviders' => 'getKratosSelfserviceMethodsOidcConfigProviders',
        'kratosSelfserviceMethodsSamlConfigProviders' => 'getKratosSelfserviceMethodsSamlConfigProviders',
        'organizationId' => 'getOrganizationId',
        'organizationLabel' => 'getOrganizationLabel',
        'revisionId' => 'getRevisionId',
        'scimClients' => 'getScimClients',
        'scimEnabled' => 'getScimEnabled',
        'ssoEnabled' => 'getSsoEnabled'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[]|null $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(?array $data = null)
    {
        $this->setIfExists('baseUrl', $data ?? [], null);
        $this->setIfExists('kratosSelfserviceMethodsOidcConfigProviders', $data ?? [], null);
        $this->setIfExists('kratosSelfserviceMethodsSamlConfigProviders', $data ?? [], null);
        $this->setIfExists('organizationId', $data ?? [], null);
        $this->setIfExists('organizationLabel', $data ?? [], null);
        $this->setIfExists('revisionId', $data ?? [], null);
        $this->setIfExists('scimClients', $data ?? [], null);
        $this->setIfExists('scimEnabled', $data ?? [], null);
        $this->setIfExists('ssoEnabled', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['baseUrl'] === null) {
            $invalidProperties[] = "'baseUrl' can't be null";
        }
        if ($this->container['kratosSelfserviceMethodsOidcConfigProviders'] === null) {
            $invalidProperties[] = "'kratosSelfserviceMethodsOidcConfigProviders' can't be null";
        }
        if ($this->container['kratosSelfserviceMethodsSamlConfigProviders'] === null) {
            $invalidProperties[] = "'kratosSelfserviceMethodsSamlConfigProviders' can't be null";
        }
        if ($this->container['revisionId'] === null) {
            $invalidProperties[] = "'revisionId' can't be null";
        }
        if ($this->container['scimClients'] === null) {
            $invalidProperties[] = "'scimClients' can't be null";
        }
        if ($this->container['scimEnabled'] === null) {
            $invalidProperties[] = "'scimEnabled' can't be null";
        }
        if ($this->container['ssoEnabled'] === null) {
            $invalidProperties[] = "'ssoEnabled' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets baseUrl
     *
     * @return string
     */
    public function getBaseUrl()
    {
        return $this->container['baseUrl'];
    }

    /**
     * Sets baseUrl
     *
     * @param string $baseUrl baseUrl
     *
     * @return self
     */
    public function setBaseUrl($baseUrl)
    {
        if (is_null($baseUrl)) {
            throw new \InvalidArgumentException('non-nullable baseUrl cannot be null');
        }
        $this->container['baseUrl'] = $baseUrl;

        return $this;
    }

    /**
     * Gets kratosSelfserviceMethodsOidcConfigProviders
     *
     * @return \Ory\Client\Model\NormalizedProjectRevisionThirdPartyProvider[]
     */
    public function getKratosSelfserviceMethodsOidcConfigProviders()
    {
        return $this->container['kratosSelfserviceMethodsOidcConfigProviders'];
    }

    /**
     * Sets kratosSelfserviceMethodsOidcConfigProviders
     *
     * @param \Ory\Client\Model\NormalizedProjectRevisionThirdPartyProvider[] $kratosSelfserviceMethodsOidcConfigProviders kratosSelfserviceMethodsOidcConfigProviders
     *
     * @return self
     */
    public function setKratosSelfserviceMethodsOidcConfigProviders($kratosSelfserviceMethodsOidcConfigProviders)
    {
        if (is_null($kratosSelfserviceMethodsOidcConfigProviders)) {
            throw new \InvalidArgumentException('non-nullable kratosSelfserviceMethodsOidcConfigProviders cannot be null');
        }
        $this->container['kratosSelfserviceMethodsOidcConfigProviders'] = $kratosSelfserviceMethodsOidcConfigProviders;

        return $this;
    }

    /**
     * Gets kratosSelfserviceMethodsSamlConfigProviders
     *
     * @return \Ory\Client\Model\NormalizedProjectRevisionSAMLProvider[]
     */
    public function getKratosSelfserviceMethodsSamlConfigProviders()
    {
        return $this->container['kratosSelfserviceMethodsSamlConfigProviders'];
    }

    /**
     * Sets kratosSelfserviceMethodsSamlConfigProviders
     *
     * @param \Ory\Client\Model\NormalizedProjectRevisionSAMLProvider[] $kratosSelfserviceMethodsSamlConfigProviders kratosSelfserviceMethodsSamlConfigProviders
     *
     * @return self
     */
    public function setKratosSelfserviceMethodsSamlConfigProviders($kratosSelfserviceMethodsSamlConfigProviders)
    {
        if (is_null($kratosSelfserviceMethodsSamlConfigProviders)) {
            throw new \InvalidArgumentException('non-nullable kratosSelfserviceMethodsSamlConfigProviders cannot be null');
        }
        $this->container['kratosSelfserviceMethodsSamlConfigProviders'] = $kratosSelfserviceMethodsSamlConfigProviders;

        return $this;
    }

    /**
     * Gets organizationId
     *
     * @return string|null
     */
    public function getOrganizationId()
    {
        return $this->container['organizationId'];
    }

    /**
     * Sets organizationId
     *
     * @param string|null $organizationId Organization ID
     *
     * @return self
     */
    public function setOrganizationId($organizationId)
    {
        if (is_null($organizationId)) {
            throw new \InvalidArgumentException('non-nullable organizationId cannot be null');
        }
        $this->container['organizationId'] = $organizationId;

        return $this;
    }

    /**
     * Gets organizationLabel
     *
     * @return string|null
     */
    public function getOrganizationLabel()
    {
        return $this->container['organizationLabel'];
    }

    /**
     * Sets organizationLabel
     *
     * @param string|null $organizationLabel Organization Label
     *
     * @return self
     */
    public function setOrganizationLabel($organizationLabel)
    {
        if (is_null($organizationLabel)) {
            throw new \InvalidArgumentException('non-nullable organizationLabel cannot be null');
        }
        $this->container['organizationLabel'] = $organizationLabel;

        return $this;
    }

    /**
     * Gets revisionId
     *
     * @return string
     */
    public function getRevisionId()
    {
        return $this->container['revisionId'];
    }

    /**
     * Sets revisionId
     *
     * @param string $revisionId revisionId
     *
     * @return self
     */
    public function setRevisionId($revisionId)
    {
        if (is_null($revisionId)) {
            throw new \InvalidArgumentException('non-nullable revisionId cannot be null');
        }
        $this->container['revisionId'] = $revisionId;

        return $this;
    }

    /**
     * Gets scimClients
     *
     * @return \Ory\Client\Model\NormalizedProjectRevisionScimClient[]
     */
    public function getScimClients()
    {
        return $this->container['scimClients'];
    }

    /**
     * Sets scimClients
     *
     * @param \Ory\Client\Model\NormalizedProjectRevisionScimClient[] $scimClients scimClients
     *
     * @return self
     */
    public function setScimClients($scimClients)
    {
        if (is_null($scimClients)) {
            throw new \InvalidArgumentException('non-nullable scimClients cannot be null');
        }
        $this->container['scimClients'] = $scimClients;

        return $this;
    }

    /**
     * Gets scimEnabled
     *
     * @return bool
     */
    public function getScimEnabled()
    {
        return $this->container['scimEnabled'];
    }

    /**
     * Sets scimEnabled
     *
     * @param bool $scimEnabled scimEnabled
     *
     * @return self
     */
    public function setScimEnabled($scimEnabled)
    {
        if (is_null($scimEnabled)) {
            throw new \InvalidArgumentException('non-nullable scimEnabled cannot be null');
        }
        $this->container['scimEnabled'] = $scimEnabled;

        return $this;
    }

    /**
     * Gets ssoEnabled
     *
     * @return bool
     */
    public function getSsoEnabled()
    {
        return $this->container['ssoEnabled'];
    }

    /**
     * Sets ssoEnabled
     *
     * @param bool $ssoEnabled ssoEnabled
     *
     * @return self
     */
    public function setSsoEnabled($ssoEnabled)
    {
        if (is_null($ssoEnabled)) {
            throw new \InvalidArgumentException('non-nullable ssoEnabled cannot be null');
        }
        $this->container['ssoEnabled'] = $ssoEnabled;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


