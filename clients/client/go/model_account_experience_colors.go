/*
Ory APIs

# Introduction Documentation for all public and administrative Ory APIs. Administrative APIs can only be accessed with a valid Personal Access Token. Public APIs are mostly used in browsers.  ## SDKs This document describes the APIs available in the Ory Network. The APIs are available as SDKs for the following languages:  | Language       | Download SDK                                                     | Documentation                                                                        | | -------------- | ---------------------------------------------------------------- | ------------------------------------------------------------------------------------ | | Dart           | [pub.dev](https://pub.dev/packages/ory_client)                   | [README](https://github.com/ory/sdk/blob/master/clients/client/dart/README.md)       | | .NET           | [nuget.org](https://www.nuget.org/packages/Ory.Client/)          | [README](https://github.com/ory/sdk/blob/master/clients/client/dotnet/README.md)     | | Elixir         | [hex.pm](https://hex.pm/packages/ory_client)                     | [README](https://github.com/ory/sdk/blob/master/clients/client/elixir/README.md)     | | Go             | [github.com](https://github.com/ory/client-go)                   | [README](https://github.com/ory/sdk/blob/master/clients/client/go/README.md)         | | Java           | [maven.org](https://search.maven.org/artifact/sh.ory/ory-client) | [README](https://github.com/ory/sdk/blob/master/clients/client/java/README.md)       | | JavaScript     | [npmjs.com](https://www.npmjs.com/package/@ory/client)           | [README](https://github.com/ory/sdk/blob/master/clients/client/typescript/README.md) | | JavaScript (With fetch) | [npmjs.com](https://www.npmjs.com/package/@ory/client-fetch)           | [README](https://github.com/ory/sdk/blob/master/clients/client/typescript-fetch/README.md) |  | PHP            | [packagist.org](https://packagist.org/packages/ory/client)       | [README](https://github.com/ory/sdk/blob/master/clients/client/php/README.md)        | | Python         | [pypi.org](https://pypi.org/project/ory-client/)                 | [README](https://github.com/ory/sdk/blob/master/clients/client/python/README.md)     | | Ruby           | [rubygems.org](https://rubygems.org/gems/ory-client)             | [README](https://github.com/ory/sdk/blob/master/clients/client/ruby/README.md)       | | Rust           | [crates.io](https://crates.io/crates/ory-client)                 | [README](https://github.com/ory/sdk/blob/master/clients/client/rust/README.md)       | 

API version: v1.21.1
Contact: support@ory.sh
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the AccountExperienceColors type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountExperienceColors{}

// AccountExperienceColors struct for AccountExperienceColors
type AccountExperienceColors struct {
	AxBackgroundDefault *string `json:"ax-background-default,omitempty"`
	Brand100 *string `json:"brand-100,omitempty"`
	Brand200 *string `json:"brand-200,omitempty"`
	Brand300 *string `json:"brand-300,omitempty"`
	Brand400 *string `json:"brand-400,omitempty"`
	Brand50 *string `json:"brand-50,omitempty"`
	Brand500 *string `json:"brand-500,omitempty"`
	Brand600 *string `json:"brand-600,omitempty"`
	Brand700 *string `json:"brand-700,omitempty"`
	Brand800 *string `json:"brand-800,omitempty"`
	Brand900 *string `json:"brand-900,omitempty"`
	Brand950 *string `json:"brand-950,omitempty"`
	ButtonIdentifierBackgroundDefault *string `json:"button-identifier-background-default,omitempty"`
	ButtonIdentifierBackgroundHover *string `json:"button-identifier-background-hover,omitempty"`
	ButtonIdentifierBorderBorderDefault *string `json:"button-identifier-border-border-default,omitempty"`
	ButtonIdentifierBorderBorderHover *string `json:"button-identifier-border-border-hover,omitempty"`
	ButtonIdentifierForegroundDefault *string `json:"button-identifier-foreground-default,omitempty"`
	ButtonIdentifierForegroundHover *string `json:"button-identifier-foreground-hover,omitempty"`
	ButtonLinkBrandBrand *string `json:"button-link-brand-brand,omitempty"`
	ButtonLinkBrandBrandHover *string `json:"button-link-brand-brand-hover,omitempty"`
	ButtonLinkDefaultPrimary *string `json:"button-link-default-primary,omitempty"`
	ButtonLinkDefaultPrimaryHover *string `json:"button-link-default-primary-hover,omitempty"`
	ButtonLinkDefaultSecondary *string `json:"button-link-default-secondary,omitempty"`
	ButtonLinkDefaultSecondaryHover *string `json:"button-link-default-secondary-hover,omitempty"`
	ButtonLinkDisabledDisabled *string `json:"button-link-disabled-disabled,omitempty"`
	ButtonPrimaryBackgroundDefault *string `json:"button-primary-background-default,omitempty"`
	ButtonPrimaryBackgroundDisabled *string `json:"button-primary-background-disabled,omitempty"`
	ButtonPrimaryBackgroundHover *string `json:"button-primary-background-hover,omitempty"`
	ButtonPrimaryBorderDefault *string `json:"button-primary-border-default,omitempty"`
	ButtonPrimaryBorderDisabled *string `json:"button-primary-border-disabled,omitempty"`
	ButtonPrimaryBorderHover *string `json:"button-primary-border-hover,omitempty"`
	ButtonPrimaryForegroundDefault *string `json:"button-primary-foreground-default,omitempty"`
	ButtonPrimaryForegroundDisabled *string `json:"button-primary-foreground-disabled,omitempty"`
	ButtonPrimaryForegroundHover *string `json:"button-primary-foreground-hover,omitempty"`
	ButtonSecondaryBackgroundDefault *string `json:"button-secondary-background-default,omitempty"`
	ButtonSecondaryBackgroundDisabled *string `json:"button-secondary-background-disabled,omitempty"`
	ButtonSecondaryBackgroundHover *string `json:"button-secondary-background-hover,omitempty"`
	ButtonSecondaryBorderDefault *string `json:"button-secondary-border-default,omitempty"`
	ButtonSecondaryBorderDisabled *string `json:"button-secondary-border-disabled,omitempty"`
	ButtonSecondaryBorderHover *string `json:"button-secondary-border-hover,omitempty"`
	ButtonSecondaryForegroundDefault *string `json:"button-secondary-foreground-default,omitempty"`
	ButtonSecondaryForegroundDisabled *string `json:"button-secondary-foreground-disabled,omitempty"`
	ButtonSecondaryForegroundHover *string `json:"button-secondary-foreground-hover,omitempty"`
	ButtonSocialBackgroundDefault *string `json:"button-social-background-default,omitempty"`
	ButtonSocialBackgroundDisabled *string `json:"button-social-background-disabled,omitempty"`
	ButtonSocialBackgroundGenericProvider *string `json:"button-social-background-generic-provider,omitempty"`
	ButtonSocialBackgroundHover *string `json:"button-social-background-hover,omitempty"`
	ButtonSocialBorderDefault *string `json:"button-social-border-default,omitempty"`
	ButtonSocialBorderDisabled *string `json:"button-social-border-disabled,omitempty"`
	ButtonSocialBorderGenericProvider *string `json:"button-social-border-generic-provider,omitempty"`
	ButtonSocialBorderHover *string `json:"button-social-border-hover,omitempty"`
	ButtonSocialForegroundDefault *string `json:"button-social-foreground-default,omitempty"`
	ButtonSocialForegroundDisabled *string `json:"button-social-foreground-disabled,omitempty"`
	ButtonSocialForegroundGenericProvider *string `json:"button-social-foreground-generic-provider,omitempty"`
	ButtonSocialForegroundHover *string `json:"button-social-foreground-hover,omitempty"`
	CheckboxBackgroundChecked *string `json:"checkbox-background-checked,omitempty"`
	CheckboxBackgroundDefault *string `json:"checkbox-background-default,omitempty"`
	CheckboxBorderCheckboxBorderChecked *string `json:"checkbox-border-checkbox-border-checked,omitempty"`
	CheckboxBorderCheckboxBorderDefault *string `json:"checkbox-border-checkbox-border-default,omitempty"`
	CheckboxForegroundChecked *string `json:"checkbox-foreground-checked,omitempty"`
	CheckboxForegroundDefault *string `json:"checkbox-foreground-default,omitempty"`
	FormBackgroundDefault *string `json:"form-background-default,omitempty"`
	FormBorderDefault *string `json:"form-border-default,omitempty"`
	InputBackgroundDefault *string `json:"input-background-default,omitempty"`
	InputBackgroundDisabled *string `json:"input-background-disabled,omitempty"`
	InputBackgroundHover *string `json:"input-background-hover,omitempty"`
	InputBorderDefault *string `json:"input-border-default,omitempty"`
	InputBorderDisabled *string `json:"input-border-disabled,omitempty"`
	InputBorderFocus *string `json:"input-border-focus,omitempty"`
	InputBorderHover *string `json:"input-border-hover,omitempty"`
	InputForegroundDisabled *string `json:"input-foreground-disabled,omitempty"`
	InputForegroundPrimary *string `json:"input-foreground-primary,omitempty"`
	InputForegroundSecondary *string `json:"input-foreground-secondary,omitempty"`
	InputForegroundTertiary *string `json:"input-foreground-tertiary,omitempty"`
	InterfaceBackgroundBrandPrimary *string `json:"interface-background-brand-primary,omitempty"`
	InterfaceBackgroundBrandPrimaryHover *string `json:"interface-background-brand-primary-hover,omitempty"`
	InterfaceBackgroundBrandSecondary *string `json:"interface-background-brand-secondary,omitempty"`
	InterfaceBackgroundBrandSecondaryHover *string `json:"interface-background-brand-secondary-hover,omitempty"`
	InterfaceBackgroundDefaultInverted *string `json:"interface-background-default-inverted,omitempty"`
	InterfaceBackgroundDefaultInvertedHover *string `json:"interface-background-default-inverted-hover,omitempty"`
	InterfaceBackgroundDefaultNone *string `json:"interface-background-default-none,omitempty"`
	InterfaceBackgroundDefaultPrimary *string `json:"interface-background-default-primary,omitempty"`
	InterfaceBackgroundDefaultPrimaryHover *string `json:"interface-background-default-primary-hover,omitempty"`
	InterfaceBackgroundDefaultSecondary *string `json:"interface-background-default-secondary,omitempty"`
	InterfaceBackgroundDefaultSecondaryHover *string `json:"interface-background-default-secondary-hover,omitempty"`
	InterfaceBackgroundDefaultTertiary *string `json:"interface-background-default-tertiary,omitempty"`
	InterfaceBackgroundDefaultTertiaryHover *string `json:"interface-background-default-tertiary-hover,omitempty"`
	InterfaceBackgroundDisabledDisabled *string `json:"interface-background-disabled-disabled,omitempty"`
	InterfaceBackgroundValidationDanger *string `json:"interface-background-validation-danger,omitempty"`
	InterfaceBackgroundValidationSuccess *string `json:"interface-background-validation-success,omitempty"`
	InterfaceBackgroundValidationWarning *string `json:"interface-background-validation-warning,omitempty"`
	InterfaceBorderBrandBrand *string `json:"interface-border-brand-brand,omitempty"`
	InterfaceBorderDefaultInverted *string `json:"interface-border-default-inverted,omitempty"`
	InterfaceBorderDefaultNone *string `json:"interface-border-default-none,omitempty"`
	InterfaceBorderDefaultPrimary *string `json:"interface-border-default-primary,omitempty"`
	InterfaceBorderDisabledDisabled *string `json:"interface-border-disabled-disabled,omitempty"`
	InterfaceBorderValidationDanger *string `json:"interface-border-validation-danger,omitempty"`
	InterfaceBorderValidationSuccess *string `json:"interface-border-validation-success,omitempty"`
	InterfaceBorderValidationWarning *string `json:"interface-border-validation-warning,omitempty"`
	InterfaceForegroundBrandOnPrimary *string `json:"interface-foreground-brand-on-primary,omitempty"`
	InterfaceForegroundBrandOnSecondary *string `json:"interface-foreground-brand-on-secondary,omitempty"`
	InterfaceForegroundBrandPrimary *string `json:"interface-foreground-brand-primary,omitempty"`
	InterfaceForegroundBrandSecondary *string `json:"interface-foreground-brand-secondary,omitempty"`
	InterfaceForegroundDefaultInverted *string `json:"interface-foreground-default-inverted,omitempty"`
	InterfaceForegroundDefaultPrimary *string `json:"interface-foreground-default-primary,omitempty"`
	InterfaceForegroundDefaultSecondary *string `json:"interface-foreground-default-secondary,omitempty"`
	InterfaceForegroundDefaultTertiary *string `json:"interface-foreground-default-tertiary,omitempty"`
	InterfaceForegroundDisabledDisabled *string `json:"interface-foreground-disabled-disabled,omitempty"`
	InterfaceForegroundDisabledOnDisabled *string `json:"interface-foreground-disabled-on-disabled,omitempty"`
	InterfaceForegroundValidationDanger *string `json:"interface-foreground-validation-danger,omitempty"`
	InterfaceForegroundValidationSuccess *string `json:"interface-foreground-validation-success,omitempty"`
	InterfaceForegroundValidationWarning *string `json:"interface-foreground-validation-warning,omitempty"`
	OryBackgroundDefault *string `json:"ory-background-default,omitempty"`
	OryBorderDefault *string `json:"ory-border-default,omitempty"`
	OryForegroundDefault *string `json:"ory-foreground-default,omitempty"`
	RadioBackgroundChecked *string `json:"radio-background-checked,omitempty"`
	RadioBackgroundDefault *string `json:"radio-background-default,omitempty"`
	RadioBorderChecked *string `json:"radio-border-checked,omitempty"`
	RadioBorderDefault *string `json:"radio-border-default,omitempty"`
	RadioForegroundChecked *string `json:"radio-foreground-checked,omitempty"`
	RadioForegroundDefault *string `json:"radio-foreground-default,omitempty"`
	ToggleBackgroundChecked *string `json:"toggle-background-checked,omitempty"`
	ToggleBackgroundDefault *string `json:"toggle-background-default,omitempty"`
	ToggleBorderChecked *string `json:"toggle-border-checked,omitempty"`
	ToggleBorderDefault *string `json:"toggle-border-default,omitempty"`
	ToggleForegroundChecked *string `json:"toggle-foreground-checked,omitempty"`
	ToggleForegroundDefault *string `json:"toggle-foreground-default,omitempty"`
	Ui100 *string `json:"ui-100,omitempty"`
	Ui200 *string `json:"ui-200,omitempty"`
	Ui300 *string `json:"ui-300,omitempty"`
	Ui400 *string `json:"ui-400,omitempty"`
	Ui50 *string `json:"ui-50,omitempty"`
	Ui500 *string `json:"ui-500,omitempty"`
	Ui600 *string `json:"ui-600,omitempty"`
	Ui700 *string `json:"ui-700,omitempty"`
	Ui800 *string `json:"ui-800,omitempty"`
	Ui900 *string `json:"ui-900,omitempty"`
	Ui950 *string `json:"ui-950,omitempty"`
	UiBlack *string `json:"ui-black,omitempty"`
	UiDanger *string `json:"ui-danger,omitempty"`
	UiSuccess *string `json:"ui-success,omitempty"`
	UiTransparent *string `json:"ui-transparent,omitempty"`
	UiWarning *string `json:"ui-warning,omitempty"`
	UiWhite *string `json:"ui-white,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AccountExperienceColors AccountExperienceColors

// NewAccountExperienceColors instantiates a new AccountExperienceColors object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountExperienceColors() *AccountExperienceColors {
	this := AccountExperienceColors{}
	return &this
}

// NewAccountExperienceColorsWithDefaults instantiates a new AccountExperienceColors object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountExperienceColorsWithDefaults() *AccountExperienceColors {
	this := AccountExperienceColors{}
	return &this
}

// GetAxBackgroundDefault returns the AxBackgroundDefault field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetAxBackgroundDefault() string {
	if o == nil || IsNil(o.AxBackgroundDefault) {
		var ret string
		return ret
	}
	return *o.AxBackgroundDefault
}

// GetAxBackgroundDefaultOk returns a tuple with the AxBackgroundDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetAxBackgroundDefaultOk() (*string, bool) {
	if o == nil || IsNil(o.AxBackgroundDefault) {
		return nil, false
	}
	return o.AxBackgroundDefault, true
}

// HasAxBackgroundDefault returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasAxBackgroundDefault() bool {
	if o != nil && !IsNil(o.AxBackgroundDefault) {
		return true
	}

	return false
}

// SetAxBackgroundDefault gets a reference to the given string and assigns it to the AxBackgroundDefault field.
func (o *AccountExperienceColors) SetAxBackgroundDefault(v string) {
	o.AxBackgroundDefault = &v
}

// GetBrand100 returns the Brand100 field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetBrand100() string {
	if o == nil || IsNil(o.Brand100) {
		var ret string
		return ret
	}
	return *o.Brand100
}

// GetBrand100Ok returns a tuple with the Brand100 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetBrand100Ok() (*string, bool) {
	if o == nil || IsNil(o.Brand100) {
		return nil, false
	}
	return o.Brand100, true
}

// HasBrand100 returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasBrand100() bool {
	if o != nil && !IsNil(o.Brand100) {
		return true
	}

	return false
}

// SetBrand100 gets a reference to the given string and assigns it to the Brand100 field.
func (o *AccountExperienceColors) SetBrand100(v string) {
	o.Brand100 = &v
}

// GetBrand200 returns the Brand200 field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetBrand200() string {
	if o == nil || IsNil(o.Brand200) {
		var ret string
		return ret
	}
	return *o.Brand200
}

// GetBrand200Ok returns a tuple with the Brand200 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetBrand200Ok() (*string, bool) {
	if o == nil || IsNil(o.Brand200) {
		return nil, false
	}
	return o.Brand200, true
}

// HasBrand200 returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasBrand200() bool {
	if o != nil && !IsNil(o.Brand200) {
		return true
	}

	return false
}

// SetBrand200 gets a reference to the given string and assigns it to the Brand200 field.
func (o *AccountExperienceColors) SetBrand200(v string) {
	o.Brand200 = &v
}

// GetBrand300 returns the Brand300 field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetBrand300() string {
	if o == nil || IsNil(o.Brand300) {
		var ret string
		return ret
	}
	return *o.Brand300
}

// GetBrand300Ok returns a tuple with the Brand300 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetBrand300Ok() (*string, bool) {
	if o == nil || IsNil(o.Brand300) {
		return nil, false
	}
	return o.Brand300, true
}

// HasBrand300 returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasBrand300() bool {
	if o != nil && !IsNil(o.Brand300) {
		return true
	}

	return false
}

// SetBrand300 gets a reference to the given string and assigns it to the Brand300 field.
func (o *AccountExperienceColors) SetBrand300(v string) {
	o.Brand300 = &v
}

// GetBrand400 returns the Brand400 field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetBrand400() string {
	if o == nil || IsNil(o.Brand400) {
		var ret string
		return ret
	}
	return *o.Brand400
}

// GetBrand400Ok returns a tuple with the Brand400 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetBrand400Ok() (*string, bool) {
	if o == nil || IsNil(o.Brand400) {
		return nil, false
	}
	return o.Brand400, true
}

// HasBrand400 returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasBrand400() bool {
	if o != nil && !IsNil(o.Brand400) {
		return true
	}

	return false
}

// SetBrand400 gets a reference to the given string and assigns it to the Brand400 field.
func (o *AccountExperienceColors) SetBrand400(v string) {
	o.Brand400 = &v
}

// GetBrand50 returns the Brand50 field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetBrand50() string {
	if o == nil || IsNil(o.Brand50) {
		var ret string
		return ret
	}
	return *o.Brand50
}

// GetBrand50Ok returns a tuple with the Brand50 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetBrand50Ok() (*string, bool) {
	if o == nil || IsNil(o.Brand50) {
		return nil, false
	}
	return o.Brand50, true
}

// HasBrand50 returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasBrand50() bool {
	if o != nil && !IsNil(o.Brand50) {
		return true
	}

	return false
}

// SetBrand50 gets a reference to the given string and assigns it to the Brand50 field.
func (o *AccountExperienceColors) SetBrand50(v string) {
	o.Brand50 = &v
}

// GetBrand500 returns the Brand500 field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetBrand500() string {
	if o == nil || IsNil(o.Brand500) {
		var ret string
		return ret
	}
	return *o.Brand500
}

// GetBrand500Ok returns a tuple with the Brand500 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetBrand500Ok() (*string, bool) {
	if o == nil || IsNil(o.Brand500) {
		return nil, false
	}
	return o.Brand500, true
}

// HasBrand500 returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasBrand500() bool {
	if o != nil && !IsNil(o.Brand500) {
		return true
	}

	return false
}

// SetBrand500 gets a reference to the given string and assigns it to the Brand500 field.
func (o *AccountExperienceColors) SetBrand500(v string) {
	o.Brand500 = &v
}

// GetBrand600 returns the Brand600 field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetBrand600() string {
	if o == nil || IsNil(o.Brand600) {
		var ret string
		return ret
	}
	return *o.Brand600
}

// GetBrand600Ok returns a tuple with the Brand600 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetBrand600Ok() (*string, bool) {
	if o == nil || IsNil(o.Brand600) {
		return nil, false
	}
	return o.Brand600, true
}

// HasBrand600 returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasBrand600() bool {
	if o != nil && !IsNil(o.Brand600) {
		return true
	}

	return false
}

// SetBrand600 gets a reference to the given string and assigns it to the Brand600 field.
func (o *AccountExperienceColors) SetBrand600(v string) {
	o.Brand600 = &v
}

// GetBrand700 returns the Brand700 field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetBrand700() string {
	if o == nil || IsNil(o.Brand700) {
		var ret string
		return ret
	}
	return *o.Brand700
}

// GetBrand700Ok returns a tuple with the Brand700 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetBrand700Ok() (*string, bool) {
	if o == nil || IsNil(o.Brand700) {
		return nil, false
	}
	return o.Brand700, true
}

// HasBrand700 returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasBrand700() bool {
	if o != nil && !IsNil(o.Brand700) {
		return true
	}

	return false
}

// SetBrand700 gets a reference to the given string and assigns it to the Brand700 field.
func (o *AccountExperienceColors) SetBrand700(v string) {
	o.Brand700 = &v
}

// GetBrand800 returns the Brand800 field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetBrand800() string {
	if o == nil || IsNil(o.Brand800) {
		var ret string
		return ret
	}
	return *o.Brand800
}

// GetBrand800Ok returns a tuple with the Brand800 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetBrand800Ok() (*string, bool) {
	if o == nil || IsNil(o.Brand800) {
		return nil, false
	}
	return o.Brand800, true
}

// HasBrand800 returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasBrand800() bool {
	if o != nil && !IsNil(o.Brand800) {
		return true
	}

	return false
}

// SetBrand800 gets a reference to the given string and assigns it to the Brand800 field.
func (o *AccountExperienceColors) SetBrand800(v string) {
	o.Brand800 = &v
}

// GetBrand900 returns the Brand900 field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetBrand900() string {
	if o == nil || IsNil(o.Brand900) {
		var ret string
		return ret
	}
	return *o.Brand900
}

// GetBrand900Ok returns a tuple with the Brand900 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetBrand900Ok() (*string, bool) {
	if o == nil || IsNil(o.Brand900) {
		return nil, false
	}
	return o.Brand900, true
}

// HasBrand900 returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasBrand900() bool {
	if o != nil && !IsNil(o.Brand900) {
		return true
	}

	return false
}

// SetBrand900 gets a reference to the given string and assigns it to the Brand900 field.
func (o *AccountExperienceColors) SetBrand900(v string) {
	o.Brand900 = &v
}

// GetBrand950 returns the Brand950 field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetBrand950() string {
	if o == nil || IsNil(o.Brand950) {
		var ret string
		return ret
	}
	return *o.Brand950
}

// GetBrand950Ok returns a tuple with the Brand950 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetBrand950Ok() (*string, bool) {
	if o == nil || IsNil(o.Brand950) {
		return nil, false
	}
	return o.Brand950, true
}

// HasBrand950 returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasBrand950() bool {
	if o != nil && !IsNil(o.Brand950) {
		return true
	}

	return false
}

// SetBrand950 gets a reference to the given string and assigns it to the Brand950 field.
func (o *AccountExperienceColors) SetBrand950(v string) {
	o.Brand950 = &v
}

// GetButtonIdentifierBackgroundDefault returns the ButtonIdentifierBackgroundDefault field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetButtonIdentifierBackgroundDefault() string {
	if o == nil || IsNil(o.ButtonIdentifierBackgroundDefault) {
		var ret string
		return ret
	}
	return *o.ButtonIdentifierBackgroundDefault
}

// GetButtonIdentifierBackgroundDefaultOk returns a tuple with the ButtonIdentifierBackgroundDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetButtonIdentifierBackgroundDefaultOk() (*string, bool) {
	if o == nil || IsNil(o.ButtonIdentifierBackgroundDefault) {
		return nil, false
	}
	return o.ButtonIdentifierBackgroundDefault, true
}

// HasButtonIdentifierBackgroundDefault returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasButtonIdentifierBackgroundDefault() bool {
	if o != nil && !IsNil(o.ButtonIdentifierBackgroundDefault) {
		return true
	}

	return false
}

// SetButtonIdentifierBackgroundDefault gets a reference to the given string and assigns it to the ButtonIdentifierBackgroundDefault field.
func (o *AccountExperienceColors) SetButtonIdentifierBackgroundDefault(v string) {
	o.ButtonIdentifierBackgroundDefault = &v
}

// GetButtonIdentifierBackgroundHover returns the ButtonIdentifierBackgroundHover field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetButtonIdentifierBackgroundHover() string {
	if o == nil || IsNil(o.ButtonIdentifierBackgroundHover) {
		var ret string
		return ret
	}
	return *o.ButtonIdentifierBackgroundHover
}

// GetButtonIdentifierBackgroundHoverOk returns a tuple with the ButtonIdentifierBackgroundHover field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetButtonIdentifierBackgroundHoverOk() (*string, bool) {
	if o == nil || IsNil(o.ButtonIdentifierBackgroundHover) {
		return nil, false
	}
	return o.ButtonIdentifierBackgroundHover, true
}

// HasButtonIdentifierBackgroundHover returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasButtonIdentifierBackgroundHover() bool {
	if o != nil && !IsNil(o.ButtonIdentifierBackgroundHover) {
		return true
	}

	return false
}

// SetButtonIdentifierBackgroundHover gets a reference to the given string and assigns it to the ButtonIdentifierBackgroundHover field.
func (o *AccountExperienceColors) SetButtonIdentifierBackgroundHover(v string) {
	o.ButtonIdentifierBackgroundHover = &v
}

// GetButtonIdentifierBorderBorderDefault returns the ButtonIdentifierBorderBorderDefault field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetButtonIdentifierBorderBorderDefault() string {
	if o == nil || IsNil(o.ButtonIdentifierBorderBorderDefault) {
		var ret string
		return ret
	}
	return *o.ButtonIdentifierBorderBorderDefault
}

// GetButtonIdentifierBorderBorderDefaultOk returns a tuple with the ButtonIdentifierBorderBorderDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetButtonIdentifierBorderBorderDefaultOk() (*string, bool) {
	if o == nil || IsNil(o.ButtonIdentifierBorderBorderDefault) {
		return nil, false
	}
	return o.ButtonIdentifierBorderBorderDefault, true
}

// HasButtonIdentifierBorderBorderDefault returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasButtonIdentifierBorderBorderDefault() bool {
	if o != nil && !IsNil(o.ButtonIdentifierBorderBorderDefault) {
		return true
	}

	return false
}

// SetButtonIdentifierBorderBorderDefault gets a reference to the given string and assigns it to the ButtonIdentifierBorderBorderDefault field.
func (o *AccountExperienceColors) SetButtonIdentifierBorderBorderDefault(v string) {
	o.ButtonIdentifierBorderBorderDefault = &v
}

// GetButtonIdentifierBorderBorderHover returns the ButtonIdentifierBorderBorderHover field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetButtonIdentifierBorderBorderHover() string {
	if o == nil || IsNil(o.ButtonIdentifierBorderBorderHover) {
		var ret string
		return ret
	}
	return *o.ButtonIdentifierBorderBorderHover
}

// GetButtonIdentifierBorderBorderHoverOk returns a tuple with the ButtonIdentifierBorderBorderHover field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetButtonIdentifierBorderBorderHoverOk() (*string, bool) {
	if o == nil || IsNil(o.ButtonIdentifierBorderBorderHover) {
		return nil, false
	}
	return o.ButtonIdentifierBorderBorderHover, true
}

// HasButtonIdentifierBorderBorderHover returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasButtonIdentifierBorderBorderHover() bool {
	if o != nil && !IsNil(o.ButtonIdentifierBorderBorderHover) {
		return true
	}

	return false
}

// SetButtonIdentifierBorderBorderHover gets a reference to the given string and assigns it to the ButtonIdentifierBorderBorderHover field.
func (o *AccountExperienceColors) SetButtonIdentifierBorderBorderHover(v string) {
	o.ButtonIdentifierBorderBorderHover = &v
}

// GetButtonIdentifierForegroundDefault returns the ButtonIdentifierForegroundDefault field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetButtonIdentifierForegroundDefault() string {
	if o == nil || IsNil(o.ButtonIdentifierForegroundDefault) {
		var ret string
		return ret
	}
	return *o.ButtonIdentifierForegroundDefault
}

// GetButtonIdentifierForegroundDefaultOk returns a tuple with the ButtonIdentifierForegroundDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetButtonIdentifierForegroundDefaultOk() (*string, bool) {
	if o == nil || IsNil(o.ButtonIdentifierForegroundDefault) {
		return nil, false
	}
	return o.ButtonIdentifierForegroundDefault, true
}

// HasButtonIdentifierForegroundDefault returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasButtonIdentifierForegroundDefault() bool {
	if o != nil && !IsNil(o.ButtonIdentifierForegroundDefault) {
		return true
	}

	return false
}

// SetButtonIdentifierForegroundDefault gets a reference to the given string and assigns it to the ButtonIdentifierForegroundDefault field.
func (o *AccountExperienceColors) SetButtonIdentifierForegroundDefault(v string) {
	o.ButtonIdentifierForegroundDefault = &v
}

// GetButtonIdentifierForegroundHover returns the ButtonIdentifierForegroundHover field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetButtonIdentifierForegroundHover() string {
	if o == nil || IsNil(o.ButtonIdentifierForegroundHover) {
		var ret string
		return ret
	}
	return *o.ButtonIdentifierForegroundHover
}

// GetButtonIdentifierForegroundHoverOk returns a tuple with the ButtonIdentifierForegroundHover field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetButtonIdentifierForegroundHoverOk() (*string, bool) {
	if o == nil || IsNil(o.ButtonIdentifierForegroundHover) {
		return nil, false
	}
	return o.ButtonIdentifierForegroundHover, true
}

// HasButtonIdentifierForegroundHover returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasButtonIdentifierForegroundHover() bool {
	if o != nil && !IsNil(o.ButtonIdentifierForegroundHover) {
		return true
	}

	return false
}

// SetButtonIdentifierForegroundHover gets a reference to the given string and assigns it to the ButtonIdentifierForegroundHover field.
func (o *AccountExperienceColors) SetButtonIdentifierForegroundHover(v string) {
	o.ButtonIdentifierForegroundHover = &v
}

// GetButtonLinkBrandBrand returns the ButtonLinkBrandBrand field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetButtonLinkBrandBrand() string {
	if o == nil || IsNil(o.ButtonLinkBrandBrand) {
		var ret string
		return ret
	}
	return *o.ButtonLinkBrandBrand
}

// GetButtonLinkBrandBrandOk returns a tuple with the ButtonLinkBrandBrand field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetButtonLinkBrandBrandOk() (*string, bool) {
	if o == nil || IsNil(o.ButtonLinkBrandBrand) {
		return nil, false
	}
	return o.ButtonLinkBrandBrand, true
}

// HasButtonLinkBrandBrand returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasButtonLinkBrandBrand() bool {
	if o != nil && !IsNil(o.ButtonLinkBrandBrand) {
		return true
	}

	return false
}

// SetButtonLinkBrandBrand gets a reference to the given string and assigns it to the ButtonLinkBrandBrand field.
func (o *AccountExperienceColors) SetButtonLinkBrandBrand(v string) {
	o.ButtonLinkBrandBrand = &v
}

// GetButtonLinkBrandBrandHover returns the ButtonLinkBrandBrandHover field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetButtonLinkBrandBrandHover() string {
	if o == nil || IsNil(o.ButtonLinkBrandBrandHover) {
		var ret string
		return ret
	}
	return *o.ButtonLinkBrandBrandHover
}

// GetButtonLinkBrandBrandHoverOk returns a tuple with the ButtonLinkBrandBrandHover field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetButtonLinkBrandBrandHoverOk() (*string, bool) {
	if o == nil || IsNil(o.ButtonLinkBrandBrandHover) {
		return nil, false
	}
	return o.ButtonLinkBrandBrandHover, true
}

// HasButtonLinkBrandBrandHover returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasButtonLinkBrandBrandHover() bool {
	if o != nil && !IsNil(o.ButtonLinkBrandBrandHover) {
		return true
	}

	return false
}

// SetButtonLinkBrandBrandHover gets a reference to the given string and assigns it to the ButtonLinkBrandBrandHover field.
func (o *AccountExperienceColors) SetButtonLinkBrandBrandHover(v string) {
	o.ButtonLinkBrandBrandHover = &v
}

// GetButtonLinkDefaultPrimary returns the ButtonLinkDefaultPrimary field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetButtonLinkDefaultPrimary() string {
	if o == nil || IsNil(o.ButtonLinkDefaultPrimary) {
		var ret string
		return ret
	}
	return *o.ButtonLinkDefaultPrimary
}

// GetButtonLinkDefaultPrimaryOk returns a tuple with the ButtonLinkDefaultPrimary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetButtonLinkDefaultPrimaryOk() (*string, bool) {
	if o == nil || IsNil(o.ButtonLinkDefaultPrimary) {
		return nil, false
	}
	return o.ButtonLinkDefaultPrimary, true
}

// HasButtonLinkDefaultPrimary returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasButtonLinkDefaultPrimary() bool {
	if o != nil && !IsNil(o.ButtonLinkDefaultPrimary) {
		return true
	}

	return false
}

// SetButtonLinkDefaultPrimary gets a reference to the given string and assigns it to the ButtonLinkDefaultPrimary field.
func (o *AccountExperienceColors) SetButtonLinkDefaultPrimary(v string) {
	o.ButtonLinkDefaultPrimary = &v
}

// GetButtonLinkDefaultPrimaryHover returns the ButtonLinkDefaultPrimaryHover field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetButtonLinkDefaultPrimaryHover() string {
	if o == nil || IsNil(o.ButtonLinkDefaultPrimaryHover) {
		var ret string
		return ret
	}
	return *o.ButtonLinkDefaultPrimaryHover
}

// GetButtonLinkDefaultPrimaryHoverOk returns a tuple with the ButtonLinkDefaultPrimaryHover field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetButtonLinkDefaultPrimaryHoverOk() (*string, bool) {
	if o == nil || IsNil(o.ButtonLinkDefaultPrimaryHover) {
		return nil, false
	}
	return o.ButtonLinkDefaultPrimaryHover, true
}

// HasButtonLinkDefaultPrimaryHover returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasButtonLinkDefaultPrimaryHover() bool {
	if o != nil && !IsNil(o.ButtonLinkDefaultPrimaryHover) {
		return true
	}

	return false
}

// SetButtonLinkDefaultPrimaryHover gets a reference to the given string and assigns it to the ButtonLinkDefaultPrimaryHover field.
func (o *AccountExperienceColors) SetButtonLinkDefaultPrimaryHover(v string) {
	o.ButtonLinkDefaultPrimaryHover = &v
}

// GetButtonLinkDefaultSecondary returns the ButtonLinkDefaultSecondary field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetButtonLinkDefaultSecondary() string {
	if o == nil || IsNil(o.ButtonLinkDefaultSecondary) {
		var ret string
		return ret
	}
	return *o.ButtonLinkDefaultSecondary
}

// GetButtonLinkDefaultSecondaryOk returns a tuple with the ButtonLinkDefaultSecondary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetButtonLinkDefaultSecondaryOk() (*string, bool) {
	if o == nil || IsNil(o.ButtonLinkDefaultSecondary) {
		return nil, false
	}
	return o.ButtonLinkDefaultSecondary, true
}

// HasButtonLinkDefaultSecondary returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasButtonLinkDefaultSecondary() bool {
	if o != nil && !IsNil(o.ButtonLinkDefaultSecondary) {
		return true
	}

	return false
}

// SetButtonLinkDefaultSecondary gets a reference to the given string and assigns it to the ButtonLinkDefaultSecondary field.
func (o *AccountExperienceColors) SetButtonLinkDefaultSecondary(v string) {
	o.ButtonLinkDefaultSecondary = &v
}

// GetButtonLinkDefaultSecondaryHover returns the ButtonLinkDefaultSecondaryHover field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetButtonLinkDefaultSecondaryHover() string {
	if o == nil || IsNil(o.ButtonLinkDefaultSecondaryHover) {
		var ret string
		return ret
	}
	return *o.ButtonLinkDefaultSecondaryHover
}

// GetButtonLinkDefaultSecondaryHoverOk returns a tuple with the ButtonLinkDefaultSecondaryHover field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetButtonLinkDefaultSecondaryHoverOk() (*string, bool) {
	if o == nil || IsNil(o.ButtonLinkDefaultSecondaryHover) {
		return nil, false
	}
	return o.ButtonLinkDefaultSecondaryHover, true
}

// HasButtonLinkDefaultSecondaryHover returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasButtonLinkDefaultSecondaryHover() bool {
	if o != nil && !IsNil(o.ButtonLinkDefaultSecondaryHover) {
		return true
	}

	return false
}

// SetButtonLinkDefaultSecondaryHover gets a reference to the given string and assigns it to the ButtonLinkDefaultSecondaryHover field.
func (o *AccountExperienceColors) SetButtonLinkDefaultSecondaryHover(v string) {
	o.ButtonLinkDefaultSecondaryHover = &v
}

// GetButtonLinkDisabledDisabled returns the ButtonLinkDisabledDisabled field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetButtonLinkDisabledDisabled() string {
	if o == nil || IsNil(o.ButtonLinkDisabledDisabled) {
		var ret string
		return ret
	}
	return *o.ButtonLinkDisabledDisabled
}

// GetButtonLinkDisabledDisabledOk returns a tuple with the ButtonLinkDisabledDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetButtonLinkDisabledDisabledOk() (*string, bool) {
	if o == nil || IsNil(o.ButtonLinkDisabledDisabled) {
		return nil, false
	}
	return o.ButtonLinkDisabledDisabled, true
}

// HasButtonLinkDisabledDisabled returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasButtonLinkDisabledDisabled() bool {
	if o != nil && !IsNil(o.ButtonLinkDisabledDisabled) {
		return true
	}

	return false
}

// SetButtonLinkDisabledDisabled gets a reference to the given string and assigns it to the ButtonLinkDisabledDisabled field.
func (o *AccountExperienceColors) SetButtonLinkDisabledDisabled(v string) {
	o.ButtonLinkDisabledDisabled = &v
}

// GetButtonPrimaryBackgroundDefault returns the ButtonPrimaryBackgroundDefault field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetButtonPrimaryBackgroundDefault() string {
	if o == nil || IsNil(o.ButtonPrimaryBackgroundDefault) {
		var ret string
		return ret
	}
	return *o.ButtonPrimaryBackgroundDefault
}

// GetButtonPrimaryBackgroundDefaultOk returns a tuple with the ButtonPrimaryBackgroundDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetButtonPrimaryBackgroundDefaultOk() (*string, bool) {
	if o == nil || IsNil(o.ButtonPrimaryBackgroundDefault) {
		return nil, false
	}
	return o.ButtonPrimaryBackgroundDefault, true
}

// HasButtonPrimaryBackgroundDefault returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasButtonPrimaryBackgroundDefault() bool {
	if o != nil && !IsNil(o.ButtonPrimaryBackgroundDefault) {
		return true
	}

	return false
}

// SetButtonPrimaryBackgroundDefault gets a reference to the given string and assigns it to the ButtonPrimaryBackgroundDefault field.
func (o *AccountExperienceColors) SetButtonPrimaryBackgroundDefault(v string) {
	o.ButtonPrimaryBackgroundDefault = &v
}

// GetButtonPrimaryBackgroundDisabled returns the ButtonPrimaryBackgroundDisabled field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetButtonPrimaryBackgroundDisabled() string {
	if o == nil || IsNil(o.ButtonPrimaryBackgroundDisabled) {
		var ret string
		return ret
	}
	return *o.ButtonPrimaryBackgroundDisabled
}

// GetButtonPrimaryBackgroundDisabledOk returns a tuple with the ButtonPrimaryBackgroundDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetButtonPrimaryBackgroundDisabledOk() (*string, bool) {
	if o == nil || IsNil(o.ButtonPrimaryBackgroundDisabled) {
		return nil, false
	}
	return o.ButtonPrimaryBackgroundDisabled, true
}

// HasButtonPrimaryBackgroundDisabled returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasButtonPrimaryBackgroundDisabled() bool {
	if o != nil && !IsNil(o.ButtonPrimaryBackgroundDisabled) {
		return true
	}

	return false
}

// SetButtonPrimaryBackgroundDisabled gets a reference to the given string and assigns it to the ButtonPrimaryBackgroundDisabled field.
func (o *AccountExperienceColors) SetButtonPrimaryBackgroundDisabled(v string) {
	o.ButtonPrimaryBackgroundDisabled = &v
}

// GetButtonPrimaryBackgroundHover returns the ButtonPrimaryBackgroundHover field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetButtonPrimaryBackgroundHover() string {
	if o == nil || IsNil(o.ButtonPrimaryBackgroundHover) {
		var ret string
		return ret
	}
	return *o.ButtonPrimaryBackgroundHover
}

// GetButtonPrimaryBackgroundHoverOk returns a tuple with the ButtonPrimaryBackgroundHover field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetButtonPrimaryBackgroundHoverOk() (*string, bool) {
	if o == nil || IsNil(o.ButtonPrimaryBackgroundHover) {
		return nil, false
	}
	return o.ButtonPrimaryBackgroundHover, true
}

// HasButtonPrimaryBackgroundHover returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasButtonPrimaryBackgroundHover() bool {
	if o != nil && !IsNil(o.ButtonPrimaryBackgroundHover) {
		return true
	}

	return false
}

// SetButtonPrimaryBackgroundHover gets a reference to the given string and assigns it to the ButtonPrimaryBackgroundHover field.
func (o *AccountExperienceColors) SetButtonPrimaryBackgroundHover(v string) {
	o.ButtonPrimaryBackgroundHover = &v
}

// GetButtonPrimaryBorderDefault returns the ButtonPrimaryBorderDefault field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetButtonPrimaryBorderDefault() string {
	if o == nil || IsNil(o.ButtonPrimaryBorderDefault) {
		var ret string
		return ret
	}
	return *o.ButtonPrimaryBorderDefault
}

// GetButtonPrimaryBorderDefaultOk returns a tuple with the ButtonPrimaryBorderDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetButtonPrimaryBorderDefaultOk() (*string, bool) {
	if o == nil || IsNil(o.ButtonPrimaryBorderDefault) {
		return nil, false
	}
	return o.ButtonPrimaryBorderDefault, true
}

// HasButtonPrimaryBorderDefault returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasButtonPrimaryBorderDefault() bool {
	if o != nil && !IsNil(o.ButtonPrimaryBorderDefault) {
		return true
	}

	return false
}

// SetButtonPrimaryBorderDefault gets a reference to the given string and assigns it to the ButtonPrimaryBorderDefault field.
func (o *AccountExperienceColors) SetButtonPrimaryBorderDefault(v string) {
	o.ButtonPrimaryBorderDefault = &v
}

// GetButtonPrimaryBorderDisabled returns the ButtonPrimaryBorderDisabled field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetButtonPrimaryBorderDisabled() string {
	if o == nil || IsNil(o.ButtonPrimaryBorderDisabled) {
		var ret string
		return ret
	}
	return *o.ButtonPrimaryBorderDisabled
}

// GetButtonPrimaryBorderDisabledOk returns a tuple with the ButtonPrimaryBorderDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetButtonPrimaryBorderDisabledOk() (*string, bool) {
	if o == nil || IsNil(o.ButtonPrimaryBorderDisabled) {
		return nil, false
	}
	return o.ButtonPrimaryBorderDisabled, true
}

// HasButtonPrimaryBorderDisabled returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasButtonPrimaryBorderDisabled() bool {
	if o != nil && !IsNil(o.ButtonPrimaryBorderDisabled) {
		return true
	}

	return false
}

// SetButtonPrimaryBorderDisabled gets a reference to the given string and assigns it to the ButtonPrimaryBorderDisabled field.
func (o *AccountExperienceColors) SetButtonPrimaryBorderDisabled(v string) {
	o.ButtonPrimaryBorderDisabled = &v
}

// GetButtonPrimaryBorderHover returns the ButtonPrimaryBorderHover field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetButtonPrimaryBorderHover() string {
	if o == nil || IsNil(o.ButtonPrimaryBorderHover) {
		var ret string
		return ret
	}
	return *o.ButtonPrimaryBorderHover
}

// GetButtonPrimaryBorderHoverOk returns a tuple with the ButtonPrimaryBorderHover field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetButtonPrimaryBorderHoverOk() (*string, bool) {
	if o == nil || IsNil(o.ButtonPrimaryBorderHover) {
		return nil, false
	}
	return o.ButtonPrimaryBorderHover, true
}

// HasButtonPrimaryBorderHover returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasButtonPrimaryBorderHover() bool {
	if o != nil && !IsNil(o.ButtonPrimaryBorderHover) {
		return true
	}

	return false
}

// SetButtonPrimaryBorderHover gets a reference to the given string and assigns it to the ButtonPrimaryBorderHover field.
func (o *AccountExperienceColors) SetButtonPrimaryBorderHover(v string) {
	o.ButtonPrimaryBorderHover = &v
}

// GetButtonPrimaryForegroundDefault returns the ButtonPrimaryForegroundDefault field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetButtonPrimaryForegroundDefault() string {
	if o == nil || IsNil(o.ButtonPrimaryForegroundDefault) {
		var ret string
		return ret
	}
	return *o.ButtonPrimaryForegroundDefault
}

// GetButtonPrimaryForegroundDefaultOk returns a tuple with the ButtonPrimaryForegroundDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetButtonPrimaryForegroundDefaultOk() (*string, bool) {
	if o == nil || IsNil(o.ButtonPrimaryForegroundDefault) {
		return nil, false
	}
	return o.ButtonPrimaryForegroundDefault, true
}

// HasButtonPrimaryForegroundDefault returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasButtonPrimaryForegroundDefault() bool {
	if o != nil && !IsNil(o.ButtonPrimaryForegroundDefault) {
		return true
	}

	return false
}

// SetButtonPrimaryForegroundDefault gets a reference to the given string and assigns it to the ButtonPrimaryForegroundDefault field.
func (o *AccountExperienceColors) SetButtonPrimaryForegroundDefault(v string) {
	o.ButtonPrimaryForegroundDefault = &v
}

// GetButtonPrimaryForegroundDisabled returns the ButtonPrimaryForegroundDisabled field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetButtonPrimaryForegroundDisabled() string {
	if o == nil || IsNil(o.ButtonPrimaryForegroundDisabled) {
		var ret string
		return ret
	}
	return *o.ButtonPrimaryForegroundDisabled
}

// GetButtonPrimaryForegroundDisabledOk returns a tuple with the ButtonPrimaryForegroundDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetButtonPrimaryForegroundDisabledOk() (*string, bool) {
	if o == nil || IsNil(o.ButtonPrimaryForegroundDisabled) {
		return nil, false
	}
	return o.ButtonPrimaryForegroundDisabled, true
}

// HasButtonPrimaryForegroundDisabled returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasButtonPrimaryForegroundDisabled() bool {
	if o != nil && !IsNil(o.ButtonPrimaryForegroundDisabled) {
		return true
	}

	return false
}

// SetButtonPrimaryForegroundDisabled gets a reference to the given string and assigns it to the ButtonPrimaryForegroundDisabled field.
func (o *AccountExperienceColors) SetButtonPrimaryForegroundDisabled(v string) {
	o.ButtonPrimaryForegroundDisabled = &v
}

// GetButtonPrimaryForegroundHover returns the ButtonPrimaryForegroundHover field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetButtonPrimaryForegroundHover() string {
	if o == nil || IsNil(o.ButtonPrimaryForegroundHover) {
		var ret string
		return ret
	}
	return *o.ButtonPrimaryForegroundHover
}

// GetButtonPrimaryForegroundHoverOk returns a tuple with the ButtonPrimaryForegroundHover field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetButtonPrimaryForegroundHoverOk() (*string, bool) {
	if o == nil || IsNil(o.ButtonPrimaryForegroundHover) {
		return nil, false
	}
	return o.ButtonPrimaryForegroundHover, true
}

// HasButtonPrimaryForegroundHover returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasButtonPrimaryForegroundHover() bool {
	if o != nil && !IsNil(o.ButtonPrimaryForegroundHover) {
		return true
	}

	return false
}

// SetButtonPrimaryForegroundHover gets a reference to the given string and assigns it to the ButtonPrimaryForegroundHover field.
func (o *AccountExperienceColors) SetButtonPrimaryForegroundHover(v string) {
	o.ButtonPrimaryForegroundHover = &v
}

// GetButtonSecondaryBackgroundDefault returns the ButtonSecondaryBackgroundDefault field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetButtonSecondaryBackgroundDefault() string {
	if o == nil || IsNil(o.ButtonSecondaryBackgroundDefault) {
		var ret string
		return ret
	}
	return *o.ButtonSecondaryBackgroundDefault
}

// GetButtonSecondaryBackgroundDefaultOk returns a tuple with the ButtonSecondaryBackgroundDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetButtonSecondaryBackgroundDefaultOk() (*string, bool) {
	if o == nil || IsNil(o.ButtonSecondaryBackgroundDefault) {
		return nil, false
	}
	return o.ButtonSecondaryBackgroundDefault, true
}

// HasButtonSecondaryBackgroundDefault returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasButtonSecondaryBackgroundDefault() bool {
	if o != nil && !IsNil(o.ButtonSecondaryBackgroundDefault) {
		return true
	}

	return false
}

// SetButtonSecondaryBackgroundDefault gets a reference to the given string and assigns it to the ButtonSecondaryBackgroundDefault field.
func (o *AccountExperienceColors) SetButtonSecondaryBackgroundDefault(v string) {
	o.ButtonSecondaryBackgroundDefault = &v
}

// GetButtonSecondaryBackgroundDisabled returns the ButtonSecondaryBackgroundDisabled field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetButtonSecondaryBackgroundDisabled() string {
	if o == nil || IsNil(o.ButtonSecondaryBackgroundDisabled) {
		var ret string
		return ret
	}
	return *o.ButtonSecondaryBackgroundDisabled
}

// GetButtonSecondaryBackgroundDisabledOk returns a tuple with the ButtonSecondaryBackgroundDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetButtonSecondaryBackgroundDisabledOk() (*string, bool) {
	if o == nil || IsNil(o.ButtonSecondaryBackgroundDisabled) {
		return nil, false
	}
	return o.ButtonSecondaryBackgroundDisabled, true
}

// HasButtonSecondaryBackgroundDisabled returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasButtonSecondaryBackgroundDisabled() bool {
	if o != nil && !IsNil(o.ButtonSecondaryBackgroundDisabled) {
		return true
	}

	return false
}

// SetButtonSecondaryBackgroundDisabled gets a reference to the given string and assigns it to the ButtonSecondaryBackgroundDisabled field.
func (o *AccountExperienceColors) SetButtonSecondaryBackgroundDisabled(v string) {
	o.ButtonSecondaryBackgroundDisabled = &v
}

// GetButtonSecondaryBackgroundHover returns the ButtonSecondaryBackgroundHover field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetButtonSecondaryBackgroundHover() string {
	if o == nil || IsNil(o.ButtonSecondaryBackgroundHover) {
		var ret string
		return ret
	}
	return *o.ButtonSecondaryBackgroundHover
}

// GetButtonSecondaryBackgroundHoverOk returns a tuple with the ButtonSecondaryBackgroundHover field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetButtonSecondaryBackgroundHoverOk() (*string, bool) {
	if o == nil || IsNil(o.ButtonSecondaryBackgroundHover) {
		return nil, false
	}
	return o.ButtonSecondaryBackgroundHover, true
}

// HasButtonSecondaryBackgroundHover returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasButtonSecondaryBackgroundHover() bool {
	if o != nil && !IsNil(o.ButtonSecondaryBackgroundHover) {
		return true
	}

	return false
}

// SetButtonSecondaryBackgroundHover gets a reference to the given string and assigns it to the ButtonSecondaryBackgroundHover field.
func (o *AccountExperienceColors) SetButtonSecondaryBackgroundHover(v string) {
	o.ButtonSecondaryBackgroundHover = &v
}

// GetButtonSecondaryBorderDefault returns the ButtonSecondaryBorderDefault field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetButtonSecondaryBorderDefault() string {
	if o == nil || IsNil(o.ButtonSecondaryBorderDefault) {
		var ret string
		return ret
	}
	return *o.ButtonSecondaryBorderDefault
}

// GetButtonSecondaryBorderDefaultOk returns a tuple with the ButtonSecondaryBorderDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetButtonSecondaryBorderDefaultOk() (*string, bool) {
	if o == nil || IsNil(o.ButtonSecondaryBorderDefault) {
		return nil, false
	}
	return o.ButtonSecondaryBorderDefault, true
}

// HasButtonSecondaryBorderDefault returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasButtonSecondaryBorderDefault() bool {
	if o != nil && !IsNil(o.ButtonSecondaryBorderDefault) {
		return true
	}

	return false
}

// SetButtonSecondaryBorderDefault gets a reference to the given string and assigns it to the ButtonSecondaryBorderDefault field.
func (o *AccountExperienceColors) SetButtonSecondaryBorderDefault(v string) {
	o.ButtonSecondaryBorderDefault = &v
}

// GetButtonSecondaryBorderDisabled returns the ButtonSecondaryBorderDisabled field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetButtonSecondaryBorderDisabled() string {
	if o == nil || IsNil(o.ButtonSecondaryBorderDisabled) {
		var ret string
		return ret
	}
	return *o.ButtonSecondaryBorderDisabled
}

// GetButtonSecondaryBorderDisabledOk returns a tuple with the ButtonSecondaryBorderDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetButtonSecondaryBorderDisabledOk() (*string, bool) {
	if o == nil || IsNil(o.ButtonSecondaryBorderDisabled) {
		return nil, false
	}
	return o.ButtonSecondaryBorderDisabled, true
}

// HasButtonSecondaryBorderDisabled returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasButtonSecondaryBorderDisabled() bool {
	if o != nil && !IsNil(o.ButtonSecondaryBorderDisabled) {
		return true
	}

	return false
}

// SetButtonSecondaryBorderDisabled gets a reference to the given string and assigns it to the ButtonSecondaryBorderDisabled field.
func (o *AccountExperienceColors) SetButtonSecondaryBorderDisabled(v string) {
	o.ButtonSecondaryBorderDisabled = &v
}

// GetButtonSecondaryBorderHover returns the ButtonSecondaryBorderHover field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetButtonSecondaryBorderHover() string {
	if o == nil || IsNil(o.ButtonSecondaryBorderHover) {
		var ret string
		return ret
	}
	return *o.ButtonSecondaryBorderHover
}

// GetButtonSecondaryBorderHoverOk returns a tuple with the ButtonSecondaryBorderHover field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetButtonSecondaryBorderHoverOk() (*string, bool) {
	if o == nil || IsNil(o.ButtonSecondaryBorderHover) {
		return nil, false
	}
	return o.ButtonSecondaryBorderHover, true
}

// HasButtonSecondaryBorderHover returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasButtonSecondaryBorderHover() bool {
	if o != nil && !IsNil(o.ButtonSecondaryBorderHover) {
		return true
	}

	return false
}

// SetButtonSecondaryBorderHover gets a reference to the given string and assigns it to the ButtonSecondaryBorderHover field.
func (o *AccountExperienceColors) SetButtonSecondaryBorderHover(v string) {
	o.ButtonSecondaryBorderHover = &v
}

// GetButtonSecondaryForegroundDefault returns the ButtonSecondaryForegroundDefault field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetButtonSecondaryForegroundDefault() string {
	if o == nil || IsNil(o.ButtonSecondaryForegroundDefault) {
		var ret string
		return ret
	}
	return *o.ButtonSecondaryForegroundDefault
}

// GetButtonSecondaryForegroundDefaultOk returns a tuple with the ButtonSecondaryForegroundDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetButtonSecondaryForegroundDefaultOk() (*string, bool) {
	if o == nil || IsNil(o.ButtonSecondaryForegroundDefault) {
		return nil, false
	}
	return o.ButtonSecondaryForegroundDefault, true
}

// HasButtonSecondaryForegroundDefault returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasButtonSecondaryForegroundDefault() bool {
	if o != nil && !IsNil(o.ButtonSecondaryForegroundDefault) {
		return true
	}

	return false
}

// SetButtonSecondaryForegroundDefault gets a reference to the given string and assigns it to the ButtonSecondaryForegroundDefault field.
func (o *AccountExperienceColors) SetButtonSecondaryForegroundDefault(v string) {
	o.ButtonSecondaryForegroundDefault = &v
}

// GetButtonSecondaryForegroundDisabled returns the ButtonSecondaryForegroundDisabled field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetButtonSecondaryForegroundDisabled() string {
	if o == nil || IsNil(o.ButtonSecondaryForegroundDisabled) {
		var ret string
		return ret
	}
	return *o.ButtonSecondaryForegroundDisabled
}

// GetButtonSecondaryForegroundDisabledOk returns a tuple with the ButtonSecondaryForegroundDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetButtonSecondaryForegroundDisabledOk() (*string, bool) {
	if o == nil || IsNil(o.ButtonSecondaryForegroundDisabled) {
		return nil, false
	}
	return o.ButtonSecondaryForegroundDisabled, true
}

// HasButtonSecondaryForegroundDisabled returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasButtonSecondaryForegroundDisabled() bool {
	if o != nil && !IsNil(o.ButtonSecondaryForegroundDisabled) {
		return true
	}

	return false
}

// SetButtonSecondaryForegroundDisabled gets a reference to the given string and assigns it to the ButtonSecondaryForegroundDisabled field.
func (o *AccountExperienceColors) SetButtonSecondaryForegroundDisabled(v string) {
	o.ButtonSecondaryForegroundDisabled = &v
}

// GetButtonSecondaryForegroundHover returns the ButtonSecondaryForegroundHover field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetButtonSecondaryForegroundHover() string {
	if o == nil || IsNil(o.ButtonSecondaryForegroundHover) {
		var ret string
		return ret
	}
	return *o.ButtonSecondaryForegroundHover
}

// GetButtonSecondaryForegroundHoverOk returns a tuple with the ButtonSecondaryForegroundHover field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetButtonSecondaryForegroundHoverOk() (*string, bool) {
	if o == nil || IsNil(o.ButtonSecondaryForegroundHover) {
		return nil, false
	}
	return o.ButtonSecondaryForegroundHover, true
}

// HasButtonSecondaryForegroundHover returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasButtonSecondaryForegroundHover() bool {
	if o != nil && !IsNil(o.ButtonSecondaryForegroundHover) {
		return true
	}

	return false
}

// SetButtonSecondaryForegroundHover gets a reference to the given string and assigns it to the ButtonSecondaryForegroundHover field.
func (o *AccountExperienceColors) SetButtonSecondaryForegroundHover(v string) {
	o.ButtonSecondaryForegroundHover = &v
}

// GetButtonSocialBackgroundDefault returns the ButtonSocialBackgroundDefault field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetButtonSocialBackgroundDefault() string {
	if o == nil || IsNil(o.ButtonSocialBackgroundDefault) {
		var ret string
		return ret
	}
	return *o.ButtonSocialBackgroundDefault
}

// GetButtonSocialBackgroundDefaultOk returns a tuple with the ButtonSocialBackgroundDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetButtonSocialBackgroundDefaultOk() (*string, bool) {
	if o == nil || IsNil(o.ButtonSocialBackgroundDefault) {
		return nil, false
	}
	return o.ButtonSocialBackgroundDefault, true
}

// HasButtonSocialBackgroundDefault returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasButtonSocialBackgroundDefault() bool {
	if o != nil && !IsNil(o.ButtonSocialBackgroundDefault) {
		return true
	}

	return false
}

// SetButtonSocialBackgroundDefault gets a reference to the given string and assigns it to the ButtonSocialBackgroundDefault field.
func (o *AccountExperienceColors) SetButtonSocialBackgroundDefault(v string) {
	o.ButtonSocialBackgroundDefault = &v
}

// GetButtonSocialBackgroundDisabled returns the ButtonSocialBackgroundDisabled field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetButtonSocialBackgroundDisabled() string {
	if o == nil || IsNil(o.ButtonSocialBackgroundDisabled) {
		var ret string
		return ret
	}
	return *o.ButtonSocialBackgroundDisabled
}

// GetButtonSocialBackgroundDisabledOk returns a tuple with the ButtonSocialBackgroundDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetButtonSocialBackgroundDisabledOk() (*string, bool) {
	if o == nil || IsNil(o.ButtonSocialBackgroundDisabled) {
		return nil, false
	}
	return o.ButtonSocialBackgroundDisabled, true
}

// HasButtonSocialBackgroundDisabled returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasButtonSocialBackgroundDisabled() bool {
	if o != nil && !IsNil(o.ButtonSocialBackgroundDisabled) {
		return true
	}

	return false
}

// SetButtonSocialBackgroundDisabled gets a reference to the given string and assigns it to the ButtonSocialBackgroundDisabled field.
func (o *AccountExperienceColors) SetButtonSocialBackgroundDisabled(v string) {
	o.ButtonSocialBackgroundDisabled = &v
}

// GetButtonSocialBackgroundGenericProvider returns the ButtonSocialBackgroundGenericProvider field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetButtonSocialBackgroundGenericProvider() string {
	if o == nil || IsNil(o.ButtonSocialBackgroundGenericProvider) {
		var ret string
		return ret
	}
	return *o.ButtonSocialBackgroundGenericProvider
}

// GetButtonSocialBackgroundGenericProviderOk returns a tuple with the ButtonSocialBackgroundGenericProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetButtonSocialBackgroundGenericProviderOk() (*string, bool) {
	if o == nil || IsNil(o.ButtonSocialBackgroundGenericProvider) {
		return nil, false
	}
	return o.ButtonSocialBackgroundGenericProvider, true
}

// HasButtonSocialBackgroundGenericProvider returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasButtonSocialBackgroundGenericProvider() bool {
	if o != nil && !IsNil(o.ButtonSocialBackgroundGenericProvider) {
		return true
	}

	return false
}

// SetButtonSocialBackgroundGenericProvider gets a reference to the given string and assigns it to the ButtonSocialBackgroundGenericProvider field.
func (o *AccountExperienceColors) SetButtonSocialBackgroundGenericProvider(v string) {
	o.ButtonSocialBackgroundGenericProvider = &v
}

// GetButtonSocialBackgroundHover returns the ButtonSocialBackgroundHover field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetButtonSocialBackgroundHover() string {
	if o == nil || IsNil(o.ButtonSocialBackgroundHover) {
		var ret string
		return ret
	}
	return *o.ButtonSocialBackgroundHover
}

// GetButtonSocialBackgroundHoverOk returns a tuple with the ButtonSocialBackgroundHover field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetButtonSocialBackgroundHoverOk() (*string, bool) {
	if o == nil || IsNil(o.ButtonSocialBackgroundHover) {
		return nil, false
	}
	return o.ButtonSocialBackgroundHover, true
}

// HasButtonSocialBackgroundHover returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasButtonSocialBackgroundHover() bool {
	if o != nil && !IsNil(o.ButtonSocialBackgroundHover) {
		return true
	}

	return false
}

// SetButtonSocialBackgroundHover gets a reference to the given string and assigns it to the ButtonSocialBackgroundHover field.
func (o *AccountExperienceColors) SetButtonSocialBackgroundHover(v string) {
	o.ButtonSocialBackgroundHover = &v
}

// GetButtonSocialBorderDefault returns the ButtonSocialBorderDefault field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetButtonSocialBorderDefault() string {
	if o == nil || IsNil(o.ButtonSocialBorderDefault) {
		var ret string
		return ret
	}
	return *o.ButtonSocialBorderDefault
}

// GetButtonSocialBorderDefaultOk returns a tuple with the ButtonSocialBorderDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetButtonSocialBorderDefaultOk() (*string, bool) {
	if o == nil || IsNil(o.ButtonSocialBorderDefault) {
		return nil, false
	}
	return o.ButtonSocialBorderDefault, true
}

// HasButtonSocialBorderDefault returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasButtonSocialBorderDefault() bool {
	if o != nil && !IsNil(o.ButtonSocialBorderDefault) {
		return true
	}

	return false
}

// SetButtonSocialBorderDefault gets a reference to the given string and assigns it to the ButtonSocialBorderDefault field.
func (o *AccountExperienceColors) SetButtonSocialBorderDefault(v string) {
	o.ButtonSocialBorderDefault = &v
}

// GetButtonSocialBorderDisabled returns the ButtonSocialBorderDisabled field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetButtonSocialBorderDisabled() string {
	if o == nil || IsNil(o.ButtonSocialBorderDisabled) {
		var ret string
		return ret
	}
	return *o.ButtonSocialBorderDisabled
}

// GetButtonSocialBorderDisabledOk returns a tuple with the ButtonSocialBorderDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetButtonSocialBorderDisabledOk() (*string, bool) {
	if o == nil || IsNil(o.ButtonSocialBorderDisabled) {
		return nil, false
	}
	return o.ButtonSocialBorderDisabled, true
}

// HasButtonSocialBorderDisabled returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasButtonSocialBorderDisabled() bool {
	if o != nil && !IsNil(o.ButtonSocialBorderDisabled) {
		return true
	}

	return false
}

// SetButtonSocialBorderDisabled gets a reference to the given string and assigns it to the ButtonSocialBorderDisabled field.
func (o *AccountExperienceColors) SetButtonSocialBorderDisabled(v string) {
	o.ButtonSocialBorderDisabled = &v
}

// GetButtonSocialBorderGenericProvider returns the ButtonSocialBorderGenericProvider field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetButtonSocialBorderGenericProvider() string {
	if o == nil || IsNil(o.ButtonSocialBorderGenericProvider) {
		var ret string
		return ret
	}
	return *o.ButtonSocialBorderGenericProvider
}

// GetButtonSocialBorderGenericProviderOk returns a tuple with the ButtonSocialBorderGenericProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetButtonSocialBorderGenericProviderOk() (*string, bool) {
	if o == nil || IsNil(o.ButtonSocialBorderGenericProvider) {
		return nil, false
	}
	return o.ButtonSocialBorderGenericProvider, true
}

// HasButtonSocialBorderGenericProvider returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasButtonSocialBorderGenericProvider() bool {
	if o != nil && !IsNil(o.ButtonSocialBorderGenericProvider) {
		return true
	}

	return false
}

// SetButtonSocialBorderGenericProvider gets a reference to the given string and assigns it to the ButtonSocialBorderGenericProvider field.
func (o *AccountExperienceColors) SetButtonSocialBorderGenericProvider(v string) {
	o.ButtonSocialBorderGenericProvider = &v
}

// GetButtonSocialBorderHover returns the ButtonSocialBorderHover field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetButtonSocialBorderHover() string {
	if o == nil || IsNil(o.ButtonSocialBorderHover) {
		var ret string
		return ret
	}
	return *o.ButtonSocialBorderHover
}

// GetButtonSocialBorderHoverOk returns a tuple with the ButtonSocialBorderHover field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetButtonSocialBorderHoverOk() (*string, bool) {
	if o == nil || IsNil(o.ButtonSocialBorderHover) {
		return nil, false
	}
	return o.ButtonSocialBorderHover, true
}

// HasButtonSocialBorderHover returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasButtonSocialBorderHover() bool {
	if o != nil && !IsNil(o.ButtonSocialBorderHover) {
		return true
	}

	return false
}

// SetButtonSocialBorderHover gets a reference to the given string and assigns it to the ButtonSocialBorderHover field.
func (o *AccountExperienceColors) SetButtonSocialBorderHover(v string) {
	o.ButtonSocialBorderHover = &v
}

// GetButtonSocialForegroundDefault returns the ButtonSocialForegroundDefault field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetButtonSocialForegroundDefault() string {
	if o == nil || IsNil(o.ButtonSocialForegroundDefault) {
		var ret string
		return ret
	}
	return *o.ButtonSocialForegroundDefault
}

// GetButtonSocialForegroundDefaultOk returns a tuple with the ButtonSocialForegroundDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetButtonSocialForegroundDefaultOk() (*string, bool) {
	if o == nil || IsNil(o.ButtonSocialForegroundDefault) {
		return nil, false
	}
	return o.ButtonSocialForegroundDefault, true
}

// HasButtonSocialForegroundDefault returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasButtonSocialForegroundDefault() bool {
	if o != nil && !IsNil(o.ButtonSocialForegroundDefault) {
		return true
	}

	return false
}

// SetButtonSocialForegroundDefault gets a reference to the given string and assigns it to the ButtonSocialForegroundDefault field.
func (o *AccountExperienceColors) SetButtonSocialForegroundDefault(v string) {
	o.ButtonSocialForegroundDefault = &v
}

// GetButtonSocialForegroundDisabled returns the ButtonSocialForegroundDisabled field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetButtonSocialForegroundDisabled() string {
	if o == nil || IsNil(o.ButtonSocialForegroundDisabled) {
		var ret string
		return ret
	}
	return *o.ButtonSocialForegroundDisabled
}

// GetButtonSocialForegroundDisabledOk returns a tuple with the ButtonSocialForegroundDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetButtonSocialForegroundDisabledOk() (*string, bool) {
	if o == nil || IsNil(o.ButtonSocialForegroundDisabled) {
		return nil, false
	}
	return o.ButtonSocialForegroundDisabled, true
}

// HasButtonSocialForegroundDisabled returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasButtonSocialForegroundDisabled() bool {
	if o != nil && !IsNil(o.ButtonSocialForegroundDisabled) {
		return true
	}

	return false
}

// SetButtonSocialForegroundDisabled gets a reference to the given string and assigns it to the ButtonSocialForegroundDisabled field.
func (o *AccountExperienceColors) SetButtonSocialForegroundDisabled(v string) {
	o.ButtonSocialForegroundDisabled = &v
}

// GetButtonSocialForegroundGenericProvider returns the ButtonSocialForegroundGenericProvider field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetButtonSocialForegroundGenericProvider() string {
	if o == nil || IsNil(o.ButtonSocialForegroundGenericProvider) {
		var ret string
		return ret
	}
	return *o.ButtonSocialForegroundGenericProvider
}

// GetButtonSocialForegroundGenericProviderOk returns a tuple with the ButtonSocialForegroundGenericProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetButtonSocialForegroundGenericProviderOk() (*string, bool) {
	if o == nil || IsNil(o.ButtonSocialForegroundGenericProvider) {
		return nil, false
	}
	return o.ButtonSocialForegroundGenericProvider, true
}

// HasButtonSocialForegroundGenericProvider returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasButtonSocialForegroundGenericProvider() bool {
	if o != nil && !IsNil(o.ButtonSocialForegroundGenericProvider) {
		return true
	}

	return false
}

// SetButtonSocialForegroundGenericProvider gets a reference to the given string and assigns it to the ButtonSocialForegroundGenericProvider field.
func (o *AccountExperienceColors) SetButtonSocialForegroundGenericProvider(v string) {
	o.ButtonSocialForegroundGenericProvider = &v
}

// GetButtonSocialForegroundHover returns the ButtonSocialForegroundHover field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetButtonSocialForegroundHover() string {
	if o == nil || IsNil(o.ButtonSocialForegroundHover) {
		var ret string
		return ret
	}
	return *o.ButtonSocialForegroundHover
}

// GetButtonSocialForegroundHoverOk returns a tuple with the ButtonSocialForegroundHover field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetButtonSocialForegroundHoverOk() (*string, bool) {
	if o == nil || IsNil(o.ButtonSocialForegroundHover) {
		return nil, false
	}
	return o.ButtonSocialForegroundHover, true
}

// HasButtonSocialForegroundHover returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasButtonSocialForegroundHover() bool {
	if o != nil && !IsNil(o.ButtonSocialForegroundHover) {
		return true
	}

	return false
}

// SetButtonSocialForegroundHover gets a reference to the given string and assigns it to the ButtonSocialForegroundHover field.
func (o *AccountExperienceColors) SetButtonSocialForegroundHover(v string) {
	o.ButtonSocialForegroundHover = &v
}

// GetCheckboxBackgroundChecked returns the CheckboxBackgroundChecked field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetCheckboxBackgroundChecked() string {
	if o == nil || IsNil(o.CheckboxBackgroundChecked) {
		var ret string
		return ret
	}
	return *o.CheckboxBackgroundChecked
}

// GetCheckboxBackgroundCheckedOk returns a tuple with the CheckboxBackgroundChecked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetCheckboxBackgroundCheckedOk() (*string, bool) {
	if o == nil || IsNil(o.CheckboxBackgroundChecked) {
		return nil, false
	}
	return o.CheckboxBackgroundChecked, true
}

// HasCheckboxBackgroundChecked returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasCheckboxBackgroundChecked() bool {
	if o != nil && !IsNil(o.CheckboxBackgroundChecked) {
		return true
	}

	return false
}

// SetCheckboxBackgroundChecked gets a reference to the given string and assigns it to the CheckboxBackgroundChecked field.
func (o *AccountExperienceColors) SetCheckboxBackgroundChecked(v string) {
	o.CheckboxBackgroundChecked = &v
}

// GetCheckboxBackgroundDefault returns the CheckboxBackgroundDefault field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetCheckboxBackgroundDefault() string {
	if o == nil || IsNil(o.CheckboxBackgroundDefault) {
		var ret string
		return ret
	}
	return *o.CheckboxBackgroundDefault
}

// GetCheckboxBackgroundDefaultOk returns a tuple with the CheckboxBackgroundDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetCheckboxBackgroundDefaultOk() (*string, bool) {
	if o == nil || IsNil(o.CheckboxBackgroundDefault) {
		return nil, false
	}
	return o.CheckboxBackgroundDefault, true
}

// HasCheckboxBackgroundDefault returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasCheckboxBackgroundDefault() bool {
	if o != nil && !IsNil(o.CheckboxBackgroundDefault) {
		return true
	}

	return false
}

// SetCheckboxBackgroundDefault gets a reference to the given string and assigns it to the CheckboxBackgroundDefault field.
func (o *AccountExperienceColors) SetCheckboxBackgroundDefault(v string) {
	o.CheckboxBackgroundDefault = &v
}

// GetCheckboxBorderCheckboxBorderChecked returns the CheckboxBorderCheckboxBorderChecked field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetCheckboxBorderCheckboxBorderChecked() string {
	if o == nil || IsNil(o.CheckboxBorderCheckboxBorderChecked) {
		var ret string
		return ret
	}
	return *o.CheckboxBorderCheckboxBorderChecked
}

// GetCheckboxBorderCheckboxBorderCheckedOk returns a tuple with the CheckboxBorderCheckboxBorderChecked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetCheckboxBorderCheckboxBorderCheckedOk() (*string, bool) {
	if o == nil || IsNil(o.CheckboxBorderCheckboxBorderChecked) {
		return nil, false
	}
	return o.CheckboxBorderCheckboxBorderChecked, true
}

// HasCheckboxBorderCheckboxBorderChecked returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasCheckboxBorderCheckboxBorderChecked() bool {
	if o != nil && !IsNil(o.CheckboxBorderCheckboxBorderChecked) {
		return true
	}

	return false
}

// SetCheckboxBorderCheckboxBorderChecked gets a reference to the given string and assigns it to the CheckboxBorderCheckboxBorderChecked field.
func (o *AccountExperienceColors) SetCheckboxBorderCheckboxBorderChecked(v string) {
	o.CheckboxBorderCheckboxBorderChecked = &v
}

// GetCheckboxBorderCheckboxBorderDefault returns the CheckboxBorderCheckboxBorderDefault field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetCheckboxBorderCheckboxBorderDefault() string {
	if o == nil || IsNil(o.CheckboxBorderCheckboxBorderDefault) {
		var ret string
		return ret
	}
	return *o.CheckboxBorderCheckboxBorderDefault
}

// GetCheckboxBorderCheckboxBorderDefaultOk returns a tuple with the CheckboxBorderCheckboxBorderDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetCheckboxBorderCheckboxBorderDefaultOk() (*string, bool) {
	if o == nil || IsNil(o.CheckboxBorderCheckboxBorderDefault) {
		return nil, false
	}
	return o.CheckboxBorderCheckboxBorderDefault, true
}

// HasCheckboxBorderCheckboxBorderDefault returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasCheckboxBorderCheckboxBorderDefault() bool {
	if o != nil && !IsNil(o.CheckboxBorderCheckboxBorderDefault) {
		return true
	}

	return false
}

// SetCheckboxBorderCheckboxBorderDefault gets a reference to the given string and assigns it to the CheckboxBorderCheckboxBorderDefault field.
func (o *AccountExperienceColors) SetCheckboxBorderCheckboxBorderDefault(v string) {
	o.CheckboxBorderCheckboxBorderDefault = &v
}

// GetCheckboxForegroundChecked returns the CheckboxForegroundChecked field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetCheckboxForegroundChecked() string {
	if o == nil || IsNil(o.CheckboxForegroundChecked) {
		var ret string
		return ret
	}
	return *o.CheckboxForegroundChecked
}

// GetCheckboxForegroundCheckedOk returns a tuple with the CheckboxForegroundChecked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetCheckboxForegroundCheckedOk() (*string, bool) {
	if o == nil || IsNil(o.CheckboxForegroundChecked) {
		return nil, false
	}
	return o.CheckboxForegroundChecked, true
}

// HasCheckboxForegroundChecked returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasCheckboxForegroundChecked() bool {
	if o != nil && !IsNil(o.CheckboxForegroundChecked) {
		return true
	}

	return false
}

// SetCheckboxForegroundChecked gets a reference to the given string and assigns it to the CheckboxForegroundChecked field.
func (o *AccountExperienceColors) SetCheckboxForegroundChecked(v string) {
	o.CheckboxForegroundChecked = &v
}

// GetCheckboxForegroundDefault returns the CheckboxForegroundDefault field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetCheckboxForegroundDefault() string {
	if o == nil || IsNil(o.CheckboxForegroundDefault) {
		var ret string
		return ret
	}
	return *o.CheckboxForegroundDefault
}

// GetCheckboxForegroundDefaultOk returns a tuple with the CheckboxForegroundDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetCheckboxForegroundDefaultOk() (*string, bool) {
	if o == nil || IsNil(o.CheckboxForegroundDefault) {
		return nil, false
	}
	return o.CheckboxForegroundDefault, true
}

// HasCheckboxForegroundDefault returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasCheckboxForegroundDefault() bool {
	if o != nil && !IsNil(o.CheckboxForegroundDefault) {
		return true
	}

	return false
}

// SetCheckboxForegroundDefault gets a reference to the given string and assigns it to the CheckboxForegroundDefault field.
func (o *AccountExperienceColors) SetCheckboxForegroundDefault(v string) {
	o.CheckboxForegroundDefault = &v
}

// GetFormBackgroundDefault returns the FormBackgroundDefault field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetFormBackgroundDefault() string {
	if o == nil || IsNil(o.FormBackgroundDefault) {
		var ret string
		return ret
	}
	return *o.FormBackgroundDefault
}

// GetFormBackgroundDefaultOk returns a tuple with the FormBackgroundDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetFormBackgroundDefaultOk() (*string, bool) {
	if o == nil || IsNil(o.FormBackgroundDefault) {
		return nil, false
	}
	return o.FormBackgroundDefault, true
}

// HasFormBackgroundDefault returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasFormBackgroundDefault() bool {
	if o != nil && !IsNil(o.FormBackgroundDefault) {
		return true
	}

	return false
}

// SetFormBackgroundDefault gets a reference to the given string and assigns it to the FormBackgroundDefault field.
func (o *AccountExperienceColors) SetFormBackgroundDefault(v string) {
	o.FormBackgroundDefault = &v
}

// GetFormBorderDefault returns the FormBorderDefault field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetFormBorderDefault() string {
	if o == nil || IsNil(o.FormBorderDefault) {
		var ret string
		return ret
	}
	return *o.FormBorderDefault
}

// GetFormBorderDefaultOk returns a tuple with the FormBorderDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetFormBorderDefaultOk() (*string, bool) {
	if o == nil || IsNil(o.FormBorderDefault) {
		return nil, false
	}
	return o.FormBorderDefault, true
}

// HasFormBorderDefault returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasFormBorderDefault() bool {
	if o != nil && !IsNil(o.FormBorderDefault) {
		return true
	}

	return false
}

// SetFormBorderDefault gets a reference to the given string and assigns it to the FormBorderDefault field.
func (o *AccountExperienceColors) SetFormBorderDefault(v string) {
	o.FormBorderDefault = &v
}

// GetInputBackgroundDefault returns the InputBackgroundDefault field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetInputBackgroundDefault() string {
	if o == nil || IsNil(o.InputBackgroundDefault) {
		var ret string
		return ret
	}
	return *o.InputBackgroundDefault
}

// GetInputBackgroundDefaultOk returns a tuple with the InputBackgroundDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetInputBackgroundDefaultOk() (*string, bool) {
	if o == nil || IsNil(o.InputBackgroundDefault) {
		return nil, false
	}
	return o.InputBackgroundDefault, true
}

// HasInputBackgroundDefault returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasInputBackgroundDefault() bool {
	if o != nil && !IsNil(o.InputBackgroundDefault) {
		return true
	}

	return false
}

// SetInputBackgroundDefault gets a reference to the given string and assigns it to the InputBackgroundDefault field.
func (o *AccountExperienceColors) SetInputBackgroundDefault(v string) {
	o.InputBackgroundDefault = &v
}

// GetInputBackgroundDisabled returns the InputBackgroundDisabled field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetInputBackgroundDisabled() string {
	if o == nil || IsNil(o.InputBackgroundDisabled) {
		var ret string
		return ret
	}
	return *o.InputBackgroundDisabled
}

// GetInputBackgroundDisabledOk returns a tuple with the InputBackgroundDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetInputBackgroundDisabledOk() (*string, bool) {
	if o == nil || IsNil(o.InputBackgroundDisabled) {
		return nil, false
	}
	return o.InputBackgroundDisabled, true
}

// HasInputBackgroundDisabled returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasInputBackgroundDisabled() bool {
	if o != nil && !IsNil(o.InputBackgroundDisabled) {
		return true
	}

	return false
}

// SetInputBackgroundDisabled gets a reference to the given string and assigns it to the InputBackgroundDisabled field.
func (o *AccountExperienceColors) SetInputBackgroundDisabled(v string) {
	o.InputBackgroundDisabled = &v
}

// GetInputBackgroundHover returns the InputBackgroundHover field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetInputBackgroundHover() string {
	if o == nil || IsNil(o.InputBackgroundHover) {
		var ret string
		return ret
	}
	return *o.InputBackgroundHover
}

// GetInputBackgroundHoverOk returns a tuple with the InputBackgroundHover field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetInputBackgroundHoverOk() (*string, bool) {
	if o == nil || IsNil(o.InputBackgroundHover) {
		return nil, false
	}
	return o.InputBackgroundHover, true
}

// HasInputBackgroundHover returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasInputBackgroundHover() bool {
	if o != nil && !IsNil(o.InputBackgroundHover) {
		return true
	}

	return false
}

// SetInputBackgroundHover gets a reference to the given string and assigns it to the InputBackgroundHover field.
func (o *AccountExperienceColors) SetInputBackgroundHover(v string) {
	o.InputBackgroundHover = &v
}

// GetInputBorderDefault returns the InputBorderDefault field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetInputBorderDefault() string {
	if o == nil || IsNil(o.InputBorderDefault) {
		var ret string
		return ret
	}
	return *o.InputBorderDefault
}

// GetInputBorderDefaultOk returns a tuple with the InputBorderDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetInputBorderDefaultOk() (*string, bool) {
	if o == nil || IsNil(o.InputBorderDefault) {
		return nil, false
	}
	return o.InputBorderDefault, true
}

// HasInputBorderDefault returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasInputBorderDefault() bool {
	if o != nil && !IsNil(o.InputBorderDefault) {
		return true
	}

	return false
}

// SetInputBorderDefault gets a reference to the given string and assigns it to the InputBorderDefault field.
func (o *AccountExperienceColors) SetInputBorderDefault(v string) {
	o.InputBorderDefault = &v
}

// GetInputBorderDisabled returns the InputBorderDisabled field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetInputBorderDisabled() string {
	if o == nil || IsNil(o.InputBorderDisabled) {
		var ret string
		return ret
	}
	return *o.InputBorderDisabled
}

// GetInputBorderDisabledOk returns a tuple with the InputBorderDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetInputBorderDisabledOk() (*string, bool) {
	if o == nil || IsNil(o.InputBorderDisabled) {
		return nil, false
	}
	return o.InputBorderDisabled, true
}

// HasInputBorderDisabled returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasInputBorderDisabled() bool {
	if o != nil && !IsNil(o.InputBorderDisabled) {
		return true
	}

	return false
}

// SetInputBorderDisabled gets a reference to the given string and assigns it to the InputBorderDisabled field.
func (o *AccountExperienceColors) SetInputBorderDisabled(v string) {
	o.InputBorderDisabled = &v
}

// GetInputBorderFocus returns the InputBorderFocus field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetInputBorderFocus() string {
	if o == nil || IsNil(o.InputBorderFocus) {
		var ret string
		return ret
	}
	return *o.InputBorderFocus
}

// GetInputBorderFocusOk returns a tuple with the InputBorderFocus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetInputBorderFocusOk() (*string, bool) {
	if o == nil || IsNil(o.InputBorderFocus) {
		return nil, false
	}
	return o.InputBorderFocus, true
}

// HasInputBorderFocus returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasInputBorderFocus() bool {
	if o != nil && !IsNil(o.InputBorderFocus) {
		return true
	}

	return false
}

// SetInputBorderFocus gets a reference to the given string and assigns it to the InputBorderFocus field.
func (o *AccountExperienceColors) SetInputBorderFocus(v string) {
	o.InputBorderFocus = &v
}

// GetInputBorderHover returns the InputBorderHover field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetInputBorderHover() string {
	if o == nil || IsNil(o.InputBorderHover) {
		var ret string
		return ret
	}
	return *o.InputBorderHover
}

// GetInputBorderHoverOk returns a tuple with the InputBorderHover field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetInputBorderHoverOk() (*string, bool) {
	if o == nil || IsNil(o.InputBorderHover) {
		return nil, false
	}
	return o.InputBorderHover, true
}

// HasInputBorderHover returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasInputBorderHover() bool {
	if o != nil && !IsNil(o.InputBorderHover) {
		return true
	}

	return false
}

// SetInputBorderHover gets a reference to the given string and assigns it to the InputBorderHover field.
func (o *AccountExperienceColors) SetInputBorderHover(v string) {
	o.InputBorderHover = &v
}

// GetInputForegroundDisabled returns the InputForegroundDisabled field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetInputForegroundDisabled() string {
	if o == nil || IsNil(o.InputForegroundDisabled) {
		var ret string
		return ret
	}
	return *o.InputForegroundDisabled
}

// GetInputForegroundDisabledOk returns a tuple with the InputForegroundDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetInputForegroundDisabledOk() (*string, bool) {
	if o == nil || IsNil(o.InputForegroundDisabled) {
		return nil, false
	}
	return o.InputForegroundDisabled, true
}

// HasInputForegroundDisabled returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasInputForegroundDisabled() bool {
	if o != nil && !IsNil(o.InputForegroundDisabled) {
		return true
	}

	return false
}

// SetInputForegroundDisabled gets a reference to the given string and assigns it to the InputForegroundDisabled field.
func (o *AccountExperienceColors) SetInputForegroundDisabled(v string) {
	o.InputForegroundDisabled = &v
}

// GetInputForegroundPrimary returns the InputForegroundPrimary field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetInputForegroundPrimary() string {
	if o == nil || IsNil(o.InputForegroundPrimary) {
		var ret string
		return ret
	}
	return *o.InputForegroundPrimary
}

// GetInputForegroundPrimaryOk returns a tuple with the InputForegroundPrimary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetInputForegroundPrimaryOk() (*string, bool) {
	if o == nil || IsNil(o.InputForegroundPrimary) {
		return nil, false
	}
	return o.InputForegroundPrimary, true
}

// HasInputForegroundPrimary returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasInputForegroundPrimary() bool {
	if o != nil && !IsNil(o.InputForegroundPrimary) {
		return true
	}

	return false
}

// SetInputForegroundPrimary gets a reference to the given string and assigns it to the InputForegroundPrimary field.
func (o *AccountExperienceColors) SetInputForegroundPrimary(v string) {
	o.InputForegroundPrimary = &v
}

// GetInputForegroundSecondary returns the InputForegroundSecondary field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetInputForegroundSecondary() string {
	if o == nil || IsNil(o.InputForegroundSecondary) {
		var ret string
		return ret
	}
	return *o.InputForegroundSecondary
}

// GetInputForegroundSecondaryOk returns a tuple with the InputForegroundSecondary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetInputForegroundSecondaryOk() (*string, bool) {
	if o == nil || IsNil(o.InputForegroundSecondary) {
		return nil, false
	}
	return o.InputForegroundSecondary, true
}

// HasInputForegroundSecondary returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasInputForegroundSecondary() bool {
	if o != nil && !IsNil(o.InputForegroundSecondary) {
		return true
	}

	return false
}

// SetInputForegroundSecondary gets a reference to the given string and assigns it to the InputForegroundSecondary field.
func (o *AccountExperienceColors) SetInputForegroundSecondary(v string) {
	o.InputForegroundSecondary = &v
}

// GetInputForegroundTertiary returns the InputForegroundTertiary field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetInputForegroundTertiary() string {
	if o == nil || IsNil(o.InputForegroundTertiary) {
		var ret string
		return ret
	}
	return *o.InputForegroundTertiary
}

// GetInputForegroundTertiaryOk returns a tuple with the InputForegroundTertiary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetInputForegroundTertiaryOk() (*string, bool) {
	if o == nil || IsNil(o.InputForegroundTertiary) {
		return nil, false
	}
	return o.InputForegroundTertiary, true
}

// HasInputForegroundTertiary returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasInputForegroundTertiary() bool {
	if o != nil && !IsNil(o.InputForegroundTertiary) {
		return true
	}

	return false
}

// SetInputForegroundTertiary gets a reference to the given string and assigns it to the InputForegroundTertiary field.
func (o *AccountExperienceColors) SetInputForegroundTertiary(v string) {
	o.InputForegroundTertiary = &v
}

// GetInterfaceBackgroundBrandPrimary returns the InterfaceBackgroundBrandPrimary field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetInterfaceBackgroundBrandPrimary() string {
	if o == nil || IsNil(o.InterfaceBackgroundBrandPrimary) {
		var ret string
		return ret
	}
	return *o.InterfaceBackgroundBrandPrimary
}

// GetInterfaceBackgroundBrandPrimaryOk returns a tuple with the InterfaceBackgroundBrandPrimary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetInterfaceBackgroundBrandPrimaryOk() (*string, bool) {
	if o == nil || IsNil(o.InterfaceBackgroundBrandPrimary) {
		return nil, false
	}
	return o.InterfaceBackgroundBrandPrimary, true
}

// HasInterfaceBackgroundBrandPrimary returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasInterfaceBackgroundBrandPrimary() bool {
	if o != nil && !IsNil(o.InterfaceBackgroundBrandPrimary) {
		return true
	}

	return false
}

// SetInterfaceBackgroundBrandPrimary gets a reference to the given string and assigns it to the InterfaceBackgroundBrandPrimary field.
func (o *AccountExperienceColors) SetInterfaceBackgroundBrandPrimary(v string) {
	o.InterfaceBackgroundBrandPrimary = &v
}

// GetInterfaceBackgroundBrandPrimaryHover returns the InterfaceBackgroundBrandPrimaryHover field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetInterfaceBackgroundBrandPrimaryHover() string {
	if o == nil || IsNil(o.InterfaceBackgroundBrandPrimaryHover) {
		var ret string
		return ret
	}
	return *o.InterfaceBackgroundBrandPrimaryHover
}

// GetInterfaceBackgroundBrandPrimaryHoverOk returns a tuple with the InterfaceBackgroundBrandPrimaryHover field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetInterfaceBackgroundBrandPrimaryHoverOk() (*string, bool) {
	if o == nil || IsNil(o.InterfaceBackgroundBrandPrimaryHover) {
		return nil, false
	}
	return o.InterfaceBackgroundBrandPrimaryHover, true
}

// HasInterfaceBackgroundBrandPrimaryHover returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasInterfaceBackgroundBrandPrimaryHover() bool {
	if o != nil && !IsNil(o.InterfaceBackgroundBrandPrimaryHover) {
		return true
	}

	return false
}

// SetInterfaceBackgroundBrandPrimaryHover gets a reference to the given string and assigns it to the InterfaceBackgroundBrandPrimaryHover field.
func (o *AccountExperienceColors) SetInterfaceBackgroundBrandPrimaryHover(v string) {
	o.InterfaceBackgroundBrandPrimaryHover = &v
}

// GetInterfaceBackgroundBrandSecondary returns the InterfaceBackgroundBrandSecondary field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetInterfaceBackgroundBrandSecondary() string {
	if o == nil || IsNil(o.InterfaceBackgroundBrandSecondary) {
		var ret string
		return ret
	}
	return *o.InterfaceBackgroundBrandSecondary
}

// GetInterfaceBackgroundBrandSecondaryOk returns a tuple with the InterfaceBackgroundBrandSecondary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetInterfaceBackgroundBrandSecondaryOk() (*string, bool) {
	if o == nil || IsNil(o.InterfaceBackgroundBrandSecondary) {
		return nil, false
	}
	return o.InterfaceBackgroundBrandSecondary, true
}

// HasInterfaceBackgroundBrandSecondary returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasInterfaceBackgroundBrandSecondary() bool {
	if o != nil && !IsNil(o.InterfaceBackgroundBrandSecondary) {
		return true
	}

	return false
}

// SetInterfaceBackgroundBrandSecondary gets a reference to the given string and assigns it to the InterfaceBackgroundBrandSecondary field.
func (o *AccountExperienceColors) SetInterfaceBackgroundBrandSecondary(v string) {
	o.InterfaceBackgroundBrandSecondary = &v
}

// GetInterfaceBackgroundBrandSecondaryHover returns the InterfaceBackgroundBrandSecondaryHover field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetInterfaceBackgroundBrandSecondaryHover() string {
	if o == nil || IsNil(o.InterfaceBackgroundBrandSecondaryHover) {
		var ret string
		return ret
	}
	return *o.InterfaceBackgroundBrandSecondaryHover
}

// GetInterfaceBackgroundBrandSecondaryHoverOk returns a tuple with the InterfaceBackgroundBrandSecondaryHover field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetInterfaceBackgroundBrandSecondaryHoverOk() (*string, bool) {
	if o == nil || IsNil(o.InterfaceBackgroundBrandSecondaryHover) {
		return nil, false
	}
	return o.InterfaceBackgroundBrandSecondaryHover, true
}

// HasInterfaceBackgroundBrandSecondaryHover returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasInterfaceBackgroundBrandSecondaryHover() bool {
	if o != nil && !IsNil(o.InterfaceBackgroundBrandSecondaryHover) {
		return true
	}

	return false
}

// SetInterfaceBackgroundBrandSecondaryHover gets a reference to the given string and assigns it to the InterfaceBackgroundBrandSecondaryHover field.
func (o *AccountExperienceColors) SetInterfaceBackgroundBrandSecondaryHover(v string) {
	o.InterfaceBackgroundBrandSecondaryHover = &v
}

// GetInterfaceBackgroundDefaultInverted returns the InterfaceBackgroundDefaultInverted field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetInterfaceBackgroundDefaultInverted() string {
	if o == nil || IsNil(o.InterfaceBackgroundDefaultInverted) {
		var ret string
		return ret
	}
	return *o.InterfaceBackgroundDefaultInverted
}

// GetInterfaceBackgroundDefaultInvertedOk returns a tuple with the InterfaceBackgroundDefaultInverted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetInterfaceBackgroundDefaultInvertedOk() (*string, bool) {
	if o == nil || IsNil(o.InterfaceBackgroundDefaultInverted) {
		return nil, false
	}
	return o.InterfaceBackgroundDefaultInverted, true
}

// HasInterfaceBackgroundDefaultInverted returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasInterfaceBackgroundDefaultInverted() bool {
	if o != nil && !IsNil(o.InterfaceBackgroundDefaultInverted) {
		return true
	}

	return false
}

// SetInterfaceBackgroundDefaultInverted gets a reference to the given string and assigns it to the InterfaceBackgroundDefaultInverted field.
func (o *AccountExperienceColors) SetInterfaceBackgroundDefaultInverted(v string) {
	o.InterfaceBackgroundDefaultInverted = &v
}

// GetInterfaceBackgroundDefaultInvertedHover returns the InterfaceBackgroundDefaultInvertedHover field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetInterfaceBackgroundDefaultInvertedHover() string {
	if o == nil || IsNil(o.InterfaceBackgroundDefaultInvertedHover) {
		var ret string
		return ret
	}
	return *o.InterfaceBackgroundDefaultInvertedHover
}

// GetInterfaceBackgroundDefaultInvertedHoverOk returns a tuple with the InterfaceBackgroundDefaultInvertedHover field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetInterfaceBackgroundDefaultInvertedHoverOk() (*string, bool) {
	if o == nil || IsNil(o.InterfaceBackgroundDefaultInvertedHover) {
		return nil, false
	}
	return o.InterfaceBackgroundDefaultInvertedHover, true
}

// HasInterfaceBackgroundDefaultInvertedHover returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasInterfaceBackgroundDefaultInvertedHover() bool {
	if o != nil && !IsNil(o.InterfaceBackgroundDefaultInvertedHover) {
		return true
	}

	return false
}

// SetInterfaceBackgroundDefaultInvertedHover gets a reference to the given string and assigns it to the InterfaceBackgroundDefaultInvertedHover field.
func (o *AccountExperienceColors) SetInterfaceBackgroundDefaultInvertedHover(v string) {
	o.InterfaceBackgroundDefaultInvertedHover = &v
}

// GetInterfaceBackgroundDefaultNone returns the InterfaceBackgroundDefaultNone field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetInterfaceBackgroundDefaultNone() string {
	if o == nil || IsNil(o.InterfaceBackgroundDefaultNone) {
		var ret string
		return ret
	}
	return *o.InterfaceBackgroundDefaultNone
}

// GetInterfaceBackgroundDefaultNoneOk returns a tuple with the InterfaceBackgroundDefaultNone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetInterfaceBackgroundDefaultNoneOk() (*string, bool) {
	if o == nil || IsNil(o.InterfaceBackgroundDefaultNone) {
		return nil, false
	}
	return o.InterfaceBackgroundDefaultNone, true
}

// HasInterfaceBackgroundDefaultNone returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasInterfaceBackgroundDefaultNone() bool {
	if o != nil && !IsNil(o.InterfaceBackgroundDefaultNone) {
		return true
	}

	return false
}

// SetInterfaceBackgroundDefaultNone gets a reference to the given string and assigns it to the InterfaceBackgroundDefaultNone field.
func (o *AccountExperienceColors) SetInterfaceBackgroundDefaultNone(v string) {
	o.InterfaceBackgroundDefaultNone = &v
}

// GetInterfaceBackgroundDefaultPrimary returns the InterfaceBackgroundDefaultPrimary field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetInterfaceBackgroundDefaultPrimary() string {
	if o == nil || IsNil(o.InterfaceBackgroundDefaultPrimary) {
		var ret string
		return ret
	}
	return *o.InterfaceBackgroundDefaultPrimary
}

// GetInterfaceBackgroundDefaultPrimaryOk returns a tuple with the InterfaceBackgroundDefaultPrimary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetInterfaceBackgroundDefaultPrimaryOk() (*string, bool) {
	if o == nil || IsNil(o.InterfaceBackgroundDefaultPrimary) {
		return nil, false
	}
	return o.InterfaceBackgroundDefaultPrimary, true
}

// HasInterfaceBackgroundDefaultPrimary returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasInterfaceBackgroundDefaultPrimary() bool {
	if o != nil && !IsNil(o.InterfaceBackgroundDefaultPrimary) {
		return true
	}

	return false
}

// SetInterfaceBackgroundDefaultPrimary gets a reference to the given string and assigns it to the InterfaceBackgroundDefaultPrimary field.
func (o *AccountExperienceColors) SetInterfaceBackgroundDefaultPrimary(v string) {
	o.InterfaceBackgroundDefaultPrimary = &v
}

// GetInterfaceBackgroundDefaultPrimaryHover returns the InterfaceBackgroundDefaultPrimaryHover field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetInterfaceBackgroundDefaultPrimaryHover() string {
	if o == nil || IsNil(o.InterfaceBackgroundDefaultPrimaryHover) {
		var ret string
		return ret
	}
	return *o.InterfaceBackgroundDefaultPrimaryHover
}

// GetInterfaceBackgroundDefaultPrimaryHoverOk returns a tuple with the InterfaceBackgroundDefaultPrimaryHover field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetInterfaceBackgroundDefaultPrimaryHoverOk() (*string, bool) {
	if o == nil || IsNil(o.InterfaceBackgroundDefaultPrimaryHover) {
		return nil, false
	}
	return o.InterfaceBackgroundDefaultPrimaryHover, true
}

// HasInterfaceBackgroundDefaultPrimaryHover returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasInterfaceBackgroundDefaultPrimaryHover() bool {
	if o != nil && !IsNil(o.InterfaceBackgroundDefaultPrimaryHover) {
		return true
	}

	return false
}

// SetInterfaceBackgroundDefaultPrimaryHover gets a reference to the given string and assigns it to the InterfaceBackgroundDefaultPrimaryHover field.
func (o *AccountExperienceColors) SetInterfaceBackgroundDefaultPrimaryHover(v string) {
	o.InterfaceBackgroundDefaultPrimaryHover = &v
}

// GetInterfaceBackgroundDefaultSecondary returns the InterfaceBackgroundDefaultSecondary field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetInterfaceBackgroundDefaultSecondary() string {
	if o == nil || IsNil(o.InterfaceBackgroundDefaultSecondary) {
		var ret string
		return ret
	}
	return *o.InterfaceBackgroundDefaultSecondary
}

// GetInterfaceBackgroundDefaultSecondaryOk returns a tuple with the InterfaceBackgroundDefaultSecondary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetInterfaceBackgroundDefaultSecondaryOk() (*string, bool) {
	if o == nil || IsNil(o.InterfaceBackgroundDefaultSecondary) {
		return nil, false
	}
	return o.InterfaceBackgroundDefaultSecondary, true
}

// HasInterfaceBackgroundDefaultSecondary returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasInterfaceBackgroundDefaultSecondary() bool {
	if o != nil && !IsNil(o.InterfaceBackgroundDefaultSecondary) {
		return true
	}

	return false
}

// SetInterfaceBackgroundDefaultSecondary gets a reference to the given string and assigns it to the InterfaceBackgroundDefaultSecondary field.
func (o *AccountExperienceColors) SetInterfaceBackgroundDefaultSecondary(v string) {
	o.InterfaceBackgroundDefaultSecondary = &v
}

// GetInterfaceBackgroundDefaultSecondaryHover returns the InterfaceBackgroundDefaultSecondaryHover field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetInterfaceBackgroundDefaultSecondaryHover() string {
	if o == nil || IsNil(o.InterfaceBackgroundDefaultSecondaryHover) {
		var ret string
		return ret
	}
	return *o.InterfaceBackgroundDefaultSecondaryHover
}

// GetInterfaceBackgroundDefaultSecondaryHoverOk returns a tuple with the InterfaceBackgroundDefaultSecondaryHover field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetInterfaceBackgroundDefaultSecondaryHoverOk() (*string, bool) {
	if o == nil || IsNil(o.InterfaceBackgroundDefaultSecondaryHover) {
		return nil, false
	}
	return o.InterfaceBackgroundDefaultSecondaryHover, true
}

// HasInterfaceBackgroundDefaultSecondaryHover returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasInterfaceBackgroundDefaultSecondaryHover() bool {
	if o != nil && !IsNil(o.InterfaceBackgroundDefaultSecondaryHover) {
		return true
	}

	return false
}

// SetInterfaceBackgroundDefaultSecondaryHover gets a reference to the given string and assigns it to the InterfaceBackgroundDefaultSecondaryHover field.
func (o *AccountExperienceColors) SetInterfaceBackgroundDefaultSecondaryHover(v string) {
	o.InterfaceBackgroundDefaultSecondaryHover = &v
}

// GetInterfaceBackgroundDefaultTertiary returns the InterfaceBackgroundDefaultTertiary field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetInterfaceBackgroundDefaultTertiary() string {
	if o == nil || IsNil(o.InterfaceBackgroundDefaultTertiary) {
		var ret string
		return ret
	}
	return *o.InterfaceBackgroundDefaultTertiary
}

// GetInterfaceBackgroundDefaultTertiaryOk returns a tuple with the InterfaceBackgroundDefaultTertiary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetInterfaceBackgroundDefaultTertiaryOk() (*string, bool) {
	if o == nil || IsNil(o.InterfaceBackgroundDefaultTertiary) {
		return nil, false
	}
	return o.InterfaceBackgroundDefaultTertiary, true
}

// HasInterfaceBackgroundDefaultTertiary returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasInterfaceBackgroundDefaultTertiary() bool {
	if o != nil && !IsNil(o.InterfaceBackgroundDefaultTertiary) {
		return true
	}

	return false
}

// SetInterfaceBackgroundDefaultTertiary gets a reference to the given string and assigns it to the InterfaceBackgroundDefaultTertiary field.
func (o *AccountExperienceColors) SetInterfaceBackgroundDefaultTertiary(v string) {
	o.InterfaceBackgroundDefaultTertiary = &v
}

// GetInterfaceBackgroundDefaultTertiaryHover returns the InterfaceBackgroundDefaultTertiaryHover field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetInterfaceBackgroundDefaultTertiaryHover() string {
	if o == nil || IsNil(o.InterfaceBackgroundDefaultTertiaryHover) {
		var ret string
		return ret
	}
	return *o.InterfaceBackgroundDefaultTertiaryHover
}

// GetInterfaceBackgroundDefaultTertiaryHoverOk returns a tuple with the InterfaceBackgroundDefaultTertiaryHover field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetInterfaceBackgroundDefaultTertiaryHoverOk() (*string, bool) {
	if o == nil || IsNil(o.InterfaceBackgroundDefaultTertiaryHover) {
		return nil, false
	}
	return o.InterfaceBackgroundDefaultTertiaryHover, true
}

// HasInterfaceBackgroundDefaultTertiaryHover returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasInterfaceBackgroundDefaultTertiaryHover() bool {
	if o != nil && !IsNil(o.InterfaceBackgroundDefaultTertiaryHover) {
		return true
	}

	return false
}

// SetInterfaceBackgroundDefaultTertiaryHover gets a reference to the given string and assigns it to the InterfaceBackgroundDefaultTertiaryHover field.
func (o *AccountExperienceColors) SetInterfaceBackgroundDefaultTertiaryHover(v string) {
	o.InterfaceBackgroundDefaultTertiaryHover = &v
}

// GetInterfaceBackgroundDisabledDisabled returns the InterfaceBackgroundDisabledDisabled field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetInterfaceBackgroundDisabledDisabled() string {
	if o == nil || IsNil(o.InterfaceBackgroundDisabledDisabled) {
		var ret string
		return ret
	}
	return *o.InterfaceBackgroundDisabledDisabled
}

// GetInterfaceBackgroundDisabledDisabledOk returns a tuple with the InterfaceBackgroundDisabledDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetInterfaceBackgroundDisabledDisabledOk() (*string, bool) {
	if o == nil || IsNil(o.InterfaceBackgroundDisabledDisabled) {
		return nil, false
	}
	return o.InterfaceBackgroundDisabledDisabled, true
}

// HasInterfaceBackgroundDisabledDisabled returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasInterfaceBackgroundDisabledDisabled() bool {
	if o != nil && !IsNil(o.InterfaceBackgroundDisabledDisabled) {
		return true
	}

	return false
}

// SetInterfaceBackgroundDisabledDisabled gets a reference to the given string and assigns it to the InterfaceBackgroundDisabledDisabled field.
func (o *AccountExperienceColors) SetInterfaceBackgroundDisabledDisabled(v string) {
	o.InterfaceBackgroundDisabledDisabled = &v
}

// GetInterfaceBackgroundValidationDanger returns the InterfaceBackgroundValidationDanger field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetInterfaceBackgroundValidationDanger() string {
	if o == nil || IsNil(o.InterfaceBackgroundValidationDanger) {
		var ret string
		return ret
	}
	return *o.InterfaceBackgroundValidationDanger
}

// GetInterfaceBackgroundValidationDangerOk returns a tuple with the InterfaceBackgroundValidationDanger field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetInterfaceBackgroundValidationDangerOk() (*string, bool) {
	if o == nil || IsNil(o.InterfaceBackgroundValidationDanger) {
		return nil, false
	}
	return o.InterfaceBackgroundValidationDanger, true
}

// HasInterfaceBackgroundValidationDanger returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasInterfaceBackgroundValidationDanger() bool {
	if o != nil && !IsNil(o.InterfaceBackgroundValidationDanger) {
		return true
	}

	return false
}

// SetInterfaceBackgroundValidationDanger gets a reference to the given string and assigns it to the InterfaceBackgroundValidationDanger field.
func (o *AccountExperienceColors) SetInterfaceBackgroundValidationDanger(v string) {
	o.InterfaceBackgroundValidationDanger = &v
}

// GetInterfaceBackgroundValidationSuccess returns the InterfaceBackgroundValidationSuccess field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetInterfaceBackgroundValidationSuccess() string {
	if o == nil || IsNil(o.InterfaceBackgroundValidationSuccess) {
		var ret string
		return ret
	}
	return *o.InterfaceBackgroundValidationSuccess
}

// GetInterfaceBackgroundValidationSuccessOk returns a tuple with the InterfaceBackgroundValidationSuccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetInterfaceBackgroundValidationSuccessOk() (*string, bool) {
	if o == nil || IsNil(o.InterfaceBackgroundValidationSuccess) {
		return nil, false
	}
	return o.InterfaceBackgroundValidationSuccess, true
}

// HasInterfaceBackgroundValidationSuccess returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasInterfaceBackgroundValidationSuccess() bool {
	if o != nil && !IsNil(o.InterfaceBackgroundValidationSuccess) {
		return true
	}

	return false
}

// SetInterfaceBackgroundValidationSuccess gets a reference to the given string and assigns it to the InterfaceBackgroundValidationSuccess field.
func (o *AccountExperienceColors) SetInterfaceBackgroundValidationSuccess(v string) {
	o.InterfaceBackgroundValidationSuccess = &v
}

// GetInterfaceBackgroundValidationWarning returns the InterfaceBackgroundValidationWarning field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetInterfaceBackgroundValidationWarning() string {
	if o == nil || IsNil(o.InterfaceBackgroundValidationWarning) {
		var ret string
		return ret
	}
	return *o.InterfaceBackgroundValidationWarning
}

// GetInterfaceBackgroundValidationWarningOk returns a tuple with the InterfaceBackgroundValidationWarning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetInterfaceBackgroundValidationWarningOk() (*string, bool) {
	if o == nil || IsNil(o.InterfaceBackgroundValidationWarning) {
		return nil, false
	}
	return o.InterfaceBackgroundValidationWarning, true
}

// HasInterfaceBackgroundValidationWarning returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasInterfaceBackgroundValidationWarning() bool {
	if o != nil && !IsNil(o.InterfaceBackgroundValidationWarning) {
		return true
	}

	return false
}

// SetInterfaceBackgroundValidationWarning gets a reference to the given string and assigns it to the InterfaceBackgroundValidationWarning field.
func (o *AccountExperienceColors) SetInterfaceBackgroundValidationWarning(v string) {
	o.InterfaceBackgroundValidationWarning = &v
}

// GetInterfaceBorderBrandBrand returns the InterfaceBorderBrandBrand field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetInterfaceBorderBrandBrand() string {
	if o == nil || IsNil(o.InterfaceBorderBrandBrand) {
		var ret string
		return ret
	}
	return *o.InterfaceBorderBrandBrand
}

// GetInterfaceBorderBrandBrandOk returns a tuple with the InterfaceBorderBrandBrand field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetInterfaceBorderBrandBrandOk() (*string, bool) {
	if o == nil || IsNil(o.InterfaceBorderBrandBrand) {
		return nil, false
	}
	return o.InterfaceBorderBrandBrand, true
}

// HasInterfaceBorderBrandBrand returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasInterfaceBorderBrandBrand() bool {
	if o != nil && !IsNil(o.InterfaceBorderBrandBrand) {
		return true
	}

	return false
}

// SetInterfaceBorderBrandBrand gets a reference to the given string and assigns it to the InterfaceBorderBrandBrand field.
func (o *AccountExperienceColors) SetInterfaceBorderBrandBrand(v string) {
	o.InterfaceBorderBrandBrand = &v
}

// GetInterfaceBorderDefaultInverted returns the InterfaceBorderDefaultInverted field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetInterfaceBorderDefaultInverted() string {
	if o == nil || IsNil(o.InterfaceBorderDefaultInverted) {
		var ret string
		return ret
	}
	return *o.InterfaceBorderDefaultInverted
}

// GetInterfaceBorderDefaultInvertedOk returns a tuple with the InterfaceBorderDefaultInverted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetInterfaceBorderDefaultInvertedOk() (*string, bool) {
	if o == nil || IsNil(o.InterfaceBorderDefaultInverted) {
		return nil, false
	}
	return o.InterfaceBorderDefaultInverted, true
}

// HasInterfaceBorderDefaultInverted returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasInterfaceBorderDefaultInverted() bool {
	if o != nil && !IsNil(o.InterfaceBorderDefaultInverted) {
		return true
	}

	return false
}

// SetInterfaceBorderDefaultInverted gets a reference to the given string and assigns it to the InterfaceBorderDefaultInverted field.
func (o *AccountExperienceColors) SetInterfaceBorderDefaultInverted(v string) {
	o.InterfaceBorderDefaultInverted = &v
}

// GetInterfaceBorderDefaultNone returns the InterfaceBorderDefaultNone field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetInterfaceBorderDefaultNone() string {
	if o == nil || IsNil(o.InterfaceBorderDefaultNone) {
		var ret string
		return ret
	}
	return *o.InterfaceBorderDefaultNone
}

// GetInterfaceBorderDefaultNoneOk returns a tuple with the InterfaceBorderDefaultNone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetInterfaceBorderDefaultNoneOk() (*string, bool) {
	if o == nil || IsNil(o.InterfaceBorderDefaultNone) {
		return nil, false
	}
	return o.InterfaceBorderDefaultNone, true
}

// HasInterfaceBorderDefaultNone returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasInterfaceBorderDefaultNone() bool {
	if o != nil && !IsNil(o.InterfaceBorderDefaultNone) {
		return true
	}

	return false
}

// SetInterfaceBorderDefaultNone gets a reference to the given string and assigns it to the InterfaceBorderDefaultNone field.
func (o *AccountExperienceColors) SetInterfaceBorderDefaultNone(v string) {
	o.InterfaceBorderDefaultNone = &v
}

// GetInterfaceBorderDefaultPrimary returns the InterfaceBorderDefaultPrimary field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetInterfaceBorderDefaultPrimary() string {
	if o == nil || IsNil(o.InterfaceBorderDefaultPrimary) {
		var ret string
		return ret
	}
	return *o.InterfaceBorderDefaultPrimary
}

// GetInterfaceBorderDefaultPrimaryOk returns a tuple with the InterfaceBorderDefaultPrimary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetInterfaceBorderDefaultPrimaryOk() (*string, bool) {
	if o == nil || IsNil(o.InterfaceBorderDefaultPrimary) {
		return nil, false
	}
	return o.InterfaceBorderDefaultPrimary, true
}

// HasInterfaceBorderDefaultPrimary returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasInterfaceBorderDefaultPrimary() bool {
	if o != nil && !IsNil(o.InterfaceBorderDefaultPrimary) {
		return true
	}

	return false
}

// SetInterfaceBorderDefaultPrimary gets a reference to the given string and assigns it to the InterfaceBorderDefaultPrimary field.
func (o *AccountExperienceColors) SetInterfaceBorderDefaultPrimary(v string) {
	o.InterfaceBorderDefaultPrimary = &v
}

// GetInterfaceBorderDisabledDisabled returns the InterfaceBorderDisabledDisabled field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetInterfaceBorderDisabledDisabled() string {
	if o == nil || IsNil(o.InterfaceBorderDisabledDisabled) {
		var ret string
		return ret
	}
	return *o.InterfaceBorderDisabledDisabled
}

// GetInterfaceBorderDisabledDisabledOk returns a tuple with the InterfaceBorderDisabledDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetInterfaceBorderDisabledDisabledOk() (*string, bool) {
	if o == nil || IsNil(o.InterfaceBorderDisabledDisabled) {
		return nil, false
	}
	return o.InterfaceBorderDisabledDisabled, true
}

// HasInterfaceBorderDisabledDisabled returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasInterfaceBorderDisabledDisabled() bool {
	if o != nil && !IsNil(o.InterfaceBorderDisabledDisabled) {
		return true
	}

	return false
}

// SetInterfaceBorderDisabledDisabled gets a reference to the given string and assigns it to the InterfaceBorderDisabledDisabled field.
func (o *AccountExperienceColors) SetInterfaceBorderDisabledDisabled(v string) {
	o.InterfaceBorderDisabledDisabled = &v
}

// GetInterfaceBorderValidationDanger returns the InterfaceBorderValidationDanger field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetInterfaceBorderValidationDanger() string {
	if o == nil || IsNil(o.InterfaceBorderValidationDanger) {
		var ret string
		return ret
	}
	return *o.InterfaceBorderValidationDanger
}

// GetInterfaceBorderValidationDangerOk returns a tuple with the InterfaceBorderValidationDanger field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetInterfaceBorderValidationDangerOk() (*string, bool) {
	if o == nil || IsNil(o.InterfaceBorderValidationDanger) {
		return nil, false
	}
	return o.InterfaceBorderValidationDanger, true
}

// HasInterfaceBorderValidationDanger returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasInterfaceBorderValidationDanger() bool {
	if o != nil && !IsNil(o.InterfaceBorderValidationDanger) {
		return true
	}

	return false
}

// SetInterfaceBorderValidationDanger gets a reference to the given string and assigns it to the InterfaceBorderValidationDanger field.
func (o *AccountExperienceColors) SetInterfaceBorderValidationDanger(v string) {
	o.InterfaceBorderValidationDanger = &v
}

// GetInterfaceBorderValidationSuccess returns the InterfaceBorderValidationSuccess field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetInterfaceBorderValidationSuccess() string {
	if o == nil || IsNil(o.InterfaceBorderValidationSuccess) {
		var ret string
		return ret
	}
	return *o.InterfaceBorderValidationSuccess
}

// GetInterfaceBorderValidationSuccessOk returns a tuple with the InterfaceBorderValidationSuccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetInterfaceBorderValidationSuccessOk() (*string, bool) {
	if o == nil || IsNil(o.InterfaceBorderValidationSuccess) {
		return nil, false
	}
	return o.InterfaceBorderValidationSuccess, true
}

// HasInterfaceBorderValidationSuccess returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasInterfaceBorderValidationSuccess() bool {
	if o != nil && !IsNil(o.InterfaceBorderValidationSuccess) {
		return true
	}

	return false
}

// SetInterfaceBorderValidationSuccess gets a reference to the given string and assigns it to the InterfaceBorderValidationSuccess field.
func (o *AccountExperienceColors) SetInterfaceBorderValidationSuccess(v string) {
	o.InterfaceBorderValidationSuccess = &v
}

// GetInterfaceBorderValidationWarning returns the InterfaceBorderValidationWarning field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetInterfaceBorderValidationWarning() string {
	if o == nil || IsNil(o.InterfaceBorderValidationWarning) {
		var ret string
		return ret
	}
	return *o.InterfaceBorderValidationWarning
}

// GetInterfaceBorderValidationWarningOk returns a tuple with the InterfaceBorderValidationWarning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetInterfaceBorderValidationWarningOk() (*string, bool) {
	if o == nil || IsNil(o.InterfaceBorderValidationWarning) {
		return nil, false
	}
	return o.InterfaceBorderValidationWarning, true
}

// HasInterfaceBorderValidationWarning returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasInterfaceBorderValidationWarning() bool {
	if o != nil && !IsNil(o.InterfaceBorderValidationWarning) {
		return true
	}

	return false
}

// SetInterfaceBorderValidationWarning gets a reference to the given string and assigns it to the InterfaceBorderValidationWarning field.
func (o *AccountExperienceColors) SetInterfaceBorderValidationWarning(v string) {
	o.InterfaceBorderValidationWarning = &v
}

// GetInterfaceForegroundBrandOnPrimary returns the InterfaceForegroundBrandOnPrimary field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetInterfaceForegroundBrandOnPrimary() string {
	if o == nil || IsNil(o.InterfaceForegroundBrandOnPrimary) {
		var ret string
		return ret
	}
	return *o.InterfaceForegroundBrandOnPrimary
}

// GetInterfaceForegroundBrandOnPrimaryOk returns a tuple with the InterfaceForegroundBrandOnPrimary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetInterfaceForegroundBrandOnPrimaryOk() (*string, bool) {
	if o == nil || IsNil(o.InterfaceForegroundBrandOnPrimary) {
		return nil, false
	}
	return o.InterfaceForegroundBrandOnPrimary, true
}

// HasInterfaceForegroundBrandOnPrimary returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasInterfaceForegroundBrandOnPrimary() bool {
	if o != nil && !IsNil(o.InterfaceForegroundBrandOnPrimary) {
		return true
	}

	return false
}

// SetInterfaceForegroundBrandOnPrimary gets a reference to the given string and assigns it to the InterfaceForegroundBrandOnPrimary field.
func (o *AccountExperienceColors) SetInterfaceForegroundBrandOnPrimary(v string) {
	o.InterfaceForegroundBrandOnPrimary = &v
}

// GetInterfaceForegroundBrandOnSecondary returns the InterfaceForegroundBrandOnSecondary field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetInterfaceForegroundBrandOnSecondary() string {
	if o == nil || IsNil(o.InterfaceForegroundBrandOnSecondary) {
		var ret string
		return ret
	}
	return *o.InterfaceForegroundBrandOnSecondary
}

// GetInterfaceForegroundBrandOnSecondaryOk returns a tuple with the InterfaceForegroundBrandOnSecondary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetInterfaceForegroundBrandOnSecondaryOk() (*string, bool) {
	if o == nil || IsNil(o.InterfaceForegroundBrandOnSecondary) {
		return nil, false
	}
	return o.InterfaceForegroundBrandOnSecondary, true
}

// HasInterfaceForegroundBrandOnSecondary returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasInterfaceForegroundBrandOnSecondary() bool {
	if o != nil && !IsNil(o.InterfaceForegroundBrandOnSecondary) {
		return true
	}

	return false
}

// SetInterfaceForegroundBrandOnSecondary gets a reference to the given string and assigns it to the InterfaceForegroundBrandOnSecondary field.
func (o *AccountExperienceColors) SetInterfaceForegroundBrandOnSecondary(v string) {
	o.InterfaceForegroundBrandOnSecondary = &v
}

// GetInterfaceForegroundBrandPrimary returns the InterfaceForegroundBrandPrimary field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetInterfaceForegroundBrandPrimary() string {
	if o == nil || IsNil(o.InterfaceForegroundBrandPrimary) {
		var ret string
		return ret
	}
	return *o.InterfaceForegroundBrandPrimary
}

// GetInterfaceForegroundBrandPrimaryOk returns a tuple with the InterfaceForegroundBrandPrimary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetInterfaceForegroundBrandPrimaryOk() (*string, bool) {
	if o == nil || IsNil(o.InterfaceForegroundBrandPrimary) {
		return nil, false
	}
	return o.InterfaceForegroundBrandPrimary, true
}

// HasInterfaceForegroundBrandPrimary returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasInterfaceForegroundBrandPrimary() bool {
	if o != nil && !IsNil(o.InterfaceForegroundBrandPrimary) {
		return true
	}

	return false
}

// SetInterfaceForegroundBrandPrimary gets a reference to the given string and assigns it to the InterfaceForegroundBrandPrimary field.
func (o *AccountExperienceColors) SetInterfaceForegroundBrandPrimary(v string) {
	o.InterfaceForegroundBrandPrimary = &v
}

// GetInterfaceForegroundBrandSecondary returns the InterfaceForegroundBrandSecondary field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetInterfaceForegroundBrandSecondary() string {
	if o == nil || IsNil(o.InterfaceForegroundBrandSecondary) {
		var ret string
		return ret
	}
	return *o.InterfaceForegroundBrandSecondary
}

// GetInterfaceForegroundBrandSecondaryOk returns a tuple with the InterfaceForegroundBrandSecondary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetInterfaceForegroundBrandSecondaryOk() (*string, bool) {
	if o == nil || IsNil(o.InterfaceForegroundBrandSecondary) {
		return nil, false
	}
	return o.InterfaceForegroundBrandSecondary, true
}

// HasInterfaceForegroundBrandSecondary returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasInterfaceForegroundBrandSecondary() bool {
	if o != nil && !IsNil(o.InterfaceForegroundBrandSecondary) {
		return true
	}

	return false
}

// SetInterfaceForegroundBrandSecondary gets a reference to the given string and assigns it to the InterfaceForegroundBrandSecondary field.
func (o *AccountExperienceColors) SetInterfaceForegroundBrandSecondary(v string) {
	o.InterfaceForegroundBrandSecondary = &v
}

// GetInterfaceForegroundDefaultInverted returns the InterfaceForegroundDefaultInverted field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetInterfaceForegroundDefaultInverted() string {
	if o == nil || IsNil(o.InterfaceForegroundDefaultInverted) {
		var ret string
		return ret
	}
	return *o.InterfaceForegroundDefaultInverted
}

// GetInterfaceForegroundDefaultInvertedOk returns a tuple with the InterfaceForegroundDefaultInverted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetInterfaceForegroundDefaultInvertedOk() (*string, bool) {
	if o == nil || IsNil(o.InterfaceForegroundDefaultInverted) {
		return nil, false
	}
	return o.InterfaceForegroundDefaultInverted, true
}

// HasInterfaceForegroundDefaultInverted returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasInterfaceForegroundDefaultInverted() bool {
	if o != nil && !IsNil(o.InterfaceForegroundDefaultInverted) {
		return true
	}

	return false
}

// SetInterfaceForegroundDefaultInverted gets a reference to the given string and assigns it to the InterfaceForegroundDefaultInverted field.
func (o *AccountExperienceColors) SetInterfaceForegroundDefaultInverted(v string) {
	o.InterfaceForegroundDefaultInverted = &v
}

// GetInterfaceForegroundDefaultPrimary returns the InterfaceForegroundDefaultPrimary field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetInterfaceForegroundDefaultPrimary() string {
	if o == nil || IsNil(o.InterfaceForegroundDefaultPrimary) {
		var ret string
		return ret
	}
	return *o.InterfaceForegroundDefaultPrimary
}

// GetInterfaceForegroundDefaultPrimaryOk returns a tuple with the InterfaceForegroundDefaultPrimary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetInterfaceForegroundDefaultPrimaryOk() (*string, bool) {
	if o == nil || IsNil(o.InterfaceForegroundDefaultPrimary) {
		return nil, false
	}
	return o.InterfaceForegroundDefaultPrimary, true
}

// HasInterfaceForegroundDefaultPrimary returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasInterfaceForegroundDefaultPrimary() bool {
	if o != nil && !IsNil(o.InterfaceForegroundDefaultPrimary) {
		return true
	}

	return false
}

// SetInterfaceForegroundDefaultPrimary gets a reference to the given string and assigns it to the InterfaceForegroundDefaultPrimary field.
func (o *AccountExperienceColors) SetInterfaceForegroundDefaultPrimary(v string) {
	o.InterfaceForegroundDefaultPrimary = &v
}

// GetInterfaceForegroundDefaultSecondary returns the InterfaceForegroundDefaultSecondary field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetInterfaceForegroundDefaultSecondary() string {
	if o == nil || IsNil(o.InterfaceForegroundDefaultSecondary) {
		var ret string
		return ret
	}
	return *o.InterfaceForegroundDefaultSecondary
}

// GetInterfaceForegroundDefaultSecondaryOk returns a tuple with the InterfaceForegroundDefaultSecondary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetInterfaceForegroundDefaultSecondaryOk() (*string, bool) {
	if o == nil || IsNil(o.InterfaceForegroundDefaultSecondary) {
		return nil, false
	}
	return o.InterfaceForegroundDefaultSecondary, true
}

// HasInterfaceForegroundDefaultSecondary returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasInterfaceForegroundDefaultSecondary() bool {
	if o != nil && !IsNil(o.InterfaceForegroundDefaultSecondary) {
		return true
	}

	return false
}

// SetInterfaceForegroundDefaultSecondary gets a reference to the given string and assigns it to the InterfaceForegroundDefaultSecondary field.
func (o *AccountExperienceColors) SetInterfaceForegroundDefaultSecondary(v string) {
	o.InterfaceForegroundDefaultSecondary = &v
}

// GetInterfaceForegroundDefaultTertiary returns the InterfaceForegroundDefaultTertiary field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetInterfaceForegroundDefaultTertiary() string {
	if o == nil || IsNil(o.InterfaceForegroundDefaultTertiary) {
		var ret string
		return ret
	}
	return *o.InterfaceForegroundDefaultTertiary
}

// GetInterfaceForegroundDefaultTertiaryOk returns a tuple with the InterfaceForegroundDefaultTertiary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetInterfaceForegroundDefaultTertiaryOk() (*string, bool) {
	if o == nil || IsNil(o.InterfaceForegroundDefaultTertiary) {
		return nil, false
	}
	return o.InterfaceForegroundDefaultTertiary, true
}

// HasInterfaceForegroundDefaultTertiary returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasInterfaceForegroundDefaultTertiary() bool {
	if o != nil && !IsNil(o.InterfaceForegroundDefaultTertiary) {
		return true
	}

	return false
}

// SetInterfaceForegroundDefaultTertiary gets a reference to the given string and assigns it to the InterfaceForegroundDefaultTertiary field.
func (o *AccountExperienceColors) SetInterfaceForegroundDefaultTertiary(v string) {
	o.InterfaceForegroundDefaultTertiary = &v
}

// GetInterfaceForegroundDisabledDisabled returns the InterfaceForegroundDisabledDisabled field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetInterfaceForegroundDisabledDisabled() string {
	if o == nil || IsNil(o.InterfaceForegroundDisabledDisabled) {
		var ret string
		return ret
	}
	return *o.InterfaceForegroundDisabledDisabled
}

// GetInterfaceForegroundDisabledDisabledOk returns a tuple with the InterfaceForegroundDisabledDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetInterfaceForegroundDisabledDisabledOk() (*string, bool) {
	if o == nil || IsNil(o.InterfaceForegroundDisabledDisabled) {
		return nil, false
	}
	return o.InterfaceForegroundDisabledDisabled, true
}

// HasInterfaceForegroundDisabledDisabled returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasInterfaceForegroundDisabledDisabled() bool {
	if o != nil && !IsNil(o.InterfaceForegroundDisabledDisabled) {
		return true
	}

	return false
}

// SetInterfaceForegroundDisabledDisabled gets a reference to the given string and assigns it to the InterfaceForegroundDisabledDisabled field.
func (o *AccountExperienceColors) SetInterfaceForegroundDisabledDisabled(v string) {
	o.InterfaceForegroundDisabledDisabled = &v
}

// GetInterfaceForegroundDisabledOnDisabled returns the InterfaceForegroundDisabledOnDisabled field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetInterfaceForegroundDisabledOnDisabled() string {
	if o == nil || IsNil(o.InterfaceForegroundDisabledOnDisabled) {
		var ret string
		return ret
	}
	return *o.InterfaceForegroundDisabledOnDisabled
}

// GetInterfaceForegroundDisabledOnDisabledOk returns a tuple with the InterfaceForegroundDisabledOnDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetInterfaceForegroundDisabledOnDisabledOk() (*string, bool) {
	if o == nil || IsNil(o.InterfaceForegroundDisabledOnDisabled) {
		return nil, false
	}
	return o.InterfaceForegroundDisabledOnDisabled, true
}

// HasInterfaceForegroundDisabledOnDisabled returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasInterfaceForegroundDisabledOnDisabled() bool {
	if o != nil && !IsNil(o.InterfaceForegroundDisabledOnDisabled) {
		return true
	}

	return false
}

// SetInterfaceForegroundDisabledOnDisabled gets a reference to the given string and assigns it to the InterfaceForegroundDisabledOnDisabled field.
func (o *AccountExperienceColors) SetInterfaceForegroundDisabledOnDisabled(v string) {
	o.InterfaceForegroundDisabledOnDisabled = &v
}

// GetInterfaceForegroundValidationDanger returns the InterfaceForegroundValidationDanger field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetInterfaceForegroundValidationDanger() string {
	if o == nil || IsNil(o.InterfaceForegroundValidationDanger) {
		var ret string
		return ret
	}
	return *o.InterfaceForegroundValidationDanger
}

// GetInterfaceForegroundValidationDangerOk returns a tuple with the InterfaceForegroundValidationDanger field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetInterfaceForegroundValidationDangerOk() (*string, bool) {
	if o == nil || IsNil(o.InterfaceForegroundValidationDanger) {
		return nil, false
	}
	return o.InterfaceForegroundValidationDanger, true
}

// HasInterfaceForegroundValidationDanger returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasInterfaceForegroundValidationDanger() bool {
	if o != nil && !IsNil(o.InterfaceForegroundValidationDanger) {
		return true
	}

	return false
}

// SetInterfaceForegroundValidationDanger gets a reference to the given string and assigns it to the InterfaceForegroundValidationDanger field.
func (o *AccountExperienceColors) SetInterfaceForegroundValidationDanger(v string) {
	o.InterfaceForegroundValidationDanger = &v
}

// GetInterfaceForegroundValidationSuccess returns the InterfaceForegroundValidationSuccess field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetInterfaceForegroundValidationSuccess() string {
	if o == nil || IsNil(o.InterfaceForegroundValidationSuccess) {
		var ret string
		return ret
	}
	return *o.InterfaceForegroundValidationSuccess
}

// GetInterfaceForegroundValidationSuccessOk returns a tuple with the InterfaceForegroundValidationSuccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetInterfaceForegroundValidationSuccessOk() (*string, bool) {
	if o == nil || IsNil(o.InterfaceForegroundValidationSuccess) {
		return nil, false
	}
	return o.InterfaceForegroundValidationSuccess, true
}

// HasInterfaceForegroundValidationSuccess returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasInterfaceForegroundValidationSuccess() bool {
	if o != nil && !IsNil(o.InterfaceForegroundValidationSuccess) {
		return true
	}

	return false
}

// SetInterfaceForegroundValidationSuccess gets a reference to the given string and assigns it to the InterfaceForegroundValidationSuccess field.
func (o *AccountExperienceColors) SetInterfaceForegroundValidationSuccess(v string) {
	o.InterfaceForegroundValidationSuccess = &v
}

// GetInterfaceForegroundValidationWarning returns the InterfaceForegroundValidationWarning field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetInterfaceForegroundValidationWarning() string {
	if o == nil || IsNil(o.InterfaceForegroundValidationWarning) {
		var ret string
		return ret
	}
	return *o.InterfaceForegroundValidationWarning
}

// GetInterfaceForegroundValidationWarningOk returns a tuple with the InterfaceForegroundValidationWarning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetInterfaceForegroundValidationWarningOk() (*string, bool) {
	if o == nil || IsNil(o.InterfaceForegroundValidationWarning) {
		return nil, false
	}
	return o.InterfaceForegroundValidationWarning, true
}

// HasInterfaceForegroundValidationWarning returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasInterfaceForegroundValidationWarning() bool {
	if o != nil && !IsNil(o.InterfaceForegroundValidationWarning) {
		return true
	}

	return false
}

// SetInterfaceForegroundValidationWarning gets a reference to the given string and assigns it to the InterfaceForegroundValidationWarning field.
func (o *AccountExperienceColors) SetInterfaceForegroundValidationWarning(v string) {
	o.InterfaceForegroundValidationWarning = &v
}

// GetOryBackgroundDefault returns the OryBackgroundDefault field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetOryBackgroundDefault() string {
	if o == nil || IsNil(o.OryBackgroundDefault) {
		var ret string
		return ret
	}
	return *o.OryBackgroundDefault
}

// GetOryBackgroundDefaultOk returns a tuple with the OryBackgroundDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetOryBackgroundDefaultOk() (*string, bool) {
	if o == nil || IsNil(o.OryBackgroundDefault) {
		return nil, false
	}
	return o.OryBackgroundDefault, true
}

// HasOryBackgroundDefault returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasOryBackgroundDefault() bool {
	if o != nil && !IsNil(o.OryBackgroundDefault) {
		return true
	}

	return false
}

// SetOryBackgroundDefault gets a reference to the given string and assigns it to the OryBackgroundDefault field.
func (o *AccountExperienceColors) SetOryBackgroundDefault(v string) {
	o.OryBackgroundDefault = &v
}

// GetOryBorderDefault returns the OryBorderDefault field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetOryBorderDefault() string {
	if o == nil || IsNil(o.OryBorderDefault) {
		var ret string
		return ret
	}
	return *o.OryBorderDefault
}

// GetOryBorderDefaultOk returns a tuple with the OryBorderDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetOryBorderDefaultOk() (*string, bool) {
	if o == nil || IsNil(o.OryBorderDefault) {
		return nil, false
	}
	return o.OryBorderDefault, true
}

// HasOryBorderDefault returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasOryBorderDefault() bool {
	if o != nil && !IsNil(o.OryBorderDefault) {
		return true
	}

	return false
}

// SetOryBorderDefault gets a reference to the given string and assigns it to the OryBorderDefault field.
func (o *AccountExperienceColors) SetOryBorderDefault(v string) {
	o.OryBorderDefault = &v
}

// GetOryForegroundDefault returns the OryForegroundDefault field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetOryForegroundDefault() string {
	if o == nil || IsNil(o.OryForegroundDefault) {
		var ret string
		return ret
	}
	return *o.OryForegroundDefault
}

// GetOryForegroundDefaultOk returns a tuple with the OryForegroundDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetOryForegroundDefaultOk() (*string, bool) {
	if o == nil || IsNil(o.OryForegroundDefault) {
		return nil, false
	}
	return o.OryForegroundDefault, true
}

// HasOryForegroundDefault returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasOryForegroundDefault() bool {
	if o != nil && !IsNil(o.OryForegroundDefault) {
		return true
	}

	return false
}

// SetOryForegroundDefault gets a reference to the given string and assigns it to the OryForegroundDefault field.
func (o *AccountExperienceColors) SetOryForegroundDefault(v string) {
	o.OryForegroundDefault = &v
}

// GetRadioBackgroundChecked returns the RadioBackgroundChecked field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetRadioBackgroundChecked() string {
	if o == nil || IsNil(o.RadioBackgroundChecked) {
		var ret string
		return ret
	}
	return *o.RadioBackgroundChecked
}

// GetRadioBackgroundCheckedOk returns a tuple with the RadioBackgroundChecked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetRadioBackgroundCheckedOk() (*string, bool) {
	if o == nil || IsNil(o.RadioBackgroundChecked) {
		return nil, false
	}
	return o.RadioBackgroundChecked, true
}

// HasRadioBackgroundChecked returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasRadioBackgroundChecked() bool {
	if o != nil && !IsNil(o.RadioBackgroundChecked) {
		return true
	}

	return false
}

// SetRadioBackgroundChecked gets a reference to the given string and assigns it to the RadioBackgroundChecked field.
func (o *AccountExperienceColors) SetRadioBackgroundChecked(v string) {
	o.RadioBackgroundChecked = &v
}

// GetRadioBackgroundDefault returns the RadioBackgroundDefault field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetRadioBackgroundDefault() string {
	if o == nil || IsNil(o.RadioBackgroundDefault) {
		var ret string
		return ret
	}
	return *o.RadioBackgroundDefault
}

// GetRadioBackgroundDefaultOk returns a tuple with the RadioBackgroundDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetRadioBackgroundDefaultOk() (*string, bool) {
	if o == nil || IsNil(o.RadioBackgroundDefault) {
		return nil, false
	}
	return o.RadioBackgroundDefault, true
}

// HasRadioBackgroundDefault returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasRadioBackgroundDefault() bool {
	if o != nil && !IsNil(o.RadioBackgroundDefault) {
		return true
	}

	return false
}

// SetRadioBackgroundDefault gets a reference to the given string and assigns it to the RadioBackgroundDefault field.
func (o *AccountExperienceColors) SetRadioBackgroundDefault(v string) {
	o.RadioBackgroundDefault = &v
}

// GetRadioBorderChecked returns the RadioBorderChecked field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetRadioBorderChecked() string {
	if o == nil || IsNil(o.RadioBorderChecked) {
		var ret string
		return ret
	}
	return *o.RadioBorderChecked
}

// GetRadioBorderCheckedOk returns a tuple with the RadioBorderChecked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetRadioBorderCheckedOk() (*string, bool) {
	if o == nil || IsNil(o.RadioBorderChecked) {
		return nil, false
	}
	return o.RadioBorderChecked, true
}

// HasRadioBorderChecked returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasRadioBorderChecked() bool {
	if o != nil && !IsNil(o.RadioBorderChecked) {
		return true
	}

	return false
}

// SetRadioBorderChecked gets a reference to the given string and assigns it to the RadioBorderChecked field.
func (o *AccountExperienceColors) SetRadioBorderChecked(v string) {
	o.RadioBorderChecked = &v
}

// GetRadioBorderDefault returns the RadioBorderDefault field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetRadioBorderDefault() string {
	if o == nil || IsNil(o.RadioBorderDefault) {
		var ret string
		return ret
	}
	return *o.RadioBorderDefault
}

// GetRadioBorderDefaultOk returns a tuple with the RadioBorderDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetRadioBorderDefaultOk() (*string, bool) {
	if o == nil || IsNil(o.RadioBorderDefault) {
		return nil, false
	}
	return o.RadioBorderDefault, true
}

// HasRadioBorderDefault returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasRadioBorderDefault() bool {
	if o != nil && !IsNil(o.RadioBorderDefault) {
		return true
	}

	return false
}

// SetRadioBorderDefault gets a reference to the given string and assigns it to the RadioBorderDefault field.
func (o *AccountExperienceColors) SetRadioBorderDefault(v string) {
	o.RadioBorderDefault = &v
}

// GetRadioForegroundChecked returns the RadioForegroundChecked field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetRadioForegroundChecked() string {
	if o == nil || IsNil(o.RadioForegroundChecked) {
		var ret string
		return ret
	}
	return *o.RadioForegroundChecked
}

// GetRadioForegroundCheckedOk returns a tuple with the RadioForegroundChecked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetRadioForegroundCheckedOk() (*string, bool) {
	if o == nil || IsNil(o.RadioForegroundChecked) {
		return nil, false
	}
	return o.RadioForegroundChecked, true
}

// HasRadioForegroundChecked returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasRadioForegroundChecked() bool {
	if o != nil && !IsNil(o.RadioForegroundChecked) {
		return true
	}

	return false
}

// SetRadioForegroundChecked gets a reference to the given string and assigns it to the RadioForegroundChecked field.
func (o *AccountExperienceColors) SetRadioForegroundChecked(v string) {
	o.RadioForegroundChecked = &v
}

// GetRadioForegroundDefault returns the RadioForegroundDefault field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetRadioForegroundDefault() string {
	if o == nil || IsNil(o.RadioForegroundDefault) {
		var ret string
		return ret
	}
	return *o.RadioForegroundDefault
}

// GetRadioForegroundDefaultOk returns a tuple with the RadioForegroundDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetRadioForegroundDefaultOk() (*string, bool) {
	if o == nil || IsNil(o.RadioForegroundDefault) {
		return nil, false
	}
	return o.RadioForegroundDefault, true
}

// HasRadioForegroundDefault returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasRadioForegroundDefault() bool {
	if o != nil && !IsNil(o.RadioForegroundDefault) {
		return true
	}

	return false
}

// SetRadioForegroundDefault gets a reference to the given string and assigns it to the RadioForegroundDefault field.
func (o *AccountExperienceColors) SetRadioForegroundDefault(v string) {
	o.RadioForegroundDefault = &v
}

// GetToggleBackgroundChecked returns the ToggleBackgroundChecked field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetToggleBackgroundChecked() string {
	if o == nil || IsNil(o.ToggleBackgroundChecked) {
		var ret string
		return ret
	}
	return *o.ToggleBackgroundChecked
}

// GetToggleBackgroundCheckedOk returns a tuple with the ToggleBackgroundChecked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetToggleBackgroundCheckedOk() (*string, bool) {
	if o == nil || IsNil(o.ToggleBackgroundChecked) {
		return nil, false
	}
	return o.ToggleBackgroundChecked, true
}

// HasToggleBackgroundChecked returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasToggleBackgroundChecked() bool {
	if o != nil && !IsNil(o.ToggleBackgroundChecked) {
		return true
	}

	return false
}

// SetToggleBackgroundChecked gets a reference to the given string and assigns it to the ToggleBackgroundChecked field.
func (o *AccountExperienceColors) SetToggleBackgroundChecked(v string) {
	o.ToggleBackgroundChecked = &v
}

// GetToggleBackgroundDefault returns the ToggleBackgroundDefault field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetToggleBackgroundDefault() string {
	if o == nil || IsNil(o.ToggleBackgroundDefault) {
		var ret string
		return ret
	}
	return *o.ToggleBackgroundDefault
}

// GetToggleBackgroundDefaultOk returns a tuple with the ToggleBackgroundDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetToggleBackgroundDefaultOk() (*string, bool) {
	if o == nil || IsNil(o.ToggleBackgroundDefault) {
		return nil, false
	}
	return o.ToggleBackgroundDefault, true
}

// HasToggleBackgroundDefault returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasToggleBackgroundDefault() bool {
	if o != nil && !IsNil(o.ToggleBackgroundDefault) {
		return true
	}

	return false
}

// SetToggleBackgroundDefault gets a reference to the given string and assigns it to the ToggleBackgroundDefault field.
func (o *AccountExperienceColors) SetToggleBackgroundDefault(v string) {
	o.ToggleBackgroundDefault = &v
}

// GetToggleBorderChecked returns the ToggleBorderChecked field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetToggleBorderChecked() string {
	if o == nil || IsNil(o.ToggleBorderChecked) {
		var ret string
		return ret
	}
	return *o.ToggleBorderChecked
}

// GetToggleBorderCheckedOk returns a tuple with the ToggleBorderChecked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetToggleBorderCheckedOk() (*string, bool) {
	if o == nil || IsNil(o.ToggleBorderChecked) {
		return nil, false
	}
	return o.ToggleBorderChecked, true
}

// HasToggleBorderChecked returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasToggleBorderChecked() bool {
	if o != nil && !IsNil(o.ToggleBorderChecked) {
		return true
	}

	return false
}

// SetToggleBorderChecked gets a reference to the given string and assigns it to the ToggleBorderChecked field.
func (o *AccountExperienceColors) SetToggleBorderChecked(v string) {
	o.ToggleBorderChecked = &v
}

// GetToggleBorderDefault returns the ToggleBorderDefault field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetToggleBorderDefault() string {
	if o == nil || IsNil(o.ToggleBorderDefault) {
		var ret string
		return ret
	}
	return *o.ToggleBorderDefault
}

// GetToggleBorderDefaultOk returns a tuple with the ToggleBorderDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetToggleBorderDefaultOk() (*string, bool) {
	if o == nil || IsNil(o.ToggleBorderDefault) {
		return nil, false
	}
	return o.ToggleBorderDefault, true
}

// HasToggleBorderDefault returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasToggleBorderDefault() bool {
	if o != nil && !IsNil(o.ToggleBorderDefault) {
		return true
	}

	return false
}

// SetToggleBorderDefault gets a reference to the given string and assigns it to the ToggleBorderDefault field.
func (o *AccountExperienceColors) SetToggleBorderDefault(v string) {
	o.ToggleBorderDefault = &v
}

// GetToggleForegroundChecked returns the ToggleForegroundChecked field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetToggleForegroundChecked() string {
	if o == nil || IsNil(o.ToggleForegroundChecked) {
		var ret string
		return ret
	}
	return *o.ToggleForegroundChecked
}

// GetToggleForegroundCheckedOk returns a tuple with the ToggleForegroundChecked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetToggleForegroundCheckedOk() (*string, bool) {
	if o == nil || IsNil(o.ToggleForegroundChecked) {
		return nil, false
	}
	return o.ToggleForegroundChecked, true
}

// HasToggleForegroundChecked returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasToggleForegroundChecked() bool {
	if o != nil && !IsNil(o.ToggleForegroundChecked) {
		return true
	}

	return false
}

// SetToggleForegroundChecked gets a reference to the given string and assigns it to the ToggleForegroundChecked field.
func (o *AccountExperienceColors) SetToggleForegroundChecked(v string) {
	o.ToggleForegroundChecked = &v
}

// GetToggleForegroundDefault returns the ToggleForegroundDefault field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetToggleForegroundDefault() string {
	if o == nil || IsNil(o.ToggleForegroundDefault) {
		var ret string
		return ret
	}
	return *o.ToggleForegroundDefault
}

// GetToggleForegroundDefaultOk returns a tuple with the ToggleForegroundDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetToggleForegroundDefaultOk() (*string, bool) {
	if o == nil || IsNil(o.ToggleForegroundDefault) {
		return nil, false
	}
	return o.ToggleForegroundDefault, true
}

// HasToggleForegroundDefault returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasToggleForegroundDefault() bool {
	if o != nil && !IsNil(o.ToggleForegroundDefault) {
		return true
	}

	return false
}

// SetToggleForegroundDefault gets a reference to the given string and assigns it to the ToggleForegroundDefault field.
func (o *AccountExperienceColors) SetToggleForegroundDefault(v string) {
	o.ToggleForegroundDefault = &v
}

// GetUi100 returns the Ui100 field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetUi100() string {
	if o == nil || IsNil(o.Ui100) {
		var ret string
		return ret
	}
	return *o.Ui100
}

// GetUi100Ok returns a tuple with the Ui100 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetUi100Ok() (*string, bool) {
	if o == nil || IsNil(o.Ui100) {
		return nil, false
	}
	return o.Ui100, true
}

// HasUi100 returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasUi100() bool {
	if o != nil && !IsNil(o.Ui100) {
		return true
	}

	return false
}

// SetUi100 gets a reference to the given string and assigns it to the Ui100 field.
func (o *AccountExperienceColors) SetUi100(v string) {
	o.Ui100 = &v
}

// GetUi200 returns the Ui200 field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetUi200() string {
	if o == nil || IsNil(o.Ui200) {
		var ret string
		return ret
	}
	return *o.Ui200
}

// GetUi200Ok returns a tuple with the Ui200 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetUi200Ok() (*string, bool) {
	if o == nil || IsNil(o.Ui200) {
		return nil, false
	}
	return o.Ui200, true
}

// HasUi200 returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasUi200() bool {
	if o != nil && !IsNil(o.Ui200) {
		return true
	}

	return false
}

// SetUi200 gets a reference to the given string and assigns it to the Ui200 field.
func (o *AccountExperienceColors) SetUi200(v string) {
	o.Ui200 = &v
}

// GetUi300 returns the Ui300 field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetUi300() string {
	if o == nil || IsNil(o.Ui300) {
		var ret string
		return ret
	}
	return *o.Ui300
}

// GetUi300Ok returns a tuple with the Ui300 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetUi300Ok() (*string, bool) {
	if o == nil || IsNil(o.Ui300) {
		return nil, false
	}
	return o.Ui300, true
}

// HasUi300 returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasUi300() bool {
	if o != nil && !IsNil(o.Ui300) {
		return true
	}

	return false
}

// SetUi300 gets a reference to the given string and assigns it to the Ui300 field.
func (o *AccountExperienceColors) SetUi300(v string) {
	o.Ui300 = &v
}

// GetUi400 returns the Ui400 field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetUi400() string {
	if o == nil || IsNil(o.Ui400) {
		var ret string
		return ret
	}
	return *o.Ui400
}

// GetUi400Ok returns a tuple with the Ui400 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetUi400Ok() (*string, bool) {
	if o == nil || IsNil(o.Ui400) {
		return nil, false
	}
	return o.Ui400, true
}

// HasUi400 returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasUi400() bool {
	if o != nil && !IsNil(o.Ui400) {
		return true
	}

	return false
}

// SetUi400 gets a reference to the given string and assigns it to the Ui400 field.
func (o *AccountExperienceColors) SetUi400(v string) {
	o.Ui400 = &v
}

// GetUi50 returns the Ui50 field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetUi50() string {
	if o == nil || IsNil(o.Ui50) {
		var ret string
		return ret
	}
	return *o.Ui50
}

// GetUi50Ok returns a tuple with the Ui50 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetUi50Ok() (*string, bool) {
	if o == nil || IsNil(o.Ui50) {
		return nil, false
	}
	return o.Ui50, true
}

// HasUi50 returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasUi50() bool {
	if o != nil && !IsNil(o.Ui50) {
		return true
	}

	return false
}

// SetUi50 gets a reference to the given string and assigns it to the Ui50 field.
func (o *AccountExperienceColors) SetUi50(v string) {
	o.Ui50 = &v
}

// GetUi500 returns the Ui500 field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetUi500() string {
	if o == nil || IsNil(o.Ui500) {
		var ret string
		return ret
	}
	return *o.Ui500
}

// GetUi500Ok returns a tuple with the Ui500 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetUi500Ok() (*string, bool) {
	if o == nil || IsNil(o.Ui500) {
		return nil, false
	}
	return o.Ui500, true
}

// HasUi500 returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasUi500() bool {
	if o != nil && !IsNil(o.Ui500) {
		return true
	}

	return false
}

// SetUi500 gets a reference to the given string and assigns it to the Ui500 field.
func (o *AccountExperienceColors) SetUi500(v string) {
	o.Ui500 = &v
}

// GetUi600 returns the Ui600 field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetUi600() string {
	if o == nil || IsNil(o.Ui600) {
		var ret string
		return ret
	}
	return *o.Ui600
}

// GetUi600Ok returns a tuple with the Ui600 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetUi600Ok() (*string, bool) {
	if o == nil || IsNil(o.Ui600) {
		return nil, false
	}
	return o.Ui600, true
}

// HasUi600 returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasUi600() bool {
	if o != nil && !IsNil(o.Ui600) {
		return true
	}

	return false
}

// SetUi600 gets a reference to the given string and assigns it to the Ui600 field.
func (o *AccountExperienceColors) SetUi600(v string) {
	o.Ui600 = &v
}

// GetUi700 returns the Ui700 field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetUi700() string {
	if o == nil || IsNil(o.Ui700) {
		var ret string
		return ret
	}
	return *o.Ui700
}

// GetUi700Ok returns a tuple with the Ui700 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetUi700Ok() (*string, bool) {
	if o == nil || IsNil(o.Ui700) {
		return nil, false
	}
	return o.Ui700, true
}

// HasUi700 returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasUi700() bool {
	if o != nil && !IsNil(o.Ui700) {
		return true
	}

	return false
}

// SetUi700 gets a reference to the given string and assigns it to the Ui700 field.
func (o *AccountExperienceColors) SetUi700(v string) {
	o.Ui700 = &v
}

// GetUi800 returns the Ui800 field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetUi800() string {
	if o == nil || IsNil(o.Ui800) {
		var ret string
		return ret
	}
	return *o.Ui800
}

// GetUi800Ok returns a tuple with the Ui800 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetUi800Ok() (*string, bool) {
	if o == nil || IsNil(o.Ui800) {
		return nil, false
	}
	return o.Ui800, true
}

// HasUi800 returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasUi800() bool {
	if o != nil && !IsNil(o.Ui800) {
		return true
	}

	return false
}

// SetUi800 gets a reference to the given string and assigns it to the Ui800 field.
func (o *AccountExperienceColors) SetUi800(v string) {
	o.Ui800 = &v
}

// GetUi900 returns the Ui900 field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetUi900() string {
	if o == nil || IsNil(o.Ui900) {
		var ret string
		return ret
	}
	return *o.Ui900
}

// GetUi900Ok returns a tuple with the Ui900 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetUi900Ok() (*string, bool) {
	if o == nil || IsNil(o.Ui900) {
		return nil, false
	}
	return o.Ui900, true
}

// HasUi900 returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasUi900() bool {
	if o != nil && !IsNil(o.Ui900) {
		return true
	}

	return false
}

// SetUi900 gets a reference to the given string and assigns it to the Ui900 field.
func (o *AccountExperienceColors) SetUi900(v string) {
	o.Ui900 = &v
}

// GetUi950 returns the Ui950 field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetUi950() string {
	if o == nil || IsNil(o.Ui950) {
		var ret string
		return ret
	}
	return *o.Ui950
}

// GetUi950Ok returns a tuple with the Ui950 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetUi950Ok() (*string, bool) {
	if o == nil || IsNil(o.Ui950) {
		return nil, false
	}
	return o.Ui950, true
}

// HasUi950 returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasUi950() bool {
	if o != nil && !IsNil(o.Ui950) {
		return true
	}

	return false
}

// SetUi950 gets a reference to the given string and assigns it to the Ui950 field.
func (o *AccountExperienceColors) SetUi950(v string) {
	o.Ui950 = &v
}

// GetUiBlack returns the UiBlack field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetUiBlack() string {
	if o == nil || IsNil(o.UiBlack) {
		var ret string
		return ret
	}
	return *o.UiBlack
}

// GetUiBlackOk returns a tuple with the UiBlack field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetUiBlackOk() (*string, bool) {
	if o == nil || IsNil(o.UiBlack) {
		return nil, false
	}
	return o.UiBlack, true
}

// HasUiBlack returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasUiBlack() bool {
	if o != nil && !IsNil(o.UiBlack) {
		return true
	}

	return false
}

// SetUiBlack gets a reference to the given string and assigns it to the UiBlack field.
func (o *AccountExperienceColors) SetUiBlack(v string) {
	o.UiBlack = &v
}

// GetUiDanger returns the UiDanger field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetUiDanger() string {
	if o == nil || IsNil(o.UiDanger) {
		var ret string
		return ret
	}
	return *o.UiDanger
}

// GetUiDangerOk returns a tuple with the UiDanger field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetUiDangerOk() (*string, bool) {
	if o == nil || IsNil(o.UiDanger) {
		return nil, false
	}
	return o.UiDanger, true
}

// HasUiDanger returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasUiDanger() bool {
	if o != nil && !IsNil(o.UiDanger) {
		return true
	}

	return false
}

// SetUiDanger gets a reference to the given string and assigns it to the UiDanger field.
func (o *AccountExperienceColors) SetUiDanger(v string) {
	o.UiDanger = &v
}

// GetUiSuccess returns the UiSuccess field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetUiSuccess() string {
	if o == nil || IsNil(o.UiSuccess) {
		var ret string
		return ret
	}
	return *o.UiSuccess
}

// GetUiSuccessOk returns a tuple with the UiSuccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetUiSuccessOk() (*string, bool) {
	if o == nil || IsNil(o.UiSuccess) {
		return nil, false
	}
	return o.UiSuccess, true
}

// HasUiSuccess returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasUiSuccess() bool {
	if o != nil && !IsNil(o.UiSuccess) {
		return true
	}

	return false
}

// SetUiSuccess gets a reference to the given string and assigns it to the UiSuccess field.
func (o *AccountExperienceColors) SetUiSuccess(v string) {
	o.UiSuccess = &v
}

// GetUiTransparent returns the UiTransparent field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetUiTransparent() string {
	if o == nil || IsNil(o.UiTransparent) {
		var ret string
		return ret
	}
	return *o.UiTransparent
}

// GetUiTransparentOk returns a tuple with the UiTransparent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetUiTransparentOk() (*string, bool) {
	if o == nil || IsNil(o.UiTransparent) {
		return nil, false
	}
	return o.UiTransparent, true
}

// HasUiTransparent returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasUiTransparent() bool {
	if o != nil && !IsNil(o.UiTransparent) {
		return true
	}

	return false
}

// SetUiTransparent gets a reference to the given string and assigns it to the UiTransparent field.
func (o *AccountExperienceColors) SetUiTransparent(v string) {
	o.UiTransparent = &v
}

// GetUiWarning returns the UiWarning field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetUiWarning() string {
	if o == nil || IsNil(o.UiWarning) {
		var ret string
		return ret
	}
	return *o.UiWarning
}

// GetUiWarningOk returns a tuple with the UiWarning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetUiWarningOk() (*string, bool) {
	if o == nil || IsNil(o.UiWarning) {
		return nil, false
	}
	return o.UiWarning, true
}

// HasUiWarning returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasUiWarning() bool {
	if o != nil && !IsNil(o.UiWarning) {
		return true
	}

	return false
}

// SetUiWarning gets a reference to the given string and assigns it to the UiWarning field.
func (o *AccountExperienceColors) SetUiWarning(v string) {
	o.UiWarning = &v
}

// GetUiWhite returns the UiWhite field value if set, zero value otherwise.
func (o *AccountExperienceColors) GetUiWhite() string {
	if o == nil || IsNil(o.UiWhite) {
		var ret string
		return ret
	}
	return *o.UiWhite
}

// GetUiWhiteOk returns a tuple with the UiWhite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExperienceColors) GetUiWhiteOk() (*string, bool) {
	if o == nil || IsNil(o.UiWhite) {
		return nil, false
	}
	return o.UiWhite, true
}

// HasUiWhite returns a boolean if a field has been set.
func (o *AccountExperienceColors) HasUiWhite() bool {
	if o != nil && !IsNil(o.UiWhite) {
		return true
	}

	return false
}

// SetUiWhite gets a reference to the given string and assigns it to the UiWhite field.
func (o *AccountExperienceColors) SetUiWhite(v string) {
	o.UiWhite = &v
}

func (o AccountExperienceColors) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountExperienceColors) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AxBackgroundDefault) {
		toSerialize["ax-background-default"] = o.AxBackgroundDefault
	}
	if !IsNil(o.Brand100) {
		toSerialize["brand-100"] = o.Brand100
	}
	if !IsNil(o.Brand200) {
		toSerialize["brand-200"] = o.Brand200
	}
	if !IsNil(o.Brand300) {
		toSerialize["brand-300"] = o.Brand300
	}
	if !IsNil(o.Brand400) {
		toSerialize["brand-400"] = o.Brand400
	}
	if !IsNil(o.Brand50) {
		toSerialize["brand-50"] = o.Brand50
	}
	if !IsNil(o.Brand500) {
		toSerialize["brand-500"] = o.Brand500
	}
	if !IsNil(o.Brand600) {
		toSerialize["brand-600"] = o.Brand600
	}
	if !IsNil(o.Brand700) {
		toSerialize["brand-700"] = o.Brand700
	}
	if !IsNil(o.Brand800) {
		toSerialize["brand-800"] = o.Brand800
	}
	if !IsNil(o.Brand900) {
		toSerialize["brand-900"] = o.Brand900
	}
	if !IsNil(o.Brand950) {
		toSerialize["brand-950"] = o.Brand950
	}
	if !IsNil(o.ButtonIdentifierBackgroundDefault) {
		toSerialize["button-identifier-background-default"] = o.ButtonIdentifierBackgroundDefault
	}
	if !IsNil(o.ButtonIdentifierBackgroundHover) {
		toSerialize["button-identifier-background-hover"] = o.ButtonIdentifierBackgroundHover
	}
	if !IsNil(o.ButtonIdentifierBorderBorderDefault) {
		toSerialize["button-identifier-border-border-default"] = o.ButtonIdentifierBorderBorderDefault
	}
	if !IsNil(o.ButtonIdentifierBorderBorderHover) {
		toSerialize["button-identifier-border-border-hover"] = o.ButtonIdentifierBorderBorderHover
	}
	if !IsNil(o.ButtonIdentifierForegroundDefault) {
		toSerialize["button-identifier-foreground-default"] = o.ButtonIdentifierForegroundDefault
	}
	if !IsNil(o.ButtonIdentifierForegroundHover) {
		toSerialize["button-identifier-foreground-hover"] = o.ButtonIdentifierForegroundHover
	}
	if !IsNil(o.ButtonLinkBrandBrand) {
		toSerialize["button-link-brand-brand"] = o.ButtonLinkBrandBrand
	}
	if !IsNil(o.ButtonLinkBrandBrandHover) {
		toSerialize["button-link-brand-brand-hover"] = o.ButtonLinkBrandBrandHover
	}
	if !IsNil(o.ButtonLinkDefaultPrimary) {
		toSerialize["button-link-default-primary"] = o.ButtonLinkDefaultPrimary
	}
	if !IsNil(o.ButtonLinkDefaultPrimaryHover) {
		toSerialize["button-link-default-primary-hover"] = o.ButtonLinkDefaultPrimaryHover
	}
	if !IsNil(o.ButtonLinkDefaultSecondary) {
		toSerialize["button-link-default-secondary"] = o.ButtonLinkDefaultSecondary
	}
	if !IsNil(o.ButtonLinkDefaultSecondaryHover) {
		toSerialize["button-link-default-secondary-hover"] = o.ButtonLinkDefaultSecondaryHover
	}
	if !IsNil(o.ButtonLinkDisabledDisabled) {
		toSerialize["button-link-disabled-disabled"] = o.ButtonLinkDisabledDisabled
	}
	if !IsNil(o.ButtonPrimaryBackgroundDefault) {
		toSerialize["button-primary-background-default"] = o.ButtonPrimaryBackgroundDefault
	}
	if !IsNil(o.ButtonPrimaryBackgroundDisabled) {
		toSerialize["button-primary-background-disabled"] = o.ButtonPrimaryBackgroundDisabled
	}
	if !IsNil(o.ButtonPrimaryBackgroundHover) {
		toSerialize["button-primary-background-hover"] = o.ButtonPrimaryBackgroundHover
	}
	if !IsNil(o.ButtonPrimaryBorderDefault) {
		toSerialize["button-primary-border-default"] = o.ButtonPrimaryBorderDefault
	}
	if !IsNil(o.ButtonPrimaryBorderDisabled) {
		toSerialize["button-primary-border-disabled"] = o.ButtonPrimaryBorderDisabled
	}
	if !IsNil(o.ButtonPrimaryBorderHover) {
		toSerialize["button-primary-border-hover"] = o.ButtonPrimaryBorderHover
	}
	if !IsNil(o.ButtonPrimaryForegroundDefault) {
		toSerialize["button-primary-foreground-default"] = o.ButtonPrimaryForegroundDefault
	}
	if !IsNil(o.ButtonPrimaryForegroundDisabled) {
		toSerialize["button-primary-foreground-disabled"] = o.ButtonPrimaryForegroundDisabled
	}
	if !IsNil(o.ButtonPrimaryForegroundHover) {
		toSerialize["button-primary-foreground-hover"] = o.ButtonPrimaryForegroundHover
	}
	if !IsNil(o.ButtonSecondaryBackgroundDefault) {
		toSerialize["button-secondary-background-default"] = o.ButtonSecondaryBackgroundDefault
	}
	if !IsNil(o.ButtonSecondaryBackgroundDisabled) {
		toSerialize["button-secondary-background-disabled"] = o.ButtonSecondaryBackgroundDisabled
	}
	if !IsNil(o.ButtonSecondaryBackgroundHover) {
		toSerialize["button-secondary-background-hover"] = o.ButtonSecondaryBackgroundHover
	}
	if !IsNil(o.ButtonSecondaryBorderDefault) {
		toSerialize["button-secondary-border-default"] = o.ButtonSecondaryBorderDefault
	}
	if !IsNil(o.ButtonSecondaryBorderDisabled) {
		toSerialize["button-secondary-border-disabled"] = o.ButtonSecondaryBorderDisabled
	}
	if !IsNil(o.ButtonSecondaryBorderHover) {
		toSerialize["button-secondary-border-hover"] = o.ButtonSecondaryBorderHover
	}
	if !IsNil(o.ButtonSecondaryForegroundDefault) {
		toSerialize["button-secondary-foreground-default"] = o.ButtonSecondaryForegroundDefault
	}
	if !IsNil(o.ButtonSecondaryForegroundDisabled) {
		toSerialize["button-secondary-foreground-disabled"] = o.ButtonSecondaryForegroundDisabled
	}
	if !IsNil(o.ButtonSecondaryForegroundHover) {
		toSerialize["button-secondary-foreground-hover"] = o.ButtonSecondaryForegroundHover
	}
	if !IsNil(o.ButtonSocialBackgroundDefault) {
		toSerialize["button-social-background-default"] = o.ButtonSocialBackgroundDefault
	}
	if !IsNil(o.ButtonSocialBackgroundDisabled) {
		toSerialize["button-social-background-disabled"] = o.ButtonSocialBackgroundDisabled
	}
	if !IsNil(o.ButtonSocialBackgroundGenericProvider) {
		toSerialize["button-social-background-generic-provider"] = o.ButtonSocialBackgroundGenericProvider
	}
	if !IsNil(o.ButtonSocialBackgroundHover) {
		toSerialize["button-social-background-hover"] = o.ButtonSocialBackgroundHover
	}
	if !IsNil(o.ButtonSocialBorderDefault) {
		toSerialize["button-social-border-default"] = o.ButtonSocialBorderDefault
	}
	if !IsNil(o.ButtonSocialBorderDisabled) {
		toSerialize["button-social-border-disabled"] = o.ButtonSocialBorderDisabled
	}
	if !IsNil(o.ButtonSocialBorderGenericProvider) {
		toSerialize["button-social-border-generic-provider"] = o.ButtonSocialBorderGenericProvider
	}
	if !IsNil(o.ButtonSocialBorderHover) {
		toSerialize["button-social-border-hover"] = o.ButtonSocialBorderHover
	}
	if !IsNil(o.ButtonSocialForegroundDefault) {
		toSerialize["button-social-foreground-default"] = o.ButtonSocialForegroundDefault
	}
	if !IsNil(o.ButtonSocialForegroundDisabled) {
		toSerialize["button-social-foreground-disabled"] = o.ButtonSocialForegroundDisabled
	}
	if !IsNil(o.ButtonSocialForegroundGenericProvider) {
		toSerialize["button-social-foreground-generic-provider"] = o.ButtonSocialForegroundGenericProvider
	}
	if !IsNil(o.ButtonSocialForegroundHover) {
		toSerialize["button-social-foreground-hover"] = o.ButtonSocialForegroundHover
	}
	if !IsNil(o.CheckboxBackgroundChecked) {
		toSerialize["checkbox-background-checked"] = o.CheckboxBackgroundChecked
	}
	if !IsNil(o.CheckboxBackgroundDefault) {
		toSerialize["checkbox-background-default"] = o.CheckboxBackgroundDefault
	}
	if !IsNil(o.CheckboxBorderCheckboxBorderChecked) {
		toSerialize["checkbox-border-checkbox-border-checked"] = o.CheckboxBorderCheckboxBorderChecked
	}
	if !IsNil(o.CheckboxBorderCheckboxBorderDefault) {
		toSerialize["checkbox-border-checkbox-border-default"] = o.CheckboxBorderCheckboxBorderDefault
	}
	if !IsNil(o.CheckboxForegroundChecked) {
		toSerialize["checkbox-foreground-checked"] = o.CheckboxForegroundChecked
	}
	if !IsNil(o.CheckboxForegroundDefault) {
		toSerialize["checkbox-foreground-default"] = o.CheckboxForegroundDefault
	}
	if !IsNil(o.FormBackgroundDefault) {
		toSerialize["form-background-default"] = o.FormBackgroundDefault
	}
	if !IsNil(o.FormBorderDefault) {
		toSerialize["form-border-default"] = o.FormBorderDefault
	}
	if !IsNil(o.InputBackgroundDefault) {
		toSerialize["input-background-default"] = o.InputBackgroundDefault
	}
	if !IsNil(o.InputBackgroundDisabled) {
		toSerialize["input-background-disabled"] = o.InputBackgroundDisabled
	}
	if !IsNil(o.InputBackgroundHover) {
		toSerialize["input-background-hover"] = o.InputBackgroundHover
	}
	if !IsNil(o.InputBorderDefault) {
		toSerialize["input-border-default"] = o.InputBorderDefault
	}
	if !IsNil(o.InputBorderDisabled) {
		toSerialize["input-border-disabled"] = o.InputBorderDisabled
	}
	if !IsNil(o.InputBorderFocus) {
		toSerialize["input-border-focus"] = o.InputBorderFocus
	}
	if !IsNil(o.InputBorderHover) {
		toSerialize["input-border-hover"] = o.InputBorderHover
	}
	if !IsNil(o.InputForegroundDisabled) {
		toSerialize["input-foreground-disabled"] = o.InputForegroundDisabled
	}
	if !IsNil(o.InputForegroundPrimary) {
		toSerialize["input-foreground-primary"] = o.InputForegroundPrimary
	}
	if !IsNil(o.InputForegroundSecondary) {
		toSerialize["input-foreground-secondary"] = o.InputForegroundSecondary
	}
	if !IsNil(o.InputForegroundTertiary) {
		toSerialize["input-foreground-tertiary"] = o.InputForegroundTertiary
	}
	if !IsNil(o.InterfaceBackgroundBrandPrimary) {
		toSerialize["interface-background-brand-primary"] = o.InterfaceBackgroundBrandPrimary
	}
	if !IsNil(o.InterfaceBackgroundBrandPrimaryHover) {
		toSerialize["interface-background-brand-primary-hover"] = o.InterfaceBackgroundBrandPrimaryHover
	}
	if !IsNil(o.InterfaceBackgroundBrandSecondary) {
		toSerialize["interface-background-brand-secondary"] = o.InterfaceBackgroundBrandSecondary
	}
	if !IsNil(o.InterfaceBackgroundBrandSecondaryHover) {
		toSerialize["interface-background-brand-secondary-hover"] = o.InterfaceBackgroundBrandSecondaryHover
	}
	if !IsNil(o.InterfaceBackgroundDefaultInverted) {
		toSerialize["interface-background-default-inverted"] = o.InterfaceBackgroundDefaultInverted
	}
	if !IsNil(o.InterfaceBackgroundDefaultInvertedHover) {
		toSerialize["interface-background-default-inverted-hover"] = o.InterfaceBackgroundDefaultInvertedHover
	}
	if !IsNil(o.InterfaceBackgroundDefaultNone) {
		toSerialize["interface-background-default-none"] = o.InterfaceBackgroundDefaultNone
	}
	if !IsNil(o.InterfaceBackgroundDefaultPrimary) {
		toSerialize["interface-background-default-primary"] = o.InterfaceBackgroundDefaultPrimary
	}
	if !IsNil(o.InterfaceBackgroundDefaultPrimaryHover) {
		toSerialize["interface-background-default-primary-hover"] = o.InterfaceBackgroundDefaultPrimaryHover
	}
	if !IsNil(o.InterfaceBackgroundDefaultSecondary) {
		toSerialize["interface-background-default-secondary"] = o.InterfaceBackgroundDefaultSecondary
	}
	if !IsNil(o.InterfaceBackgroundDefaultSecondaryHover) {
		toSerialize["interface-background-default-secondary-hover"] = o.InterfaceBackgroundDefaultSecondaryHover
	}
	if !IsNil(o.InterfaceBackgroundDefaultTertiary) {
		toSerialize["interface-background-default-tertiary"] = o.InterfaceBackgroundDefaultTertiary
	}
	if !IsNil(o.InterfaceBackgroundDefaultTertiaryHover) {
		toSerialize["interface-background-default-tertiary-hover"] = o.InterfaceBackgroundDefaultTertiaryHover
	}
	if !IsNil(o.InterfaceBackgroundDisabledDisabled) {
		toSerialize["interface-background-disabled-disabled"] = o.InterfaceBackgroundDisabledDisabled
	}
	if !IsNil(o.InterfaceBackgroundValidationDanger) {
		toSerialize["interface-background-validation-danger"] = o.InterfaceBackgroundValidationDanger
	}
	if !IsNil(o.InterfaceBackgroundValidationSuccess) {
		toSerialize["interface-background-validation-success"] = o.InterfaceBackgroundValidationSuccess
	}
	if !IsNil(o.InterfaceBackgroundValidationWarning) {
		toSerialize["interface-background-validation-warning"] = o.InterfaceBackgroundValidationWarning
	}
	if !IsNil(o.InterfaceBorderBrandBrand) {
		toSerialize["interface-border-brand-brand"] = o.InterfaceBorderBrandBrand
	}
	if !IsNil(o.InterfaceBorderDefaultInverted) {
		toSerialize["interface-border-default-inverted"] = o.InterfaceBorderDefaultInverted
	}
	if !IsNil(o.InterfaceBorderDefaultNone) {
		toSerialize["interface-border-default-none"] = o.InterfaceBorderDefaultNone
	}
	if !IsNil(o.InterfaceBorderDefaultPrimary) {
		toSerialize["interface-border-default-primary"] = o.InterfaceBorderDefaultPrimary
	}
	if !IsNil(o.InterfaceBorderDisabledDisabled) {
		toSerialize["interface-border-disabled-disabled"] = o.InterfaceBorderDisabledDisabled
	}
	if !IsNil(o.InterfaceBorderValidationDanger) {
		toSerialize["interface-border-validation-danger"] = o.InterfaceBorderValidationDanger
	}
	if !IsNil(o.InterfaceBorderValidationSuccess) {
		toSerialize["interface-border-validation-success"] = o.InterfaceBorderValidationSuccess
	}
	if !IsNil(o.InterfaceBorderValidationWarning) {
		toSerialize["interface-border-validation-warning"] = o.InterfaceBorderValidationWarning
	}
	if !IsNil(o.InterfaceForegroundBrandOnPrimary) {
		toSerialize["interface-foreground-brand-on-primary"] = o.InterfaceForegroundBrandOnPrimary
	}
	if !IsNil(o.InterfaceForegroundBrandOnSecondary) {
		toSerialize["interface-foreground-brand-on-secondary"] = o.InterfaceForegroundBrandOnSecondary
	}
	if !IsNil(o.InterfaceForegroundBrandPrimary) {
		toSerialize["interface-foreground-brand-primary"] = o.InterfaceForegroundBrandPrimary
	}
	if !IsNil(o.InterfaceForegroundBrandSecondary) {
		toSerialize["interface-foreground-brand-secondary"] = o.InterfaceForegroundBrandSecondary
	}
	if !IsNil(o.InterfaceForegroundDefaultInverted) {
		toSerialize["interface-foreground-default-inverted"] = o.InterfaceForegroundDefaultInverted
	}
	if !IsNil(o.InterfaceForegroundDefaultPrimary) {
		toSerialize["interface-foreground-default-primary"] = o.InterfaceForegroundDefaultPrimary
	}
	if !IsNil(o.InterfaceForegroundDefaultSecondary) {
		toSerialize["interface-foreground-default-secondary"] = o.InterfaceForegroundDefaultSecondary
	}
	if !IsNil(o.InterfaceForegroundDefaultTertiary) {
		toSerialize["interface-foreground-default-tertiary"] = o.InterfaceForegroundDefaultTertiary
	}
	if !IsNil(o.InterfaceForegroundDisabledDisabled) {
		toSerialize["interface-foreground-disabled-disabled"] = o.InterfaceForegroundDisabledDisabled
	}
	if !IsNil(o.InterfaceForegroundDisabledOnDisabled) {
		toSerialize["interface-foreground-disabled-on-disabled"] = o.InterfaceForegroundDisabledOnDisabled
	}
	if !IsNil(o.InterfaceForegroundValidationDanger) {
		toSerialize["interface-foreground-validation-danger"] = o.InterfaceForegroundValidationDanger
	}
	if !IsNil(o.InterfaceForegroundValidationSuccess) {
		toSerialize["interface-foreground-validation-success"] = o.InterfaceForegroundValidationSuccess
	}
	if !IsNil(o.InterfaceForegroundValidationWarning) {
		toSerialize["interface-foreground-validation-warning"] = o.InterfaceForegroundValidationWarning
	}
	if !IsNil(o.OryBackgroundDefault) {
		toSerialize["ory-background-default"] = o.OryBackgroundDefault
	}
	if !IsNil(o.OryBorderDefault) {
		toSerialize["ory-border-default"] = o.OryBorderDefault
	}
	if !IsNil(o.OryForegroundDefault) {
		toSerialize["ory-foreground-default"] = o.OryForegroundDefault
	}
	if !IsNil(o.RadioBackgroundChecked) {
		toSerialize["radio-background-checked"] = o.RadioBackgroundChecked
	}
	if !IsNil(o.RadioBackgroundDefault) {
		toSerialize["radio-background-default"] = o.RadioBackgroundDefault
	}
	if !IsNil(o.RadioBorderChecked) {
		toSerialize["radio-border-checked"] = o.RadioBorderChecked
	}
	if !IsNil(o.RadioBorderDefault) {
		toSerialize["radio-border-default"] = o.RadioBorderDefault
	}
	if !IsNil(o.RadioForegroundChecked) {
		toSerialize["radio-foreground-checked"] = o.RadioForegroundChecked
	}
	if !IsNil(o.RadioForegroundDefault) {
		toSerialize["radio-foreground-default"] = o.RadioForegroundDefault
	}
	if !IsNil(o.ToggleBackgroundChecked) {
		toSerialize["toggle-background-checked"] = o.ToggleBackgroundChecked
	}
	if !IsNil(o.ToggleBackgroundDefault) {
		toSerialize["toggle-background-default"] = o.ToggleBackgroundDefault
	}
	if !IsNil(o.ToggleBorderChecked) {
		toSerialize["toggle-border-checked"] = o.ToggleBorderChecked
	}
	if !IsNil(o.ToggleBorderDefault) {
		toSerialize["toggle-border-default"] = o.ToggleBorderDefault
	}
	if !IsNil(o.ToggleForegroundChecked) {
		toSerialize["toggle-foreground-checked"] = o.ToggleForegroundChecked
	}
	if !IsNil(o.ToggleForegroundDefault) {
		toSerialize["toggle-foreground-default"] = o.ToggleForegroundDefault
	}
	if !IsNil(o.Ui100) {
		toSerialize["ui-100"] = o.Ui100
	}
	if !IsNil(o.Ui200) {
		toSerialize["ui-200"] = o.Ui200
	}
	if !IsNil(o.Ui300) {
		toSerialize["ui-300"] = o.Ui300
	}
	if !IsNil(o.Ui400) {
		toSerialize["ui-400"] = o.Ui400
	}
	if !IsNil(o.Ui50) {
		toSerialize["ui-50"] = o.Ui50
	}
	if !IsNil(o.Ui500) {
		toSerialize["ui-500"] = o.Ui500
	}
	if !IsNil(o.Ui600) {
		toSerialize["ui-600"] = o.Ui600
	}
	if !IsNil(o.Ui700) {
		toSerialize["ui-700"] = o.Ui700
	}
	if !IsNil(o.Ui800) {
		toSerialize["ui-800"] = o.Ui800
	}
	if !IsNil(o.Ui900) {
		toSerialize["ui-900"] = o.Ui900
	}
	if !IsNil(o.Ui950) {
		toSerialize["ui-950"] = o.Ui950
	}
	if !IsNil(o.UiBlack) {
		toSerialize["ui-black"] = o.UiBlack
	}
	if !IsNil(o.UiDanger) {
		toSerialize["ui-danger"] = o.UiDanger
	}
	if !IsNil(o.UiSuccess) {
		toSerialize["ui-success"] = o.UiSuccess
	}
	if !IsNil(o.UiTransparent) {
		toSerialize["ui-transparent"] = o.UiTransparent
	}
	if !IsNil(o.UiWarning) {
		toSerialize["ui-warning"] = o.UiWarning
	}
	if !IsNil(o.UiWhite) {
		toSerialize["ui-white"] = o.UiWhite
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AccountExperienceColors) UnmarshalJSON(data []byte) (err error) {
	varAccountExperienceColors := _AccountExperienceColors{}

	err = json.Unmarshal(data, &varAccountExperienceColors)

	if err != nil {
		return err
	}

	*o = AccountExperienceColors(varAccountExperienceColors)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "ax-background-default")
		delete(additionalProperties, "brand-100")
		delete(additionalProperties, "brand-200")
		delete(additionalProperties, "brand-300")
		delete(additionalProperties, "brand-400")
		delete(additionalProperties, "brand-50")
		delete(additionalProperties, "brand-500")
		delete(additionalProperties, "brand-600")
		delete(additionalProperties, "brand-700")
		delete(additionalProperties, "brand-800")
		delete(additionalProperties, "brand-900")
		delete(additionalProperties, "brand-950")
		delete(additionalProperties, "button-identifier-background-default")
		delete(additionalProperties, "button-identifier-background-hover")
		delete(additionalProperties, "button-identifier-border-border-default")
		delete(additionalProperties, "button-identifier-border-border-hover")
		delete(additionalProperties, "button-identifier-foreground-default")
		delete(additionalProperties, "button-identifier-foreground-hover")
		delete(additionalProperties, "button-link-brand-brand")
		delete(additionalProperties, "button-link-brand-brand-hover")
		delete(additionalProperties, "button-link-default-primary")
		delete(additionalProperties, "button-link-default-primary-hover")
		delete(additionalProperties, "button-link-default-secondary")
		delete(additionalProperties, "button-link-default-secondary-hover")
		delete(additionalProperties, "button-link-disabled-disabled")
		delete(additionalProperties, "button-primary-background-default")
		delete(additionalProperties, "button-primary-background-disabled")
		delete(additionalProperties, "button-primary-background-hover")
		delete(additionalProperties, "button-primary-border-default")
		delete(additionalProperties, "button-primary-border-disabled")
		delete(additionalProperties, "button-primary-border-hover")
		delete(additionalProperties, "button-primary-foreground-default")
		delete(additionalProperties, "button-primary-foreground-disabled")
		delete(additionalProperties, "button-primary-foreground-hover")
		delete(additionalProperties, "button-secondary-background-default")
		delete(additionalProperties, "button-secondary-background-disabled")
		delete(additionalProperties, "button-secondary-background-hover")
		delete(additionalProperties, "button-secondary-border-default")
		delete(additionalProperties, "button-secondary-border-disabled")
		delete(additionalProperties, "button-secondary-border-hover")
		delete(additionalProperties, "button-secondary-foreground-default")
		delete(additionalProperties, "button-secondary-foreground-disabled")
		delete(additionalProperties, "button-secondary-foreground-hover")
		delete(additionalProperties, "button-social-background-default")
		delete(additionalProperties, "button-social-background-disabled")
		delete(additionalProperties, "button-social-background-generic-provider")
		delete(additionalProperties, "button-social-background-hover")
		delete(additionalProperties, "button-social-border-default")
		delete(additionalProperties, "button-social-border-disabled")
		delete(additionalProperties, "button-social-border-generic-provider")
		delete(additionalProperties, "button-social-border-hover")
		delete(additionalProperties, "button-social-foreground-default")
		delete(additionalProperties, "button-social-foreground-disabled")
		delete(additionalProperties, "button-social-foreground-generic-provider")
		delete(additionalProperties, "button-social-foreground-hover")
		delete(additionalProperties, "checkbox-background-checked")
		delete(additionalProperties, "checkbox-background-default")
		delete(additionalProperties, "checkbox-border-checkbox-border-checked")
		delete(additionalProperties, "checkbox-border-checkbox-border-default")
		delete(additionalProperties, "checkbox-foreground-checked")
		delete(additionalProperties, "checkbox-foreground-default")
		delete(additionalProperties, "form-background-default")
		delete(additionalProperties, "form-border-default")
		delete(additionalProperties, "input-background-default")
		delete(additionalProperties, "input-background-disabled")
		delete(additionalProperties, "input-background-hover")
		delete(additionalProperties, "input-border-default")
		delete(additionalProperties, "input-border-disabled")
		delete(additionalProperties, "input-border-focus")
		delete(additionalProperties, "input-border-hover")
		delete(additionalProperties, "input-foreground-disabled")
		delete(additionalProperties, "input-foreground-primary")
		delete(additionalProperties, "input-foreground-secondary")
		delete(additionalProperties, "input-foreground-tertiary")
		delete(additionalProperties, "interface-background-brand-primary")
		delete(additionalProperties, "interface-background-brand-primary-hover")
		delete(additionalProperties, "interface-background-brand-secondary")
		delete(additionalProperties, "interface-background-brand-secondary-hover")
		delete(additionalProperties, "interface-background-default-inverted")
		delete(additionalProperties, "interface-background-default-inverted-hover")
		delete(additionalProperties, "interface-background-default-none")
		delete(additionalProperties, "interface-background-default-primary")
		delete(additionalProperties, "interface-background-default-primary-hover")
		delete(additionalProperties, "interface-background-default-secondary")
		delete(additionalProperties, "interface-background-default-secondary-hover")
		delete(additionalProperties, "interface-background-default-tertiary")
		delete(additionalProperties, "interface-background-default-tertiary-hover")
		delete(additionalProperties, "interface-background-disabled-disabled")
		delete(additionalProperties, "interface-background-validation-danger")
		delete(additionalProperties, "interface-background-validation-success")
		delete(additionalProperties, "interface-background-validation-warning")
		delete(additionalProperties, "interface-border-brand-brand")
		delete(additionalProperties, "interface-border-default-inverted")
		delete(additionalProperties, "interface-border-default-none")
		delete(additionalProperties, "interface-border-default-primary")
		delete(additionalProperties, "interface-border-disabled-disabled")
		delete(additionalProperties, "interface-border-validation-danger")
		delete(additionalProperties, "interface-border-validation-success")
		delete(additionalProperties, "interface-border-validation-warning")
		delete(additionalProperties, "interface-foreground-brand-on-primary")
		delete(additionalProperties, "interface-foreground-brand-on-secondary")
		delete(additionalProperties, "interface-foreground-brand-primary")
		delete(additionalProperties, "interface-foreground-brand-secondary")
		delete(additionalProperties, "interface-foreground-default-inverted")
		delete(additionalProperties, "interface-foreground-default-primary")
		delete(additionalProperties, "interface-foreground-default-secondary")
		delete(additionalProperties, "interface-foreground-default-tertiary")
		delete(additionalProperties, "interface-foreground-disabled-disabled")
		delete(additionalProperties, "interface-foreground-disabled-on-disabled")
		delete(additionalProperties, "interface-foreground-validation-danger")
		delete(additionalProperties, "interface-foreground-validation-success")
		delete(additionalProperties, "interface-foreground-validation-warning")
		delete(additionalProperties, "ory-background-default")
		delete(additionalProperties, "ory-border-default")
		delete(additionalProperties, "ory-foreground-default")
		delete(additionalProperties, "radio-background-checked")
		delete(additionalProperties, "radio-background-default")
		delete(additionalProperties, "radio-border-checked")
		delete(additionalProperties, "radio-border-default")
		delete(additionalProperties, "radio-foreground-checked")
		delete(additionalProperties, "radio-foreground-default")
		delete(additionalProperties, "toggle-background-checked")
		delete(additionalProperties, "toggle-background-default")
		delete(additionalProperties, "toggle-border-checked")
		delete(additionalProperties, "toggle-border-default")
		delete(additionalProperties, "toggle-foreground-checked")
		delete(additionalProperties, "toggle-foreground-default")
		delete(additionalProperties, "ui-100")
		delete(additionalProperties, "ui-200")
		delete(additionalProperties, "ui-300")
		delete(additionalProperties, "ui-400")
		delete(additionalProperties, "ui-50")
		delete(additionalProperties, "ui-500")
		delete(additionalProperties, "ui-600")
		delete(additionalProperties, "ui-700")
		delete(additionalProperties, "ui-800")
		delete(additionalProperties, "ui-900")
		delete(additionalProperties, "ui-950")
		delete(additionalProperties, "ui-black")
		delete(additionalProperties, "ui-danger")
		delete(additionalProperties, "ui-success")
		delete(additionalProperties, "ui-transparent")
		delete(additionalProperties, "ui-warning")
		delete(additionalProperties, "ui-white")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAccountExperienceColors struct {
	value *AccountExperienceColors
	isSet bool
}

func (v NullableAccountExperienceColors) Get() *AccountExperienceColors {
	return v.value
}

func (v *NullableAccountExperienceColors) Set(val *AccountExperienceColors) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountExperienceColors) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountExperienceColors) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountExperienceColors(val *AccountExperienceColors) *NullableAccountExperienceColors {
	return &NullableAccountExperienceColors{value: val, isSet: true}
}

func (v NullableAccountExperienceColors) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountExperienceColors) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


