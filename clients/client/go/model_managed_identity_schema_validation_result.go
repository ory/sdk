/*
Ory APIs

Documentation for all public and administrative Ory APIs. Administrative APIs can only be accessed with a valid Personal Access Token. Public APIs are mostly used in browsers. 

API version: v1.12.1
Contact: support@ory.sh
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the ManagedIdentitySchemaValidationResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManagedIdentitySchemaValidationResult{}

// ManagedIdentitySchemaValidationResult Ory Identity Schema Validation Result
type ManagedIdentitySchemaValidationResult struct {
	Message *string `json:"message,omitempty"`
	Valid *bool `json:"valid,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ManagedIdentitySchemaValidationResult ManagedIdentitySchemaValidationResult

// NewManagedIdentitySchemaValidationResult instantiates a new ManagedIdentitySchemaValidationResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManagedIdentitySchemaValidationResult() *ManagedIdentitySchemaValidationResult {
	this := ManagedIdentitySchemaValidationResult{}
	return &this
}

// NewManagedIdentitySchemaValidationResultWithDefaults instantiates a new ManagedIdentitySchemaValidationResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManagedIdentitySchemaValidationResultWithDefaults() *ManagedIdentitySchemaValidationResult {
	this := ManagedIdentitySchemaValidationResult{}
	return &this
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ManagedIdentitySchemaValidationResult) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedIdentitySchemaValidationResult) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ManagedIdentitySchemaValidationResult) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ManagedIdentitySchemaValidationResult) SetMessage(v string) {
	o.Message = &v
}

// GetValid returns the Valid field value if set, zero value otherwise.
func (o *ManagedIdentitySchemaValidationResult) GetValid() bool {
	if o == nil || IsNil(o.Valid) {
		var ret bool
		return ret
	}
	return *o.Valid
}

// GetValidOk returns a tuple with the Valid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedIdentitySchemaValidationResult) GetValidOk() (*bool, bool) {
	if o == nil || IsNil(o.Valid) {
		return nil, false
	}
	return o.Valid, true
}

// HasValid returns a boolean if a field has been set.
func (o *ManagedIdentitySchemaValidationResult) HasValid() bool {
	if o != nil && !IsNil(o.Valid) {
		return true
	}

	return false
}

// SetValid gets a reference to the given bool and assigns it to the Valid field.
func (o *ManagedIdentitySchemaValidationResult) SetValid(v bool) {
	o.Valid = &v
}

func (o ManagedIdentitySchemaValidationResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManagedIdentitySchemaValidationResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Valid) {
		toSerialize["valid"] = o.Valid
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ManagedIdentitySchemaValidationResult) UnmarshalJSON(data []byte) (err error) {
	varManagedIdentitySchemaValidationResult := _ManagedIdentitySchemaValidationResult{}

	err = json.Unmarshal(data, &varManagedIdentitySchemaValidationResult)

	if err != nil {
		return err
	}

	*o = ManagedIdentitySchemaValidationResult(varManagedIdentitySchemaValidationResult)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "message")
		delete(additionalProperties, "valid")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableManagedIdentitySchemaValidationResult struct {
	value *ManagedIdentitySchemaValidationResult
	isSet bool
}

func (v NullableManagedIdentitySchemaValidationResult) Get() *ManagedIdentitySchemaValidationResult {
	return v.value
}

func (v *NullableManagedIdentitySchemaValidationResult) Set(val *ManagedIdentitySchemaValidationResult) {
	v.value = val
	v.isSet = true
}

func (v NullableManagedIdentitySchemaValidationResult) IsSet() bool {
	return v.isSet
}

func (v *NullableManagedIdentitySchemaValidationResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagedIdentitySchemaValidationResult(val *ManagedIdentitySchemaValidationResult) *NullableManagedIdentitySchemaValidationResult {
	return &NullableManagedIdentitySchemaValidationResult{value: val, isSet: true}
}

func (v NullableManagedIdentitySchemaValidationResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagedIdentitySchemaValidationResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


