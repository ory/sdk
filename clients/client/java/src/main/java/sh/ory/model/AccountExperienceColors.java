/*
 * Ory APIs
 * # Introduction Documentation for all public and administrative Ory APIs. Administrative APIs can only be accessed with a valid Personal Access Token. Public APIs are mostly used in browsers.  ## SDKs This document describes the APIs available in the Ory Network. The APIs are available as SDKs for the following languages:  | Language       | Download SDK                                                     | Documentation                                                                        | | -------------- | ---------------------------------------------------------------- | ------------------------------------------------------------------------------------ | | Dart           | [pub.dev](https://pub.dev/packages/ory_client)                   | [README](https://github.com/ory/sdk/blob/master/clients/client/dart/README.md)       | | .NET           | [nuget.org](https://www.nuget.org/packages/Ory.Client/)          | [README](https://github.com/ory/sdk/blob/master/clients/client/dotnet/README.md)     | | Elixir         | [hex.pm](https://hex.pm/packages/ory_client)                     | [README](https://github.com/ory/sdk/blob/master/clients/client/elixir/README.md)     | | Go             | [github.com](https://github.com/ory/client-go)                   | [README](https://github.com/ory/sdk/blob/master/clients/client/go/README.md)         | | Java           | [maven.org](https://search.maven.org/artifact/sh.ory/ory-client) | [README](https://github.com/ory/sdk/blob/master/clients/client/java/README.md)       | | JavaScript     | [npmjs.com](https://www.npmjs.com/package/@ory/client)           | [README](https://github.com/ory/sdk/blob/master/clients/client/typescript/README.md) | | JavaScript (With fetch) | [npmjs.com](https://www.npmjs.com/package/@ory/client-fetch)           | [README](https://github.com/ory/sdk/blob/master/clients/client/typescript-fetch/README.md) |  | PHP            | [packagist.org](https://packagist.org/packages/ory/client)       | [README](https://github.com/ory/sdk/blob/master/clients/client/php/README.md)        | | Python         | [pypi.org](https://pypi.org/project/ory-client/)                 | [README](https://github.com/ory/sdk/blob/master/clients/client/python/README.md)     | | Ruby           | [rubygems.org](https://rubygems.org/gems/ory-client)             | [README](https://github.com/ory/sdk/blob/master/clients/client/ruby/README.md)       | | Rust           | [crates.io](https://crates.io/crates/ory-client)                 | [README](https://github.com/ory/sdk/blob/master/clients/client/rust/README.md)       | 
 *
 * The version of the OpenAPI document: v1.20.9
 * Contact: support@ory.sh
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package sh.ory.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import sh.ory.JSON;

/**
 * AccountExperienceColors
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-25T12:14:38.611699860Z[Etc/UTC]", comments = "Generator version: 7.7.0")
public class AccountExperienceColors {
  public static final String SERIALIZED_NAME_BRAND100 = "brand-100";
  @SerializedName(SERIALIZED_NAME_BRAND100)
  private String brand100;

  public static final String SERIALIZED_NAME_BRAND200 = "brand-200";
  @SerializedName(SERIALIZED_NAME_BRAND200)
  private String brand200;

  public static final String SERIALIZED_NAME_BRAND300 = "brand-300";
  @SerializedName(SERIALIZED_NAME_BRAND300)
  private String brand300;

  public static final String SERIALIZED_NAME_BRAND400 = "brand-400";
  @SerializedName(SERIALIZED_NAME_BRAND400)
  private String brand400;

  public static final String SERIALIZED_NAME_BRAND50 = "brand-50";
  @SerializedName(SERIALIZED_NAME_BRAND50)
  private String brand50;

  public static final String SERIALIZED_NAME_BRAND500 = "brand-500";
  @SerializedName(SERIALIZED_NAME_BRAND500)
  private String brand500;

  public static final String SERIALIZED_NAME_BRAND600 = "brand-600";
  @SerializedName(SERIALIZED_NAME_BRAND600)
  private String brand600;

  public static final String SERIALIZED_NAME_BRAND700 = "brand-700";
  @SerializedName(SERIALIZED_NAME_BRAND700)
  private String brand700;

  public static final String SERIALIZED_NAME_BRAND800 = "brand-800";
  @SerializedName(SERIALIZED_NAME_BRAND800)
  private String brand800;

  public static final String SERIALIZED_NAME_BRAND900 = "brand-900";
  @SerializedName(SERIALIZED_NAME_BRAND900)
  private String brand900;

  public static final String SERIALIZED_NAME_BRAND950 = "brand-950";
  @SerializedName(SERIALIZED_NAME_BRAND950)
  private String brand950;

  public static final String SERIALIZED_NAME_BUTTON_IDENTIFIER_BACKGROUND_DEFAULT = "button-identifier-background-default";
  @SerializedName(SERIALIZED_NAME_BUTTON_IDENTIFIER_BACKGROUND_DEFAULT)
  private String buttonIdentifierBackgroundDefault;

  public static final String SERIALIZED_NAME_BUTTON_IDENTIFIER_BACKGROUND_HOVER = "button-identifier-background-hover";
  @SerializedName(SERIALIZED_NAME_BUTTON_IDENTIFIER_BACKGROUND_HOVER)
  private String buttonIdentifierBackgroundHover;

  public static final String SERIALIZED_NAME_BUTTON_IDENTIFIER_BORDER_BORDER_DEFAULT = "button-identifier-border-border-default";
  @SerializedName(SERIALIZED_NAME_BUTTON_IDENTIFIER_BORDER_BORDER_DEFAULT)
  private String buttonIdentifierBorderBorderDefault;

  public static final String SERIALIZED_NAME_BUTTON_IDENTIFIER_BORDER_BORDER_HOVER = "button-identifier-border-border-hover";
  @SerializedName(SERIALIZED_NAME_BUTTON_IDENTIFIER_BORDER_BORDER_HOVER)
  private String buttonIdentifierBorderBorderHover;

  public static final String SERIALIZED_NAME_BUTTON_IDENTIFIER_FOREGROUND_DEFAULT = "button-identifier-foreground-default";
  @SerializedName(SERIALIZED_NAME_BUTTON_IDENTIFIER_FOREGROUND_DEFAULT)
  private String buttonIdentifierForegroundDefault;

  public static final String SERIALIZED_NAME_BUTTON_IDENTIFIER_FOREGROUND_HOVER = "button-identifier-foreground-hover";
  @SerializedName(SERIALIZED_NAME_BUTTON_IDENTIFIER_FOREGROUND_HOVER)
  private String buttonIdentifierForegroundHover;

  public static final String SERIALIZED_NAME_BUTTON_LINK_BRAND_BRAND = "button-link-brand-brand";
  @SerializedName(SERIALIZED_NAME_BUTTON_LINK_BRAND_BRAND)
  private String buttonLinkBrandBrand;

  public static final String SERIALIZED_NAME_BUTTON_LINK_BRAND_BRAND_HOVER = "button-link-brand-brand-hover";
  @SerializedName(SERIALIZED_NAME_BUTTON_LINK_BRAND_BRAND_HOVER)
  private String buttonLinkBrandBrandHover;

  public static final String SERIALIZED_NAME_BUTTON_LINK_DEFAULT_PRIMARY = "button-link-default-primary";
  @SerializedName(SERIALIZED_NAME_BUTTON_LINK_DEFAULT_PRIMARY)
  private String buttonLinkDefaultPrimary;

  public static final String SERIALIZED_NAME_BUTTON_LINK_DEFAULT_PRIMARY_HOVER = "button-link-default-primary-hover";
  @SerializedName(SERIALIZED_NAME_BUTTON_LINK_DEFAULT_PRIMARY_HOVER)
  private String buttonLinkDefaultPrimaryHover;

  public static final String SERIALIZED_NAME_BUTTON_LINK_DEFAULT_SECONDARY = "button-link-default-secondary";
  @SerializedName(SERIALIZED_NAME_BUTTON_LINK_DEFAULT_SECONDARY)
  private String buttonLinkDefaultSecondary;

  public static final String SERIALIZED_NAME_BUTTON_LINK_DEFAULT_SECONDARY_HOVER = "button-link-default-secondary-hover";
  @SerializedName(SERIALIZED_NAME_BUTTON_LINK_DEFAULT_SECONDARY_HOVER)
  private String buttonLinkDefaultSecondaryHover;

  public static final String SERIALIZED_NAME_BUTTON_LINK_DISABLED_DISABLED = "button-link-disabled-disabled";
  @SerializedName(SERIALIZED_NAME_BUTTON_LINK_DISABLED_DISABLED)
  private String buttonLinkDisabledDisabled;

  public static final String SERIALIZED_NAME_BUTTON_PRIMARY_BACKGROUND_DEFAULT = "button-primary-background-default";
  @SerializedName(SERIALIZED_NAME_BUTTON_PRIMARY_BACKGROUND_DEFAULT)
  private String buttonPrimaryBackgroundDefault;

  public static final String SERIALIZED_NAME_BUTTON_PRIMARY_BACKGROUND_DISABLED = "button-primary-background-disabled";
  @SerializedName(SERIALIZED_NAME_BUTTON_PRIMARY_BACKGROUND_DISABLED)
  private String buttonPrimaryBackgroundDisabled;

  public static final String SERIALIZED_NAME_BUTTON_PRIMARY_BACKGROUND_HOVER = "button-primary-background-hover";
  @SerializedName(SERIALIZED_NAME_BUTTON_PRIMARY_BACKGROUND_HOVER)
  private String buttonPrimaryBackgroundHover;

  public static final String SERIALIZED_NAME_BUTTON_PRIMARY_BORDER_DEFAULT = "button-primary-border-default";
  @SerializedName(SERIALIZED_NAME_BUTTON_PRIMARY_BORDER_DEFAULT)
  private String buttonPrimaryBorderDefault;

  public static final String SERIALIZED_NAME_BUTTON_PRIMARY_BORDER_DISABLED = "button-primary-border-disabled";
  @SerializedName(SERIALIZED_NAME_BUTTON_PRIMARY_BORDER_DISABLED)
  private String buttonPrimaryBorderDisabled;

  public static final String SERIALIZED_NAME_BUTTON_PRIMARY_BORDER_HOVER = "button-primary-border-hover";
  @SerializedName(SERIALIZED_NAME_BUTTON_PRIMARY_BORDER_HOVER)
  private String buttonPrimaryBorderHover;

  public static final String SERIALIZED_NAME_BUTTON_PRIMARY_FOREGROUND_DEFAULT = "button-primary-foreground-default";
  @SerializedName(SERIALIZED_NAME_BUTTON_PRIMARY_FOREGROUND_DEFAULT)
  private String buttonPrimaryForegroundDefault;

  public static final String SERIALIZED_NAME_BUTTON_PRIMARY_FOREGROUND_DISABLED = "button-primary-foreground-disabled";
  @SerializedName(SERIALIZED_NAME_BUTTON_PRIMARY_FOREGROUND_DISABLED)
  private String buttonPrimaryForegroundDisabled;

  public static final String SERIALIZED_NAME_BUTTON_PRIMARY_FOREGROUND_HOVER = "button-primary-foreground-hover";
  @SerializedName(SERIALIZED_NAME_BUTTON_PRIMARY_FOREGROUND_HOVER)
  private String buttonPrimaryForegroundHover;

  public static final String SERIALIZED_NAME_BUTTON_SECONDARY_BACKGROUND_DEFAULT = "button-secondary-background-default";
  @SerializedName(SERIALIZED_NAME_BUTTON_SECONDARY_BACKGROUND_DEFAULT)
  private String buttonSecondaryBackgroundDefault;

  public static final String SERIALIZED_NAME_BUTTON_SECONDARY_BACKGROUND_DISABLED = "button-secondary-background-disabled";
  @SerializedName(SERIALIZED_NAME_BUTTON_SECONDARY_BACKGROUND_DISABLED)
  private String buttonSecondaryBackgroundDisabled;

  public static final String SERIALIZED_NAME_BUTTON_SECONDARY_BACKGROUND_HOVER = "button-secondary-background-hover";
  @SerializedName(SERIALIZED_NAME_BUTTON_SECONDARY_BACKGROUND_HOVER)
  private String buttonSecondaryBackgroundHover;

  public static final String SERIALIZED_NAME_BUTTON_SECONDARY_BORDER_DEFAULT = "button-secondary-border-default";
  @SerializedName(SERIALIZED_NAME_BUTTON_SECONDARY_BORDER_DEFAULT)
  private String buttonSecondaryBorderDefault;

  public static final String SERIALIZED_NAME_BUTTON_SECONDARY_BORDER_DISABLED = "button-secondary-border-disabled";
  @SerializedName(SERIALIZED_NAME_BUTTON_SECONDARY_BORDER_DISABLED)
  private String buttonSecondaryBorderDisabled;

  public static final String SERIALIZED_NAME_BUTTON_SECONDARY_BORDER_HOVER = "button-secondary-border-hover";
  @SerializedName(SERIALIZED_NAME_BUTTON_SECONDARY_BORDER_HOVER)
  private String buttonSecondaryBorderHover;

  public static final String SERIALIZED_NAME_BUTTON_SECONDARY_FOREGROUND_DEFAULT = "button-secondary-foreground-default";
  @SerializedName(SERIALIZED_NAME_BUTTON_SECONDARY_FOREGROUND_DEFAULT)
  private String buttonSecondaryForegroundDefault;

  public static final String SERIALIZED_NAME_BUTTON_SECONDARY_FOREGROUND_DISABLED = "button-secondary-foreground-disabled";
  @SerializedName(SERIALIZED_NAME_BUTTON_SECONDARY_FOREGROUND_DISABLED)
  private String buttonSecondaryForegroundDisabled;

  public static final String SERIALIZED_NAME_BUTTON_SECONDARY_FOREGROUND_HOVER = "button-secondary-foreground-hover";
  @SerializedName(SERIALIZED_NAME_BUTTON_SECONDARY_FOREGROUND_HOVER)
  private String buttonSecondaryForegroundHover;

  public static final String SERIALIZED_NAME_BUTTON_SOCIAL_BACKGROUND_DEFAULT = "button-social-background-default";
  @SerializedName(SERIALIZED_NAME_BUTTON_SOCIAL_BACKGROUND_DEFAULT)
  private String buttonSocialBackgroundDefault;

  public static final String SERIALIZED_NAME_BUTTON_SOCIAL_BACKGROUND_DISABLED = "button-social-background-disabled";
  @SerializedName(SERIALIZED_NAME_BUTTON_SOCIAL_BACKGROUND_DISABLED)
  private String buttonSocialBackgroundDisabled;

  public static final String SERIALIZED_NAME_BUTTON_SOCIAL_BACKGROUND_GENERIC_PROVIDER = "button-social-background-generic-provider";
  @SerializedName(SERIALIZED_NAME_BUTTON_SOCIAL_BACKGROUND_GENERIC_PROVIDER)
  private String buttonSocialBackgroundGenericProvider;

  public static final String SERIALIZED_NAME_BUTTON_SOCIAL_BACKGROUND_HOVER = "button-social-background-hover";
  @SerializedName(SERIALIZED_NAME_BUTTON_SOCIAL_BACKGROUND_HOVER)
  private String buttonSocialBackgroundHover;

  public static final String SERIALIZED_NAME_BUTTON_SOCIAL_BORDER_DEFAULT = "button-social-border-default";
  @SerializedName(SERIALIZED_NAME_BUTTON_SOCIAL_BORDER_DEFAULT)
  private String buttonSocialBorderDefault;

  public static final String SERIALIZED_NAME_BUTTON_SOCIAL_BORDER_DISABLED = "button-social-border-disabled";
  @SerializedName(SERIALIZED_NAME_BUTTON_SOCIAL_BORDER_DISABLED)
  private String buttonSocialBorderDisabled;

  public static final String SERIALIZED_NAME_BUTTON_SOCIAL_BORDER_GENERIC_PROVIDER = "button-social-border-generic-provider";
  @SerializedName(SERIALIZED_NAME_BUTTON_SOCIAL_BORDER_GENERIC_PROVIDER)
  private String buttonSocialBorderGenericProvider;

  public static final String SERIALIZED_NAME_BUTTON_SOCIAL_BORDER_HOVER = "button-social-border-hover";
  @SerializedName(SERIALIZED_NAME_BUTTON_SOCIAL_BORDER_HOVER)
  private String buttonSocialBorderHover;

  public static final String SERIALIZED_NAME_BUTTON_SOCIAL_FOREGROUND_DEFAULT = "button-social-foreground-default";
  @SerializedName(SERIALIZED_NAME_BUTTON_SOCIAL_FOREGROUND_DEFAULT)
  private String buttonSocialForegroundDefault;

  public static final String SERIALIZED_NAME_BUTTON_SOCIAL_FOREGROUND_DISABLED = "button-social-foreground-disabled";
  @SerializedName(SERIALIZED_NAME_BUTTON_SOCIAL_FOREGROUND_DISABLED)
  private String buttonSocialForegroundDisabled;

  public static final String SERIALIZED_NAME_BUTTON_SOCIAL_FOREGROUND_GENERIC_PROVIDER = "button-social-foreground-generic-provider";
  @SerializedName(SERIALIZED_NAME_BUTTON_SOCIAL_FOREGROUND_GENERIC_PROVIDER)
  private String buttonSocialForegroundGenericProvider;

  public static final String SERIALIZED_NAME_BUTTON_SOCIAL_FOREGROUND_HOVER = "button-social-foreground-hover";
  @SerializedName(SERIALIZED_NAME_BUTTON_SOCIAL_FOREGROUND_HOVER)
  private String buttonSocialForegroundHover;

  public static final String SERIALIZED_NAME_CHECKBOX_BACKGROUND_CHECKED = "checkbox-background-checked";
  @SerializedName(SERIALIZED_NAME_CHECKBOX_BACKGROUND_CHECKED)
  private String checkboxBackgroundChecked;

  public static final String SERIALIZED_NAME_CHECKBOX_BACKGROUND_DEFAULT = "checkbox-background-default";
  @SerializedName(SERIALIZED_NAME_CHECKBOX_BACKGROUND_DEFAULT)
  private String checkboxBackgroundDefault;

  public static final String SERIALIZED_NAME_CHECKBOX_BORDER_CHECKBOX_BORDER_CHECKED = "checkbox-border-checkbox-border-checked";
  @SerializedName(SERIALIZED_NAME_CHECKBOX_BORDER_CHECKBOX_BORDER_CHECKED)
  private String checkboxBorderCheckboxBorderChecked;

  public static final String SERIALIZED_NAME_CHECKBOX_BORDER_CHECKBOX_BORDER_DEFAULT = "checkbox-border-checkbox-border-default";
  @SerializedName(SERIALIZED_NAME_CHECKBOX_BORDER_CHECKBOX_BORDER_DEFAULT)
  private String checkboxBorderCheckboxBorderDefault;

  public static final String SERIALIZED_NAME_CHECKBOX_FOREGROUND_CHECKED = "checkbox-foreground-checked";
  @SerializedName(SERIALIZED_NAME_CHECKBOX_FOREGROUND_CHECKED)
  private String checkboxForegroundChecked;

  public static final String SERIALIZED_NAME_CHECKBOX_FOREGROUND_DEFAULT = "checkbox-foreground-default";
  @SerializedName(SERIALIZED_NAME_CHECKBOX_FOREGROUND_DEFAULT)
  private String checkboxForegroundDefault;

  public static final String SERIALIZED_NAME_FORM_BACKGROUND_DEFAULT = "form-background-default";
  @SerializedName(SERIALIZED_NAME_FORM_BACKGROUND_DEFAULT)
  private String formBackgroundDefault;

  public static final String SERIALIZED_NAME_FORM_BORDER_DEFAULT = "form-border-default";
  @SerializedName(SERIALIZED_NAME_FORM_BORDER_DEFAULT)
  private String formBorderDefault;

  public static final String SERIALIZED_NAME_INPUT_BACKGROUND_DEFAULT = "input-background-default";
  @SerializedName(SERIALIZED_NAME_INPUT_BACKGROUND_DEFAULT)
  private String inputBackgroundDefault;

  public static final String SERIALIZED_NAME_INPUT_BACKGROUND_DISABLED = "input-background-disabled";
  @SerializedName(SERIALIZED_NAME_INPUT_BACKGROUND_DISABLED)
  private String inputBackgroundDisabled;

  public static final String SERIALIZED_NAME_INPUT_BACKGROUND_HOVER = "input-background-hover";
  @SerializedName(SERIALIZED_NAME_INPUT_BACKGROUND_HOVER)
  private String inputBackgroundHover;

  public static final String SERIALIZED_NAME_INPUT_BORDER_DEFAULT = "input-border-default";
  @SerializedName(SERIALIZED_NAME_INPUT_BORDER_DEFAULT)
  private String inputBorderDefault;

  public static final String SERIALIZED_NAME_INPUT_BORDER_DISABLED = "input-border-disabled";
  @SerializedName(SERIALIZED_NAME_INPUT_BORDER_DISABLED)
  private String inputBorderDisabled;

  public static final String SERIALIZED_NAME_INPUT_BORDER_FOCUS = "input-border-focus";
  @SerializedName(SERIALIZED_NAME_INPUT_BORDER_FOCUS)
  private String inputBorderFocus;

  public static final String SERIALIZED_NAME_INPUT_BORDER_HOVER = "input-border-hover";
  @SerializedName(SERIALIZED_NAME_INPUT_BORDER_HOVER)
  private String inputBorderHover;

  public static final String SERIALIZED_NAME_INPUT_FOREGROUND_DISABLED = "input-foreground-disabled";
  @SerializedName(SERIALIZED_NAME_INPUT_FOREGROUND_DISABLED)
  private String inputForegroundDisabled;

  public static final String SERIALIZED_NAME_INPUT_FOREGROUND_PRIMARY = "input-foreground-primary";
  @SerializedName(SERIALIZED_NAME_INPUT_FOREGROUND_PRIMARY)
  private String inputForegroundPrimary;

  public static final String SERIALIZED_NAME_INPUT_FOREGROUND_SECONDARY = "input-foreground-secondary";
  @SerializedName(SERIALIZED_NAME_INPUT_FOREGROUND_SECONDARY)
  private String inputForegroundSecondary;

  public static final String SERIALIZED_NAME_INPUT_FOREGROUND_TERTIARY = "input-foreground-tertiary";
  @SerializedName(SERIALIZED_NAME_INPUT_FOREGROUND_TERTIARY)
  private String inputForegroundTertiary;

  public static final String SERIALIZED_NAME_INTERFACE_BACKGROUND_BRAND_PRIMARY = "interface-background-brand-primary";
  @SerializedName(SERIALIZED_NAME_INTERFACE_BACKGROUND_BRAND_PRIMARY)
  private String interfaceBackgroundBrandPrimary;

  public static final String SERIALIZED_NAME_INTERFACE_BACKGROUND_BRAND_PRIMARY_HOVER = "interface-background-brand-primary-hover";
  @SerializedName(SERIALIZED_NAME_INTERFACE_BACKGROUND_BRAND_PRIMARY_HOVER)
  private String interfaceBackgroundBrandPrimaryHover;

  public static final String SERIALIZED_NAME_INTERFACE_BACKGROUND_BRAND_SECONDARY = "interface-background-brand-secondary";
  @SerializedName(SERIALIZED_NAME_INTERFACE_BACKGROUND_BRAND_SECONDARY)
  private String interfaceBackgroundBrandSecondary;

  public static final String SERIALIZED_NAME_INTERFACE_BACKGROUND_BRAND_SECONDARY_HOVER = "interface-background-brand-secondary-hover";
  @SerializedName(SERIALIZED_NAME_INTERFACE_BACKGROUND_BRAND_SECONDARY_HOVER)
  private String interfaceBackgroundBrandSecondaryHover;

  public static final String SERIALIZED_NAME_INTERFACE_BACKGROUND_DEFAULT_INVERTED = "interface-background-default-inverted";
  @SerializedName(SERIALIZED_NAME_INTERFACE_BACKGROUND_DEFAULT_INVERTED)
  private String interfaceBackgroundDefaultInverted;

  public static final String SERIALIZED_NAME_INTERFACE_BACKGROUND_DEFAULT_INVERTED_HOVER = "interface-background-default-inverted-hover";
  @SerializedName(SERIALIZED_NAME_INTERFACE_BACKGROUND_DEFAULT_INVERTED_HOVER)
  private String interfaceBackgroundDefaultInvertedHover;

  public static final String SERIALIZED_NAME_INTERFACE_BACKGROUND_DEFAULT_NONE = "interface-background-default-none";
  @SerializedName(SERIALIZED_NAME_INTERFACE_BACKGROUND_DEFAULT_NONE)
  private String interfaceBackgroundDefaultNone;

  public static final String SERIALIZED_NAME_INTERFACE_BACKGROUND_DEFAULT_PRIMARY = "interface-background-default-primary";
  @SerializedName(SERIALIZED_NAME_INTERFACE_BACKGROUND_DEFAULT_PRIMARY)
  private String interfaceBackgroundDefaultPrimary;

  public static final String SERIALIZED_NAME_INTERFACE_BACKGROUND_DEFAULT_PRIMARY_HOVER = "interface-background-default-primary-hover";
  @SerializedName(SERIALIZED_NAME_INTERFACE_BACKGROUND_DEFAULT_PRIMARY_HOVER)
  private String interfaceBackgroundDefaultPrimaryHover;

  public static final String SERIALIZED_NAME_INTERFACE_BACKGROUND_DEFAULT_SECONDARY = "interface-background-default-secondary";
  @SerializedName(SERIALIZED_NAME_INTERFACE_BACKGROUND_DEFAULT_SECONDARY)
  private String interfaceBackgroundDefaultSecondary;

  public static final String SERIALIZED_NAME_INTERFACE_BACKGROUND_DEFAULT_SECONDARY_HOVER = "interface-background-default-secondary-hover";
  @SerializedName(SERIALIZED_NAME_INTERFACE_BACKGROUND_DEFAULT_SECONDARY_HOVER)
  private String interfaceBackgroundDefaultSecondaryHover;

  public static final String SERIALIZED_NAME_INTERFACE_BACKGROUND_DEFAULT_TERTIARY = "interface-background-default-tertiary";
  @SerializedName(SERIALIZED_NAME_INTERFACE_BACKGROUND_DEFAULT_TERTIARY)
  private String interfaceBackgroundDefaultTertiary;

  public static final String SERIALIZED_NAME_INTERFACE_BACKGROUND_DEFAULT_TERTIARY_HOVER = "interface-background-default-tertiary-hover";
  @SerializedName(SERIALIZED_NAME_INTERFACE_BACKGROUND_DEFAULT_TERTIARY_HOVER)
  private String interfaceBackgroundDefaultTertiaryHover;

  public static final String SERIALIZED_NAME_INTERFACE_BACKGROUND_DISABLED_DISABLED = "interface-background-disabled-disabled";
  @SerializedName(SERIALIZED_NAME_INTERFACE_BACKGROUND_DISABLED_DISABLED)
  private String interfaceBackgroundDisabledDisabled;

  public static final String SERIALIZED_NAME_INTERFACE_BACKGROUND_VALIDATION_DANGER = "interface-background-validation-danger";
  @SerializedName(SERIALIZED_NAME_INTERFACE_BACKGROUND_VALIDATION_DANGER)
  private String interfaceBackgroundValidationDanger;

  public static final String SERIALIZED_NAME_INTERFACE_BACKGROUND_VALIDATION_SUCCESS = "interface-background-validation-success";
  @SerializedName(SERIALIZED_NAME_INTERFACE_BACKGROUND_VALIDATION_SUCCESS)
  private String interfaceBackgroundValidationSuccess;

  public static final String SERIALIZED_NAME_INTERFACE_BACKGROUND_VALIDATION_WARNING = "interface-background-validation-warning";
  @SerializedName(SERIALIZED_NAME_INTERFACE_BACKGROUND_VALIDATION_WARNING)
  private String interfaceBackgroundValidationWarning;

  public static final String SERIALIZED_NAME_INTERFACE_BORDER_BRAND_BRAND = "interface-border-brand-brand";
  @SerializedName(SERIALIZED_NAME_INTERFACE_BORDER_BRAND_BRAND)
  private String interfaceBorderBrandBrand;

  public static final String SERIALIZED_NAME_INTERFACE_BORDER_DEFAULT_INVERTED = "interface-border-default-inverted";
  @SerializedName(SERIALIZED_NAME_INTERFACE_BORDER_DEFAULT_INVERTED)
  private String interfaceBorderDefaultInverted;

  public static final String SERIALIZED_NAME_INTERFACE_BORDER_DEFAULT_NONE = "interface-border-default-none";
  @SerializedName(SERIALIZED_NAME_INTERFACE_BORDER_DEFAULT_NONE)
  private String interfaceBorderDefaultNone;

  public static final String SERIALIZED_NAME_INTERFACE_BORDER_DEFAULT_PRIMARY = "interface-border-default-primary";
  @SerializedName(SERIALIZED_NAME_INTERFACE_BORDER_DEFAULT_PRIMARY)
  private String interfaceBorderDefaultPrimary;

  public static final String SERIALIZED_NAME_INTERFACE_BORDER_DISABLED_DISABLED = "interface-border-disabled-disabled";
  @SerializedName(SERIALIZED_NAME_INTERFACE_BORDER_DISABLED_DISABLED)
  private String interfaceBorderDisabledDisabled;

  public static final String SERIALIZED_NAME_INTERFACE_BORDER_VALIDATION_DANGER = "interface-border-validation-danger";
  @SerializedName(SERIALIZED_NAME_INTERFACE_BORDER_VALIDATION_DANGER)
  private String interfaceBorderValidationDanger;

  public static final String SERIALIZED_NAME_INTERFACE_BORDER_VALIDATION_SUCCESS = "interface-border-validation-success";
  @SerializedName(SERIALIZED_NAME_INTERFACE_BORDER_VALIDATION_SUCCESS)
  private String interfaceBorderValidationSuccess;

  public static final String SERIALIZED_NAME_INTERFACE_BORDER_VALIDATION_WARNING = "interface-border-validation-warning";
  @SerializedName(SERIALIZED_NAME_INTERFACE_BORDER_VALIDATION_WARNING)
  private String interfaceBorderValidationWarning;

  public static final String SERIALIZED_NAME_INTERFACE_FOREGROUND_BRAND_ON_PRIMARY = "interface-foreground-brand-on-primary";
  @SerializedName(SERIALIZED_NAME_INTERFACE_FOREGROUND_BRAND_ON_PRIMARY)
  private String interfaceForegroundBrandOnPrimary;

  public static final String SERIALIZED_NAME_INTERFACE_FOREGROUND_BRAND_ON_SECONDARY = "interface-foreground-brand-on-secondary";
  @SerializedName(SERIALIZED_NAME_INTERFACE_FOREGROUND_BRAND_ON_SECONDARY)
  private String interfaceForegroundBrandOnSecondary;

  public static final String SERIALIZED_NAME_INTERFACE_FOREGROUND_BRAND_PRIMARY = "interface-foreground-brand-primary";
  @SerializedName(SERIALIZED_NAME_INTERFACE_FOREGROUND_BRAND_PRIMARY)
  private String interfaceForegroundBrandPrimary;

  public static final String SERIALIZED_NAME_INTERFACE_FOREGROUND_BRAND_SECONDARY = "interface-foreground-brand-secondary";
  @SerializedName(SERIALIZED_NAME_INTERFACE_FOREGROUND_BRAND_SECONDARY)
  private String interfaceForegroundBrandSecondary;

  public static final String SERIALIZED_NAME_INTERFACE_FOREGROUND_DEFAULT_INVERTED = "interface-foreground-default-inverted";
  @SerializedName(SERIALIZED_NAME_INTERFACE_FOREGROUND_DEFAULT_INVERTED)
  private String interfaceForegroundDefaultInverted;

  public static final String SERIALIZED_NAME_INTERFACE_FOREGROUND_DEFAULT_PRIMARY = "interface-foreground-default-primary";
  @SerializedName(SERIALIZED_NAME_INTERFACE_FOREGROUND_DEFAULT_PRIMARY)
  private String interfaceForegroundDefaultPrimary;

  public static final String SERIALIZED_NAME_INTERFACE_FOREGROUND_DEFAULT_SECONDARY = "interface-foreground-default-secondary";
  @SerializedName(SERIALIZED_NAME_INTERFACE_FOREGROUND_DEFAULT_SECONDARY)
  private String interfaceForegroundDefaultSecondary;

  public static final String SERIALIZED_NAME_INTERFACE_FOREGROUND_DEFAULT_TERTIARY = "interface-foreground-default-tertiary";
  @SerializedName(SERIALIZED_NAME_INTERFACE_FOREGROUND_DEFAULT_TERTIARY)
  private String interfaceForegroundDefaultTertiary;

  public static final String SERIALIZED_NAME_INTERFACE_FOREGROUND_DISABLED_DISABLED = "interface-foreground-disabled-disabled";
  @SerializedName(SERIALIZED_NAME_INTERFACE_FOREGROUND_DISABLED_DISABLED)
  private String interfaceForegroundDisabledDisabled;

  public static final String SERIALIZED_NAME_INTERFACE_FOREGROUND_DISABLED_ON_DISABLED = "interface-foreground-disabled-on-disabled";
  @SerializedName(SERIALIZED_NAME_INTERFACE_FOREGROUND_DISABLED_ON_DISABLED)
  private String interfaceForegroundDisabledOnDisabled;

  public static final String SERIALIZED_NAME_INTERFACE_FOREGROUND_VALIDATION_DANGER = "interface-foreground-validation-danger";
  @SerializedName(SERIALIZED_NAME_INTERFACE_FOREGROUND_VALIDATION_DANGER)
  private String interfaceForegroundValidationDanger;

  public static final String SERIALIZED_NAME_INTERFACE_FOREGROUND_VALIDATION_SUCCESS = "interface-foreground-validation-success";
  @SerializedName(SERIALIZED_NAME_INTERFACE_FOREGROUND_VALIDATION_SUCCESS)
  private String interfaceForegroundValidationSuccess;

  public static final String SERIALIZED_NAME_INTERFACE_FOREGROUND_VALIDATION_WARNING = "interface-foreground-validation-warning";
  @SerializedName(SERIALIZED_NAME_INTERFACE_FOREGROUND_VALIDATION_WARNING)
  private String interfaceForegroundValidationWarning;

  public static final String SERIALIZED_NAME_ORY_BACKGROUND_DEFAULT = "ory-background-default";
  @SerializedName(SERIALIZED_NAME_ORY_BACKGROUND_DEFAULT)
  private String oryBackgroundDefault;

  public static final String SERIALIZED_NAME_ORY_BORDER_DEFAULT = "ory-border-default";
  @SerializedName(SERIALIZED_NAME_ORY_BORDER_DEFAULT)
  private String oryBorderDefault;

  public static final String SERIALIZED_NAME_ORY_FOREGROUND_DEFAULT = "ory-foreground-default";
  @SerializedName(SERIALIZED_NAME_ORY_FOREGROUND_DEFAULT)
  private String oryForegroundDefault;

  public static final String SERIALIZED_NAME_RADIO_BACKGROUND_CHECKED = "radio-background-checked";
  @SerializedName(SERIALIZED_NAME_RADIO_BACKGROUND_CHECKED)
  private String radioBackgroundChecked;

  public static final String SERIALIZED_NAME_RADIO_BACKGROUND_DEFAULT = "radio-background-default";
  @SerializedName(SERIALIZED_NAME_RADIO_BACKGROUND_DEFAULT)
  private String radioBackgroundDefault;

  public static final String SERIALIZED_NAME_RADIO_BORDER_CHECKED = "radio-border-checked";
  @SerializedName(SERIALIZED_NAME_RADIO_BORDER_CHECKED)
  private String radioBorderChecked;

  public static final String SERIALIZED_NAME_RADIO_BORDER_DEFAULT = "radio-border-default";
  @SerializedName(SERIALIZED_NAME_RADIO_BORDER_DEFAULT)
  private String radioBorderDefault;

  public static final String SERIALIZED_NAME_RADIO_FOREGROUND_CHECKED = "radio-foreground-checked";
  @SerializedName(SERIALIZED_NAME_RADIO_FOREGROUND_CHECKED)
  private String radioForegroundChecked;

  public static final String SERIALIZED_NAME_RADIO_FOREGROUND_DEFAULT = "radio-foreground-default";
  @SerializedName(SERIALIZED_NAME_RADIO_FOREGROUND_DEFAULT)
  private String radioForegroundDefault;

  public static final String SERIALIZED_NAME_TOGGLE_BACKGROUND_CHECKED = "toggle-background-checked";
  @SerializedName(SERIALIZED_NAME_TOGGLE_BACKGROUND_CHECKED)
  private String toggleBackgroundChecked;

  public static final String SERIALIZED_NAME_TOGGLE_BACKGROUND_DEFAULT = "toggle-background-default";
  @SerializedName(SERIALIZED_NAME_TOGGLE_BACKGROUND_DEFAULT)
  private String toggleBackgroundDefault;

  public static final String SERIALIZED_NAME_TOGGLE_BORDER_CHECKED = "toggle-border-checked";
  @SerializedName(SERIALIZED_NAME_TOGGLE_BORDER_CHECKED)
  private String toggleBorderChecked;

  public static final String SERIALIZED_NAME_TOGGLE_BORDER_DEFAULT = "toggle-border-default";
  @SerializedName(SERIALIZED_NAME_TOGGLE_BORDER_DEFAULT)
  private String toggleBorderDefault;

  public static final String SERIALIZED_NAME_TOGGLE_FOREGROUND_CHECKED = "toggle-foreground-checked";
  @SerializedName(SERIALIZED_NAME_TOGGLE_FOREGROUND_CHECKED)
  private String toggleForegroundChecked;

  public static final String SERIALIZED_NAME_TOGGLE_FOREGROUND_DEFAULT = "toggle-foreground-default";
  @SerializedName(SERIALIZED_NAME_TOGGLE_FOREGROUND_DEFAULT)
  private String toggleForegroundDefault;

  public static final String SERIALIZED_NAME_UI100 = "ui-100";
  @SerializedName(SERIALIZED_NAME_UI100)
  private String ui100;

  public static final String SERIALIZED_NAME_UI200 = "ui-200";
  @SerializedName(SERIALIZED_NAME_UI200)
  private String ui200;

  public static final String SERIALIZED_NAME_UI300 = "ui-300";
  @SerializedName(SERIALIZED_NAME_UI300)
  private String ui300;

  public static final String SERIALIZED_NAME_UI400 = "ui-400";
  @SerializedName(SERIALIZED_NAME_UI400)
  private String ui400;

  public static final String SERIALIZED_NAME_UI50 = "ui-50";
  @SerializedName(SERIALIZED_NAME_UI50)
  private String ui50;

  public static final String SERIALIZED_NAME_UI500 = "ui-500";
  @SerializedName(SERIALIZED_NAME_UI500)
  private String ui500;

  public static final String SERIALIZED_NAME_UI600 = "ui-600";
  @SerializedName(SERIALIZED_NAME_UI600)
  private String ui600;

  public static final String SERIALIZED_NAME_UI700 = "ui-700";
  @SerializedName(SERIALIZED_NAME_UI700)
  private String ui700;

  public static final String SERIALIZED_NAME_UI800 = "ui-800";
  @SerializedName(SERIALIZED_NAME_UI800)
  private String ui800;

  public static final String SERIALIZED_NAME_UI900 = "ui-900";
  @SerializedName(SERIALIZED_NAME_UI900)
  private String ui900;

  public static final String SERIALIZED_NAME_UI950 = "ui-950";
  @SerializedName(SERIALIZED_NAME_UI950)
  private String ui950;

  public static final String SERIALIZED_NAME_UI_BLACK = "ui-black";
  @SerializedName(SERIALIZED_NAME_UI_BLACK)
  private String uiBlack;

  public static final String SERIALIZED_NAME_UI_DANGER = "ui-danger";
  @SerializedName(SERIALIZED_NAME_UI_DANGER)
  private String uiDanger;

  public static final String SERIALIZED_NAME_UI_SUCCESS = "ui-success";
  @SerializedName(SERIALIZED_NAME_UI_SUCCESS)
  private String uiSuccess;

  public static final String SERIALIZED_NAME_UI_TRANSPARENT = "ui-transparent";
  @SerializedName(SERIALIZED_NAME_UI_TRANSPARENT)
  private String uiTransparent;

  public static final String SERIALIZED_NAME_UI_WARNING = "ui-warning";
  @SerializedName(SERIALIZED_NAME_UI_WARNING)
  private String uiWarning;

  public static final String SERIALIZED_NAME_UI_WHITE = "ui-white";
  @SerializedName(SERIALIZED_NAME_UI_WHITE)
  private String uiWhite;

  public AccountExperienceColors() {
  }

  public AccountExperienceColors brand100(String brand100) {
    this.brand100 = brand100;
    return this;
  }

  /**
   * Get brand100
   * @return brand100
   */
  @javax.annotation.Nullable
  public String getBrand100() {
    return brand100;
  }

  public void setBrand100(String brand100) {
    this.brand100 = brand100;
  }


  public AccountExperienceColors brand200(String brand200) {
    this.brand200 = brand200;
    return this;
  }

  /**
   * Get brand200
   * @return brand200
   */
  @javax.annotation.Nullable
  public String getBrand200() {
    return brand200;
  }

  public void setBrand200(String brand200) {
    this.brand200 = brand200;
  }


  public AccountExperienceColors brand300(String brand300) {
    this.brand300 = brand300;
    return this;
  }

  /**
   * Get brand300
   * @return brand300
   */
  @javax.annotation.Nullable
  public String getBrand300() {
    return brand300;
  }

  public void setBrand300(String brand300) {
    this.brand300 = brand300;
  }


  public AccountExperienceColors brand400(String brand400) {
    this.brand400 = brand400;
    return this;
  }

  /**
   * Get brand400
   * @return brand400
   */
  @javax.annotation.Nullable
  public String getBrand400() {
    return brand400;
  }

  public void setBrand400(String brand400) {
    this.brand400 = brand400;
  }


  public AccountExperienceColors brand50(String brand50) {
    this.brand50 = brand50;
    return this;
  }

  /**
   * Get brand50
   * @return brand50
   */
  @javax.annotation.Nullable
  public String getBrand50() {
    return brand50;
  }

  public void setBrand50(String brand50) {
    this.brand50 = brand50;
  }


  public AccountExperienceColors brand500(String brand500) {
    this.brand500 = brand500;
    return this;
  }

  /**
   * Get brand500
   * @return brand500
   */
  @javax.annotation.Nullable
  public String getBrand500() {
    return brand500;
  }

  public void setBrand500(String brand500) {
    this.brand500 = brand500;
  }


  public AccountExperienceColors brand600(String brand600) {
    this.brand600 = brand600;
    return this;
  }

  /**
   * Get brand600
   * @return brand600
   */
  @javax.annotation.Nullable
  public String getBrand600() {
    return brand600;
  }

  public void setBrand600(String brand600) {
    this.brand600 = brand600;
  }


  public AccountExperienceColors brand700(String brand700) {
    this.brand700 = brand700;
    return this;
  }

  /**
   * Get brand700
   * @return brand700
   */
  @javax.annotation.Nullable
  public String getBrand700() {
    return brand700;
  }

  public void setBrand700(String brand700) {
    this.brand700 = brand700;
  }


  public AccountExperienceColors brand800(String brand800) {
    this.brand800 = brand800;
    return this;
  }

  /**
   * Get brand800
   * @return brand800
   */
  @javax.annotation.Nullable
  public String getBrand800() {
    return brand800;
  }

  public void setBrand800(String brand800) {
    this.brand800 = brand800;
  }


  public AccountExperienceColors brand900(String brand900) {
    this.brand900 = brand900;
    return this;
  }

  /**
   * Get brand900
   * @return brand900
   */
  @javax.annotation.Nullable
  public String getBrand900() {
    return brand900;
  }

  public void setBrand900(String brand900) {
    this.brand900 = brand900;
  }


  public AccountExperienceColors brand950(String brand950) {
    this.brand950 = brand950;
    return this;
  }

  /**
   * Get brand950
   * @return brand950
   */
  @javax.annotation.Nullable
  public String getBrand950() {
    return brand950;
  }

  public void setBrand950(String brand950) {
    this.brand950 = brand950;
  }


  public AccountExperienceColors buttonIdentifierBackgroundDefault(String buttonIdentifierBackgroundDefault) {
    this.buttonIdentifierBackgroundDefault = buttonIdentifierBackgroundDefault;
    return this;
  }

  /**
   * Get buttonIdentifierBackgroundDefault
   * @return buttonIdentifierBackgroundDefault
   */
  @javax.annotation.Nullable
  public String getButtonIdentifierBackgroundDefault() {
    return buttonIdentifierBackgroundDefault;
  }

  public void setButtonIdentifierBackgroundDefault(String buttonIdentifierBackgroundDefault) {
    this.buttonIdentifierBackgroundDefault = buttonIdentifierBackgroundDefault;
  }


  public AccountExperienceColors buttonIdentifierBackgroundHover(String buttonIdentifierBackgroundHover) {
    this.buttonIdentifierBackgroundHover = buttonIdentifierBackgroundHover;
    return this;
  }

  /**
   * Get buttonIdentifierBackgroundHover
   * @return buttonIdentifierBackgroundHover
   */
  @javax.annotation.Nullable
  public String getButtonIdentifierBackgroundHover() {
    return buttonIdentifierBackgroundHover;
  }

  public void setButtonIdentifierBackgroundHover(String buttonIdentifierBackgroundHover) {
    this.buttonIdentifierBackgroundHover = buttonIdentifierBackgroundHover;
  }


  public AccountExperienceColors buttonIdentifierBorderBorderDefault(String buttonIdentifierBorderBorderDefault) {
    this.buttonIdentifierBorderBorderDefault = buttonIdentifierBorderBorderDefault;
    return this;
  }

  /**
   * Get buttonIdentifierBorderBorderDefault
   * @return buttonIdentifierBorderBorderDefault
   */
  @javax.annotation.Nullable
  public String getButtonIdentifierBorderBorderDefault() {
    return buttonIdentifierBorderBorderDefault;
  }

  public void setButtonIdentifierBorderBorderDefault(String buttonIdentifierBorderBorderDefault) {
    this.buttonIdentifierBorderBorderDefault = buttonIdentifierBorderBorderDefault;
  }


  public AccountExperienceColors buttonIdentifierBorderBorderHover(String buttonIdentifierBorderBorderHover) {
    this.buttonIdentifierBorderBorderHover = buttonIdentifierBorderBorderHover;
    return this;
  }

  /**
   * Get buttonIdentifierBorderBorderHover
   * @return buttonIdentifierBorderBorderHover
   */
  @javax.annotation.Nullable
  public String getButtonIdentifierBorderBorderHover() {
    return buttonIdentifierBorderBorderHover;
  }

  public void setButtonIdentifierBorderBorderHover(String buttonIdentifierBorderBorderHover) {
    this.buttonIdentifierBorderBorderHover = buttonIdentifierBorderBorderHover;
  }


  public AccountExperienceColors buttonIdentifierForegroundDefault(String buttonIdentifierForegroundDefault) {
    this.buttonIdentifierForegroundDefault = buttonIdentifierForegroundDefault;
    return this;
  }

  /**
   * Get buttonIdentifierForegroundDefault
   * @return buttonIdentifierForegroundDefault
   */
  @javax.annotation.Nullable
  public String getButtonIdentifierForegroundDefault() {
    return buttonIdentifierForegroundDefault;
  }

  public void setButtonIdentifierForegroundDefault(String buttonIdentifierForegroundDefault) {
    this.buttonIdentifierForegroundDefault = buttonIdentifierForegroundDefault;
  }


  public AccountExperienceColors buttonIdentifierForegroundHover(String buttonIdentifierForegroundHover) {
    this.buttonIdentifierForegroundHover = buttonIdentifierForegroundHover;
    return this;
  }

  /**
   * Get buttonIdentifierForegroundHover
   * @return buttonIdentifierForegroundHover
   */
  @javax.annotation.Nullable
  public String getButtonIdentifierForegroundHover() {
    return buttonIdentifierForegroundHover;
  }

  public void setButtonIdentifierForegroundHover(String buttonIdentifierForegroundHover) {
    this.buttonIdentifierForegroundHover = buttonIdentifierForegroundHover;
  }


  public AccountExperienceColors buttonLinkBrandBrand(String buttonLinkBrandBrand) {
    this.buttonLinkBrandBrand = buttonLinkBrandBrand;
    return this;
  }

  /**
   * Get buttonLinkBrandBrand
   * @return buttonLinkBrandBrand
   */
  @javax.annotation.Nullable
  public String getButtonLinkBrandBrand() {
    return buttonLinkBrandBrand;
  }

  public void setButtonLinkBrandBrand(String buttonLinkBrandBrand) {
    this.buttonLinkBrandBrand = buttonLinkBrandBrand;
  }


  public AccountExperienceColors buttonLinkBrandBrandHover(String buttonLinkBrandBrandHover) {
    this.buttonLinkBrandBrandHover = buttonLinkBrandBrandHover;
    return this;
  }

  /**
   * Get buttonLinkBrandBrandHover
   * @return buttonLinkBrandBrandHover
   */
  @javax.annotation.Nullable
  public String getButtonLinkBrandBrandHover() {
    return buttonLinkBrandBrandHover;
  }

  public void setButtonLinkBrandBrandHover(String buttonLinkBrandBrandHover) {
    this.buttonLinkBrandBrandHover = buttonLinkBrandBrandHover;
  }


  public AccountExperienceColors buttonLinkDefaultPrimary(String buttonLinkDefaultPrimary) {
    this.buttonLinkDefaultPrimary = buttonLinkDefaultPrimary;
    return this;
  }

  /**
   * Get buttonLinkDefaultPrimary
   * @return buttonLinkDefaultPrimary
   */
  @javax.annotation.Nullable
  public String getButtonLinkDefaultPrimary() {
    return buttonLinkDefaultPrimary;
  }

  public void setButtonLinkDefaultPrimary(String buttonLinkDefaultPrimary) {
    this.buttonLinkDefaultPrimary = buttonLinkDefaultPrimary;
  }


  public AccountExperienceColors buttonLinkDefaultPrimaryHover(String buttonLinkDefaultPrimaryHover) {
    this.buttonLinkDefaultPrimaryHover = buttonLinkDefaultPrimaryHover;
    return this;
  }

  /**
   * Get buttonLinkDefaultPrimaryHover
   * @return buttonLinkDefaultPrimaryHover
   */
  @javax.annotation.Nullable
  public String getButtonLinkDefaultPrimaryHover() {
    return buttonLinkDefaultPrimaryHover;
  }

  public void setButtonLinkDefaultPrimaryHover(String buttonLinkDefaultPrimaryHover) {
    this.buttonLinkDefaultPrimaryHover = buttonLinkDefaultPrimaryHover;
  }


  public AccountExperienceColors buttonLinkDefaultSecondary(String buttonLinkDefaultSecondary) {
    this.buttonLinkDefaultSecondary = buttonLinkDefaultSecondary;
    return this;
  }

  /**
   * Get buttonLinkDefaultSecondary
   * @return buttonLinkDefaultSecondary
   */
  @javax.annotation.Nullable
  public String getButtonLinkDefaultSecondary() {
    return buttonLinkDefaultSecondary;
  }

  public void setButtonLinkDefaultSecondary(String buttonLinkDefaultSecondary) {
    this.buttonLinkDefaultSecondary = buttonLinkDefaultSecondary;
  }


  public AccountExperienceColors buttonLinkDefaultSecondaryHover(String buttonLinkDefaultSecondaryHover) {
    this.buttonLinkDefaultSecondaryHover = buttonLinkDefaultSecondaryHover;
    return this;
  }

  /**
   * Get buttonLinkDefaultSecondaryHover
   * @return buttonLinkDefaultSecondaryHover
   */
  @javax.annotation.Nullable
  public String getButtonLinkDefaultSecondaryHover() {
    return buttonLinkDefaultSecondaryHover;
  }

  public void setButtonLinkDefaultSecondaryHover(String buttonLinkDefaultSecondaryHover) {
    this.buttonLinkDefaultSecondaryHover = buttonLinkDefaultSecondaryHover;
  }


  public AccountExperienceColors buttonLinkDisabledDisabled(String buttonLinkDisabledDisabled) {
    this.buttonLinkDisabledDisabled = buttonLinkDisabledDisabled;
    return this;
  }

  /**
   * Get buttonLinkDisabledDisabled
   * @return buttonLinkDisabledDisabled
   */
  @javax.annotation.Nullable
  public String getButtonLinkDisabledDisabled() {
    return buttonLinkDisabledDisabled;
  }

  public void setButtonLinkDisabledDisabled(String buttonLinkDisabledDisabled) {
    this.buttonLinkDisabledDisabled = buttonLinkDisabledDisabled;
  }


  public AccountExperienceColors buttonPrimaryBackgroundDefault(String buttonPrimaryBackgroundDefault) {
    this.buttonPrimaryBackgroundDefault = buttonPrimaryBackgroundDefault;
    return this;
  }

  /**
   * Get buttonPrimaryBackgroundDefault
   * @return buttonPrimaryBackgroundDefault
   */
  @javax.annotation.Nullable
  public String getButtonPrimaryBackgroundDefault() {
    return buttonPrimaryBackgroundDefault;
  }

  public void setButtonPrimaryBackgroundDefault(String buttonPrimaryBackgroundDefault) {
    this.buttonPrimaryBackgroundDefault = buttonPrimaryBackgroundDefault;
  }


  public AccountExperienceColors buttonPrimaryBackgroundDisabled(String buttonPrimaryBackgroundDisabled) {
    this.buttonPrimaryBackgroundDisabled = buttonPrimaryBackgroundDisabled;
    return this;
  }

  /**
   * Get buttonPrimaryBackgroundDisabled
   * @return buttonPrimaryBackgroundDisabled
   */
  @javax.annotation.Nullable
  public String getButtonPrimaryBackgroundDisabled() {
    return buttonPrimaryBackgroundDisabled;
  }

  public void setButtonPrimaryBackgroundDisabled(String buttonPrimaryBackgroundDisabled) {
    this.buttonPrimaryBackgroundDisabled = buttonPrimaryBackgroundDisabled;
  }


  public AccountExperienceColors buttonPrimaryBackgroundHover(String buttonPrimaryBackgroundHover) {
    this.buttonPrimaryBackgroundHover = buttonPrimaryBackgroundHover;
    return this;
  }

  /**
   * Get buttonPrimaryBackgroundHover
   * @return buttonPrimaryBackgroundHover
   */
  @javax.annotation.Nullable
  public String getButtonPrimaryBackgroundHover() {
    return buttonPrimaryBackgroundHover;
  }

  public void setButtonPrimaryBackgroundHover(String buttonPrimaryBackgroundHover) {
    this.buttonPrimaryBackgroundHover = buttonPrimaryBackgroundHover;
  }


  public AccountExperienceColors buttonPrimaryBorderDefault(String buttonPrimaryBorderDefault) {
    this.buttonPrimaryBorderDefault = buttonPrimaryBorderDefault;
    return this;
  }

  /**
   * Get buttonPrimaryBorderDefault
   * @return buttonPrimaryBorderDefault
   */
  @javax.annotation.Nullable
  public String getButtonPrimaryBorderDefault() {
    return buttonPrimaryBorderDefault;
  }

  public void setButtonPrimaryBorderDefault(String buttonPrimaryBorderDefault) {
    this.buttonPrimaryBorderDefault = buttonPrimaryBorderDefault;
  }


  public AccountExperienceColors buttonPrimaryBorderDisabled(String buttonPrimaryBorderDisabled) {
    this.buttonPrimaryBorderDisabled = buttonPrimaryBorderDisabled;
    return this;
  }

  /**
   * Get buttonPrimaryBorderDisabled
   * @return buttonPrimaryBorderDisabled
   */
  @javax.annotation.Nullable
  public String getButtonPrimaryBorderDisabled() {
    return buttonPrimaryBorderDisabled;
  }

  public void setButtonPrimaryBorderDisabled(String buttonPrimaryBorderDisabled) {
    this.buttonPrimaryBorderDisabled = buttonPrimaryBorderDisabled;
  }


  public AccountExperienceColors buttonPrimaryBorderHover(String buttonPrimaryBorderHover) {
    this.buttonPrimaryBorderHover = buttonPrimaryBorderHover;
    return this;
  }

  /**
   * Get buttonPrimaryBorderHover
   * @return buttonPrimaryBorderHover
   */
  @javax.annotation.Nullable
  public String getButtonPrimaryBorderHover() {
    return buttonPrimaryBorderHover;
  }

  public void setButtonPrimaryBorderHover(String buttonPrimaryBorderHover) {
    this.buttonPrimaryBorderHover = buttonPrimaryBorderHover;
  }


  public AccountExperienceColors buttonPrimaryForegroundDefault(String buttonPrimaryForegroundDefault) {
    this.buttonPrimaryForegroundDefault = buttonPrimaryForegroundDefault;
    return this;
  }

  /**
   * Get buttonPrimaryForegroundDefault
   * @return buttonPrimaryForegroundDefault
   */
  @javax.annotation.Nullable
  public String getButtonPrimaryForegroundDefault() {
    return buttonPrimaryForegroundDefault;
  }

  public void setButtonPrimaryForegroundDefault(String buttonPrimaryForegroundDefault) {
    this.buttonPrimaryForegroundDefault = buttonPrimaryForegroundDefault;
  }


  public AccountExperienceColors buttonPrimaryForegroundDisabled(String buttonPrimaryForegroundDisabled) {
    this.buttonPrimaryForegroundDisabled = buttonPrimaryForegroundDisabled;
    return this;
  }

  /**
   * Get buttonPrimaryForegroundDisabled
   * @return buttonPrimaryForegroundDisabled
   */
  @javax.annotation.Nullable
  public String getButtonPrimaryForegroundDisabled() {
    return buttonPrimaryForegroundDisabled;
  }

  public void setButtonPrimaryForegroundDisabled(String buttonPrimaryForegroundDisabled) {
    this.buttonPrimaryForegroundDisabled = buttonPrimaryForegroundDisabled;
  }


  public AccountExperienceColors buttonPrimaryForegroundHover(String buttonPrimaryForegroundHover) {
    this.buttonPrimaryForegroundHover = buttonPrimaryForegroundHover;
    return this;
  }

  /**
   * Get buttonPrimaryForegroundHover
   * @return buttonPrimaryForegroundHover
   */
  @javax.annotation.Nullable
  public String getButtonPrimaryForegroundHover() {
    return buttonPrimaryForegroundHover;
  }

  public void setButtonPrimaryForegroundHover(String buttonPrimaryForegroundHover) {
    this.buttonPrimaryForegroundHover = buttonPrimaryForegroundHover;
  }


  public AccountExperienceColors buttonSecondaryBackgroundDefault(String buttonSecondaryBackgroundDefault) {
    this.buttonSecondaryBackgroundDefault = buttonSecondaryBackgroundDefault;
    return this;
  }

  /**
   * Get buttonSecondaryBackgroundDefault
   * @return buttonSecondaryBackgroundDefault
   */
  @javax.annotation.Nullable
  public String getButtonSecondaryBackgroundDefault() {
    return buttonSecondaryBackgroundDefault;
  }

  public void setButtonSecondaryBackgroundDefault(String buttonSecondaryBackgroundDefault) {
    this.buttonSecondaryBackgroundDefault = buttonSecondaryBackgroundDefault;
  }


  public AccountExperienceColors buttonSecondaryBackgroundDisabled(String buttonSecondaryBackgroundDisabled) {
    this.buttonSecondaryBackgroundDisabled = buttonSecondaryBackgroundDisabled;
    return this;
  }

  /**
   * Get buttonSecondaryBackgroundDisabled
   * @return buttonSecondaryBackgroundDisabled
   */
  @javax.annotation.Nullable
  public String getButtonSecondaryBackgroundDisabled() {
    return buttonSecondaryBackgroundDisabled;
  }

  public void setButtonSecondaryBackgroundDisabled(String buttonSecondaryBackgroundDisabled) {
    this.buttonSecondaryBackgroundDisabled = buttonSecondaryBackgroundDisabled;
  }


  public AccountExperienceColors buttonSecondaryBackgroundHover(String buttonSecondaryBackgroundHover) {
    this.buttonSecondaryBackgroundHover = buttonSecondaryBackgroundHover;
    return this;
  }

  /**
   * Get buttonSecondaryBackgroundHover
   * @return buttonSecondaryBackgroundHover
   */
  @javax.annotation.Nullable
  public String getButtonSecondaryBackgroundHover() {
    return buttonSecondaryBackgroundHover;
  }

  public void setButtonSecondaryBackgroundHover(String buttonSecondaryBackgroundHover) {
    this.buttonSecondaryBackgroundHover = buttonSecondaryBackgroundHover;
  }


  public AccountExperienceColors buttonSecondaryBorderDefault(String buttonSecondaryBorderDefault) {
    this.buttonSecondaryBorderDefault = buttonSecondaryBorderDefault;
    return this;
  }

  /**
   * Get buttonSecondaryBorderDefault
   * @return buttonSecondaryBorderDefault
   */
  @javax.annotation.Nullable
  public String getButtonSecondaryBorderDefault() {
    return buttonSecondaryBorderDefault;
  }

  public void setButtonSecondaryBorderDefault(String buttonSecondaryBorderDefault) {
    this.buttonSecondaryBorderDefault = buttonSecondaryBorderDefault;
  }


  public AccountExperienceColors buttonSecondaryBorderDisabled(String buttonSecondaryBorderDisabled) {
    this.buttonSecondaryBorderDisabled = buttonSecondaryBorderDisabled;
    return this;
  }

  /**
   * Get buttonSecondaryBorderDisabled
   * @return buttonSecondaryBorderDisabled
   */
  @javax.annotation.Nullable
  public String getButtonSecondaryBorderDisabled() {
    return buttonSecondaryBorderDisabled;
  }

  public void setButtonSecondaryBorderDisabled(String buttonSecondaryBorderDisabled) {
    this.buttonSecondaryBorderDisabled = buttonSecondaryBorderDisabled;
  }


  public AccountExperienceColors buttonSecondaryBorderHover(String buttonSecondaryBorderHover) {
    this.buttonSecondaryBorderHover = buttonSecondaryBorderHover;
    return this;
  }

  /**
   * Get buttonSecondaryBorderHover
   * @return buttonSecondaryBorderHover
   */
  @javax.annotation.Nullable
  public String getButtonSecondaryBorderHover() {
    return buttonSecondaryBorderHover;
  }

  public void setButtonSecondaryBorderHover(String buttonSecondaryBorderHover) {
    this.buttonSecondaryBorderHover = buttonSecondaryBorderHover;
  }


  public AccountExperienceColors buttonSecondaryForegroundDefault(String buttonSecondaryForegroundDefault) {
    this.buttonSecondaryForegroundDefault = buttonSecondaryForegroundDefault;
    return this;
  }

  /**
   * Get buttonSecondaryForegroundDefault
   * @return buttonSecondaryForegroundDefault
   */
  @javax.annotation.Nullable
  public String getButtonSecondaryForegroundDefault() {
    return buttonSecondaryForegroundDefault;
  }

  public void setButtonSecondaryForegroundDefault(String buttonSecondaryForegroundDefault) {
    this.buttonSecondaryForegroundDefault = buttonSecondaryForegroundDefault;
  }


  public AccountExperienceColors buttonSecondaryForegroundDisabled(String buttonSecondaryForegroundDisabled) {
    this.buttonSecondaryForegroundDisabled = buttonSecondaryForegroundDisabled;
    return this;
  }

  /**
   * Get buttonSecondaryForegroundDisabled
   * @return buttonSecondaryForegroundDisabled
   */
  @javax.annotation.Nullable
  public String getButtonSecondaryForegroundDisabled() {
    return buttonSecondaryForegroundDisabled;
  }

  public void setButtonSecondaryForegroundDisabled(String buttonSecondaryForegroundDisabled) {
    this.buttonSecondaryForegroundDisabled = buttonSecondaryForegroundDisabled;
  }


  public AccountExperienceColors buttonSecondaryForegroundHover(String buttonSecondaryForegroundHover) {
    this.buttonSecondaryForegroundHover = buttonSecondaryForegroundHover;
    return this;
  }

  /**
   * Get buttonSecondaryForegroundHover
   * @return buttonSecondaryForegroundHover
   */
  @javax.annotation.Nullable
  public String getButtonSecondaryForegroundHover() {
    return buttonSecondaryForegroundHover;
  }

  public void setButtonSecondaryForegroundHover(String buttonSecondaryForegroundHover) {
    this.buttonSecondaryForegroundHover = buttonSecondaryForegroundHover;
  }


  public AccountExperienceColors buttonSocialBackgroundDefault(String buttonSocialBackgroundDefault) {
    this.buttonSocialBackgroundDefault = buttonSocialBackgroundDefault;
    return this;
  }

  /**
   * Get buttonSocialBackgroundDefault
   * @return buttonSocialBackgroundDefault
   */
  @javax.annotation.Nullable
  public String getButtonSocialBackgroundDefault() {
    return buttonSocialBackgroundDefault;
  }

  public void setButtonSocialBackgroundDefault(String buttonSocialBackgroundDefault) {
    this.buttonSocialBackgroundDefault = buttonSocialBackgroundDefault;
  }


  public AccountExperienceColors buttonSocialBackgroundDisabled(String buttonSocialBackgroundDisabled) {
    this.buttonSocialBackgroundDisabled = buttonSocialBackgroundDisabled;
    return this;
  }

  /**
   * Get buttonSocialBackgroundDisabled
   * @return buttonSocialBackgroundDisabled
   */
  @javax.annotation.Nullable
  public String getButtonSocialBackgroundDisabled() {
    return buttonSocialBackgroundDisabled;
  }

  public void setButtonSocialBackgroundDisabled(String buttonSocialBackgroundDisabled) {
    this.buttonSocialBackgroundDisabled = buttonSocialBackgroundDisabled;
  }


  public AccountExperienceColors buttonSocialBackgroundGenericProvider(String buttonSocialBackgroundGenericProvider) {
    this.buttonSocialBackgroundGenericProvider = buttonSocialBackgroundGenericProvider;
    return this;
  }

  /**
   * Get buttonSocialBackgroundGenericProvider
   * @return buttonSocialBackgroundGenericProvider
   */
  @javax.annotation.Nullable
  public String getButtonSocialBackgroundGenericProvider() {
    return buttonSocialBackgroundGenericProvider;
  }

  public void setButtonSocialBackgroundGenericProvider(String buttonSocialBackgroundGenericProvider) {
    this.buttonSocialBackgroundGenericProvider = buttonSocialBackgroundGenericProvider;
  }


  public AccountExperienceColors buttonSocialBackgroundHover(String buttonSocialBackgroundHover) {
    this.buttonSocialBackgroundHover = buttonSocialBackgroundHover;
    return this;
  }

  /**
   * Get buttonSocialBackgroundHover
   * @return buttonSocialBackgroundHover
   */
  @javax.annotation.Nullable
  public String getButtonSocialBackgroundHover() {
    return buttonSocialBackgroundHover;
  }

  public void setButtonSocialBackgroundHover(String buttonSocialBackgroundHover) {
    this.buttonSocialBackgroundHover = buttonSocialBackgroundHover;
  }


  public AccountExperienceColors buttonSocialBorderDefault(String buttonSocialBorderDefault) {
    this.buttonSocialBorderDefault = buttonSocialBorderDefault;
    return this;
  }

  /**
   * Get buttonSocialBorderDefault
   * @return buttonSocialBorderDefault
   */
  @javax.annotation.Nullable
  public String getButtonSocialBorderDefault() {
    return buttonSocialBorderDefault;
  }

  public void setButtonSocialBorderDefault(String buttonSocialBorderDefault) {
    this.buttonSocialBorderDefault = buttonSocialBorderDefault;
  }


  public AccountExperienceColors buttonSocialBorderDisabled(String buttonSocialBorderDisabled) {
    this.buttonSocialBorderDisabled = buttonSocialBorderDisabled;
    return this;
  }

  /**
   * Get buttonSocialBorderDisabled
   * @return buttonSocialBorderDisabled
   */
  @javax.annotation.Nullable
  public String getButtonSocialBorderDisabled() {
    return buttonSocialBorderDisabled;
  }

  public void setButtonSocialBorderDisabled(String buttonSocialBorderDisabled) {
    this.buttonSocialBorderDisabled = buttonSocialBorderDisabled;
  }


  public AccountExperienceColors buttonSocialBorderGenericProvider(String buttonSocialBorderGenericProvider) {
    this.buttonSocialBorderGenericProvider = buttonSocialBorderGenericProvider;
    return this;
  }

  /**
   * Get buttonSocialBorderGenericProvider
   * @return buttonSocialBorderGenericProvider
   */
  @javax.annotation.Nullable
  public String getButtonSocialBorderGenericProvider() {
    return buttonSocialBorderGenericProvider;
  }

  public void setButtonSocialBorderGenericProvider(String buttonSocialBorderGenericProvider) {
    this.buttonSocialBorderGenericProvider = buttonSocialBorderGenericProvider;
  }


  public AccountExperienceColors buttonSocialBorderHover(String buttonSocialBorderHover) {
    this.buttonSocialBorderHover = buttonSocialBorderHover;
    return this;
  }

  /**
   * Get buttonSocialBorderHover
   * @return buttonSocialBorderHover
   */
  @javax.annotation.Nullable
  public String getButtonSocialBorderHover() {
    return buttonSocialBorderHover;
  }

  public void setButtonSocialBorderHover(String buttonSocialBorderHover) {
    this.buttonSocialBorderHover = buttonSocialBorderHover;
  }


  public AccountExperienceColors buttonSocialForegroundDefault(String buttonSocialForegroundDefault) {
    this.buttonSocialForegroundDefault = buttonSocialForegroundDefault;
    return this;
  }

  /**
   * Get buttonSocialForegroundDefault
   * @return buttonSocialForegroundDefault
   */
  @javax.annotation.Nullable
  public String getButtonSocialForegroundDefault() {
    return buttonSocialForegroundDefault;
  }

  public void setButtonSocialForegroundDefault(String buttonSocialForegroundDefault) {
    this.buttonSocialForegroundDefault = buttonSocialForegroundDefault;
  }


  public AccountExperienceColors buttonSocialForegroundDisabled(String buttonSocialForegroundDisabled) {
    this.buttonSocialForegroundDisabled = buttonSocialForegroundDisabled;
    return this;
  }

  /**
   * Get buttonSocialForegroundDisabled
   * @return buttonSocialForegroundDisabled
   */
  @javax.annotation.Nullable
  public String getButtonSocialForegroundDisabled() {
    return buttonSocialForegroundDisabled;
  }

  public void setButtonSocialForegroundDisabled(String buttonSocialForegroundDisabled) {
    this.buttonSocialForegroundDisabled = buttonSocialForegroundDisabled;
  }


  public AccountExperienceColors buttonSocialForegroundGenericProvider(String buttonSocialForegroundGenericProvider) {
    this.buttonSocialForegroundGenericProvider = buttonSocialForegroundGenericProvider;
    return this;
  }

  /**
   * Get buttonSocialForegroundGenericProvider
   * @return buttonSocialForegroundGenericProvider
   */
  @javax.annotation.Nullable
  public String getButtonSocialForegroundGenericProvider() {
    return buttonSocialForegroundGenericProvider;
  }

  public void setButtonSocialForegroundGenericProvider(String buttonSocialForegroundGenericProvider) {
    this.buttonSocialForegroundGenericProvider = buttonSocialForegroundGenericProvider;
  }


  public AccountExperienceColors buttonSocialForegroundHover(String buttonSocialForegroundHover) {
    this.buttonSocialForegroundHover = buttonSocialForegroundHover;
    return this;
  }

  /**
   * Get buttonSocialForegroundHover
   * @return buttonSocialForegroundHover
   */
  @javax.annotation.Nullable
  public String getButtonSocialForegroundHover() {
    return buttonSocialForegroundHover;
  }

  public void setButtonSocialForegroundHover(String buttonSocialForegroundHover) {
    this.buttonSocialForegroundHover = buttonSocialForegroundHover;
  }


  public AccountExperienceColors checkboxBackgroundChecked(String checkboxBackgroundChecked) {
    this.checkboxBackgroundChecked = checkboxBackgroundChecked;
    return this;
  }

  /**
   * Get checkboxBackgroundChecked
   * @return checkboxBackgroundChecked
   */
  @javax.annotation.Nullable
  public String getCheckboxBackgroundChecked() {
    return checkboxBackgroundChecked;
  }

  public void setCheckboxBackgroundChecked(String checkboxBackgroundChecked) {
    this.checkboxBackgroundChecked = checkboxBackgroundChecked;
  }


  public AccountExperienceColors checkboxBackgroundDefault(String checkboxBackgroundDefault) {
    this.checkboxBackgroundDefault = checkboxBackgroundDefault;
    return this;
  }

  /**
   * Get checkboxBackgroundDefault
   * @return checkboxBackgroundDefault
   */
  @javax.annotation.Nullable
  public String getCheckboxBackgroundDefault() {
    return checkboxBackgroundDefault;
  }

  public void setCheckboxBackgroundDefault(String checkboxBackgroundDefault) {
    this.checkboxBackgroundDefault = checkboxBackgroundDefault;
  }


  public AccountExperienceColors checkboxBorderCheckboxBorderChecked(String checkboxBorderCheckboxBorderChecked) {
    this.checkboxBorderCheckboxBorderChecked = checkboxBorderCheckboxBorderChecked;
    return this;
  }

  /**
   * Get checkboxBorderCheckboxBorderChecked
   * @return checkboxBorderCheckboxBorderChecked
   */
  @javax.annotation.Nullable
  public String getCheckboxBorderCheckboxBorderChecked() {
    return checkboxBorderCheckboxBorderChecked;
  }

  public void setCheckboxBorderCheckboxBorderChecked(String checkboxBorderCheckboxBorderChecked) {
    this.checkboxBorderCheckboxBorderChecked = checkboxBorderCheckboxBorderChecked;
  }


  public AccountExperienceColors checkboxBorderCheckboxBorderDefault(String checkboxBorderCheckboxBorderDefault) {
    this.checkboxBorderCheckboxBorderDefault = checkboxBorderCheckboxBorderDefault;
    return this;
  }

  /**
   * Get checkboxBorderCheckboxBorderDefault
   * @return checkboxBorderCheckboxBorderDefault
   */
  @javax.annotation.Nullable
  public String getCheckboxBorderCheckboxBorderDefault() {
    return checkboxBorderCheckboxBorderDefault;
  }

  public void setCheckboxBorderCheckboxBorderDefault(String checkboxBorderCheckboxBorderDefault) {
    this.checkboxBorderCheckboxBorderDefault = checkboxBorderCheckboxBorderDefault;
  }


  public AccountExperienceColors checkboxForegroundChecked(String checkboxForegroundChecked) {
    this.checkboxForegroundChecked = checkboxForegroundChecked;
    return this;
  }

  /**
   * Get checkboxForegroundChecked
   * @return checkboxForegroundChecked
   */
  @javax.annotation.Nullable
  public String getCheckboxForegroundChecked() {
    return checkboxForegroundChecked;
  }

  public void setCheckboxForegroundChecked(String checkboxForegroundChecked) {
    this.checkboxForegroundChecked = checkboxForegroundChecked;
  }


  public AccountExperienceColors checkboxForegroundDefault(String checkboxForegroundDefault) {
    this.checkboxForegroundDefault = checkboxForegroundDefault;
    return this;
  }

  /**
   * Get checkboxForegroundDefault
   * @return checkboxForegroundDefault
   */
  @javax.annotation.Nullable
  public String getCheckboxForegroundDefault() {
    return checkboxForegroundDefault;
  }

  public void setCheckboxForegroundDefault(String checkboxForegroundDefault) {
    this.checkboxForegroundDefault = checkboxForegroundDefault;
  }


  public AccountExperienceColors formBackgroundDefault(String formBackgroundDefault) {
    this.formBackgroundDefault = formBackgroundDefault;
    return this;
  }

  /**
   * Get formBackgroundDefault
   * @return formBackgroundDefault
   */
  @javax.annotation.Nullable
  public String getFormBackgroundDefault() {
    return formBackgroundDefault;
  }

  public void setFormBackgroundDefault(String formBackgroundDefault) {
    this.formBackgroundDefault = formBackgroundDefault;
  }


  public AccountExperienceColors formBorderDefault(String formBorderDefault) {
    this.formBorderDefault = formBorderDefault;
    return this;
  }

  /**
   * Get formBorderDefault
   * @return formBorderDefault
   */
  @javax.annotation.Nullable
  public String getFormBorderDefault() {
    return formBorderDefault;
  }

  public void setFormBorderDefault(String formBorderDefault) {
    this.formBorderDefault = formBorderDefault;
  }


  public AccountExperienceColors inputBackgroundDefault(String inputBackgroundDefault) {
    this.inputBackgroundDefault = inputBackgroundDefault;
    return this;
  }

  /**
   * Get inputBackgroundDefault
   * @return inputBackgroundDefault
   */
  @javax.annotation.Nullable
  public String getInputBackgroundDefault() {
    return inputBackgroundDefault;
  }

  public void setInputBackgroundDefault(String inputBackgroundDefault) {
    this.inputBackgroundDefault = inputBackgroundDefault;
  }


  public AccountExperienceColors inputBackgroundDisabled(String inputBackgroundDisabled) {
    this.inputBackgroundDisabled = inputBackgroundDisabled;
    return this;
  }

  /**
   * Get inputBackgroundDisabled
   * @return inputBackgroundDisabled
   */
  @javax.annotation.Nullable
  public String getInputBackgroundDisabled() {
    return inputBackgroundDisabled;
  }

  public void setInputBackgroundDisabled(String inputBackgroundDisabled) {
    this.inputBackgroundDisabled = inputBackgroundDisabled;
  }


  public AccountExperienceColors inputBackgroundHover(String inputBackgroundHover) {
    this.inputBackgroundHover = inputBackgroundHover;
    return this;
  }

  /**
   * Get inputBackgroundHover
   * @return inputBackgroundHover
   */
  @javax.annotation.Nullable
  public String getInputBackgroundHover() {
    return inputBackgroundHover;
  }

  public void setInputBackgroundHover(String inputBackgroundHover) {
    this.inputBackgroundHover = inputBackgroundHover;
  }


  public AccountExperienceColors inputBorderDefault(String inputBorderDefault) {
    this.inputBorderDefault = inputBorderDefault;
    return this;
  }

  /**
   * Get inputBorderDefault
   * @return inputBorderDefault
   */
  @javax.annotation.Nullable
  public String getInputBorderDefault() {
    return inputBorderDefault;
  }

  public void setInputBorderDefault(String inputBorderDefault) {
    this.inputBorderDefault = inputBorderDefault;
  }


  public AccountExperienceColors inputBorderDisabled(String inputBorderDisabled) {
    this.inputBorderDisabled = inputBorderDisabled;
    return this;
  }

  /**
   * Get inputBorderDisabled
   * @return inputBorderDisabled
   */
  @javax.annotation.Nullable
  public String getInputBorderDisabled() {
    return inputBorderDisabled;
  }

  public void setInputBorderDisabled(String inputBorderDisabled) {
    this.inputBorderDisabled = inputBorderDisabled;
  }


  public AccountExperienceColors inputBorderFocus(String inputBorderFocus) {
    this.inputBorderFocus = inputBorderFocus;
    return this;
  }

  /**
   * Get inputBorderFocus
   * @return inputBorderFocus
   */
  @javax.annotation.Nullable
  public String getInputBorderFocus() {
    return inputBorderFocus;
  }

  public void setInputBorderFocus(String inputBorderFocus) {
    this.inputBorderFocus = inputBorderFocus;
  }


  public AccountExperienceColors inputBorderHover(String inputBorderHover) {
    this.inputBorderHover = inputBorderHover;
    return this;
  }

  /**
   * Get inputBorderHover
   * @return inputBorderHover
   */
  @javax.annotation.Nullable
  public String getInputBorderHover() {
    return inputBorderHover;
  }

  public void setInputBorderHover(String inputBorderHover) {
    this.inputBorderHover = inputBorderHover;
  }


  public AccountExperienceColors inputForegroundDisabled(String inputForegroundDisabled) {
    this.inputForegroundDisabled = inputForegroundDisabled;
    return this;
  }

  /**
   * Get inputForegroundDisabled
   * @return inputForegroundDisabled
   */
  @javax.annotation.Nullable
  public String getInputForegroundDisabled() {
    return inputForegroundDisabled;
  }

  public void setInputForegroundDisabled(String inputForegroundDisabled) {
    this.inputForegroundDisabled = inputForegroundDisabled;
  }


  public AccountExperienceColors inputForegroundPrimary(String inputForegroundPrimary) {
    this.inputForegroundPrimary = inputForegroundPrimary;
    return this;
  }

  /**
   * Get inputForegroundPrimary
   * @return inputForegroundPrimary
   */
  @javax.annotation.Nullable
  public String getInputForegroundPrimary() {
    return inputForegroundPrimary;
  }

  public void setInputForegroundPrimary(String inputForegroundPrimary) {
    this.inputForegroundPrimary = inputForegroundPrimary;
  }


  public AccountExperienceColors inputForegroundSecondary(String inputForegroundSecondary) {
    this.inputForegroundSecondary = inputForegroundSecondary;
    return this;
  }

  /**
   * Get inputForegroundSecondary
   * @return inputForegroundSecondary
   */
  @javax.annotation.Nullable
  public String getInputForegroundSecondary() {
    return inputForegroundSecondary;
  }

  public void setInputForegroundSecondary(String inputForegroundSecondary) {
    this.inputForegroundSecondary = inputForegroundSecondary;
  }


  public AccountExperienceColors inputForegroundTertiary(String inputForegroundTertiary) {
    this.inputForegroundTertiary = inputForegroundTertiary;
    return this;
  }

  /**
   * Get inputForegroundTertiary
   * @return inputForegroundTertiary
   */
  @javax.annotation.Nullable
  public String getInputForegroundTertiary() {
    return inputForegroundTertiary;
  }

  public void setInputForegroundTertiary(String inputForegroundTertiary) {
    this.inputForegroundTertiary = inputForegroundTertiary;
  }


  public AccountExperienceColors interfaceBackgroundBrandPrimary(String interfaceBackgroundBrandPrimary) {
    this.interfaceBackgroundBrandPrimary = interfaceBackgroundBrandPrimary;
    return this;
  }

  /**
   * Get interfaceBackgroundBrandPrimary
   * @return interfaceBackgroundBrandPrimary
   */
  @javax.annotation.Nullable
  public String getInterfaceBackgroundBrandPrimary() {
    return interfaceBackgroundBrandPrimary;
  }

  public void setInterfaceBackgroundBrandPrimary(String interfaceBackgroundBrandPrimary) {
    this.interfaceBackgroundBrandPrimary = interfaceBackgroundBrandPrimary;
  }


  public AccountExperienceColors interfaceBackgroundBrandPrimaryHover(String interfaceBackgroundBrandPrimaryHover) {
    this.interfaceBackgroundBrandPrimaryHover = interfaceBackgroundBrandPrimaryHover;
    return this;
  }

  /**
   * Get interfaceBackgroundBrandPrimaryHover
   * @return interfaceBackgroundBrandPrimaryHover
   */
  @javax.annotation.Nullable
  public String getInterfaceBackgroundBrandPrimaryHover() {
    return interfaceBackgroundBrandPrimaryHover;
  }

  public void setInterfaceBackgroundBrandPrimaryHover(String interfaceBackgroundBrandPrimaryHover) {
    this.interfaceBackgroundBrandPrimaryHover = interfaceBackgroundBrandPrimaryHover;
  }


  public AccountExperienceColors interfaceBackgroundBrandSecondary(String interfaceBackgroundBrandSecondary) {
    this.interfaceBackgroundBrandSecondary = interfaceBackgroundBrandSecondary;
    return this;
  }

  /**
   * Get interfaceBackgroundBrandSecondary
   * @return interfaceBackgroundBrandSecondary
   */
  @javax.annotation.Nullable
  public String getInterfaceBackgroundBrandSecondary() {
    return interfaceBackgroundBrandSecondary;
  }

  public void setInterfaceBackgroundBrandSecondary(String interfaceBackgroundBrandSecondary) {
    this.interfaceBackgroundBrandSecondary = interfaceBackgroundBrandSecondary;
  }


  public AccountExperienceColors interfaceBackgroundBrandSecondaryHover(String interfaceBackgroundBrandSecondaryHover) {
    this.interfaceBackgroundBrandSecondaryHover = interfaceBackgroundBrandSecondaryHover;
    return this;
  }

  /**
   * Get interfaceBackgroundBrandSecondaryHover
   * @return interfaceBackgroundBrandSecondaryHover
   */
  @javax.annotation.Nullable
  public String getInterfaceBackgroundBrandSecondaryHover() {
    return interfaceBackgroundBrandSecondaryHover;
  }

  public void setInterfaceBackgroundBrandSecondaryHover(String interfaceBackgroundBrandSecondaryHover) {
    this.interfaceBackgroundBrandSecondaryHover = interfaceBackgroundBrandSecondaryHover;
  }


  public AccountExperienceColors interfaceBackgroundDefaultInverted(String interfaceBackgroundDefaultInverted) {
    this.interfaceBackgroundDefaultInverted = interfaceBackgroundDefaultInverted;
    return this;
  }

  /**
   * Get interfaceBackgroundDefaultInverted
   * @return interfaceBackgroundDefaultInverted
   */
  @javax.annotation.Nullable
  public String getInterfaceBackgroundDefaultInverted() {
    return interfaceBackgroundDefaultInverted;
  }

  public void setInterfaceBackgroundDefaultInverted(String interfaceBackgroundDefaultInverted) {
    this.interfaceBackgroundDefaultInverted = interfaceBackgroundDefaultInverted;
  }


  public AccountExperienceColors interfaceBackgroundDefaultInvertedHover(String interfaceBackgroundDefaultInvertedHover) {
    this.interfaceBackgroundDefaultInvertedHover = interfaceBackgroundDefaultInvertedHover;
    return this;
  }

  /**
   * Get interfaceBackgroundDefaultInvertedHover
   * @return interfaceBackgroundDefaultInvertedHover
   */
  @javax.annotation.Nullable
  public String getInterfaceBackgroundDefaultInvertedHover() {
    return interfaceBackgroundDefaultInvertedHover;
  }

  public void setInterfaceBackgroundDefaultInvertedHover(String interfaceBackgroundDefaultInvertedHover) {
    this.interfaceBackgroundDefaultInvertedHover = interfaceBackgroundDefaultInvertedHover;
  }


  public AccountExperienceColors interfaceBackgroundDefaultNone(String interfaceBackgroundDefaultNone) {
    this.interfaceBackgroundDefaultNone = interfaceBackgroundDefaultNone;
    return this;
  }

  /**
   * Get interfaceBackgroundDefaultNone
   * @return interfaceBackgroundDefaultNone
   */
  @javax.annotation.Nullable
  public String getInterfaceBackgroundDefaultNone() {
    return interfaceBackgroundDefaultNone;
  }

  public void setInterfaceBackgroundDefaultNone(String interfaceBackgroundDefaultNone) {
    this.interfaceBackgroundDefaultNone = interfaceBackgroundDefaultNone;
  }


  public AccountExperienceColors interfaceBackgroundDefaultPrimary(String interfaceBackgroundDefaultPrimary) {
    this.interfaceBackgroundDefaultPrimary = interfaceBackgroundDefaultPrimary;
    return this;
  }

  /**
   * Get interfaceBackgroundDefaultPrimary
   * @return interfaceBackgroundDefaultPrimary
   */
  @javax.annotation.Nullable
  public String getInterfaceBackgroundDefaultPrimary() {
    return interfaceBackgroundDefaultPrimary;
  }

  public void setInterfaceBackgroundDefaultPrimary(String interfaceBackgroundDefaultPrimary) {
    this.interfaceBackgroundDefaultPrimary = interfaceBackgroundDefaultPrimary;
  }


  public AccountExperienceColors interfaceBackgroundDefaultPrimaryHover(String interfaceBackgroundDefaultPrimaryHover) {
    this.interfaceBackgroundDefaultPrimaryHover = interfaceBackgroundDefaultPrimaryHover;
    return this;
  }

  /**
   * Get interfaceBackgroundDefaultPrimaryHover
   * @return interfaceBackgroundDefaultPrimaryHover
   */
  @javax.annotation.Nullable
  public String getInterfaceBackgroundDefaultPrimaryHover() {
    return interfaceBackgroundDefaultPrimaryHover;
  }

  public void setInterfaceBackgroundDefaultPrimaryHover(String interfaceBackgroundDefaultPrimaryHover) {
    this.interfaceBackgroundDefaultPrimaryHover = interfaceBackgroundDefaultPrimaryHover;
  }


  public AccountExperienceColors interfaceBackgroundDefaultSecondary(String interfaceBackgroundDefaultSecondary) {
    this.interfaceBackgroundDefaultSecondary = interfaceBackgroundDefaultSecondary;
    return this;
  }

  /**
   * Get interfaceBackgroundDefaultSecondary
   * @return interfaceBackgroundDefaultSecondary
   */
  @javax.annotation.Nullable
  public String getInterfaceBackgroundDefaultSecondary() {
    return interfaceBackgroundDefaultSecondary;
  }

  public void setInterfaceBackgroundDefaultSecondary(String interfaceBackgroundDefaultSecondary) {
    this.interfaceBackgroundDefaultSecondary = interfaceBackgroundDefaultSecondary;
  }


  public AccountExperienceColors interfaceBackgroundDefaultSecondaryHover(String interfaceBackgroundDefaultSecondaryHover) {
    this.interfaceBackgroundDefaultSecondaryHover = interfaceBackgroundDefaultSecondaryHover;
    return this;
  }

  /**
   * Get interfaceBackgroundDefaultSecondaryHover
   * @return interfaceBackgroundDefaultSecondaryHover
   */
  @javax.annotation.Nullable
  public String getInterfaceBackgroundDefaultSecondaryHover() {
    return interfaceBackgroundDefaultSecondaryHover;
  }

  public void setInterfaceBackgroundDefaultSecondaryHover(String interfaceBackgroundDefaultSecondaryHover) {
    this.interfaceBackgroundDefaultSecondaryHover = interfaceBackgroundDefaultSecondaryHover;
  }


  public AccountExperienceColors interfaceBackgroundDefaultTertiary(String interfaceBackgroundDefaultTertiary) {
    this.interfaceBackgroundDefaultTertiary = interfaceBackgroundDefaultTertiary;
    return this;
  }

  /**
   * Get interfaceBackgroundDefaultTertiary
   * @return interfaceBackgroundDefaultTertiary
   */
  @javax.annotation.Nullable
  public String getInterfaceBackgroundDefaultTertiary() {
    return interfaceBackgroundDefaultTertiary;
  }

  public void setInterfaceBackgroundDefaultTertiary(String interfaceBackgroundDefaultTertiary) {
    this.interfaceBackgroundDefaultTertiary = interfaceBackgroundDefaultTertiary;
  }


  public AccountExperienceColors interfaceBackgroundDefaultTertiaryHover(String interfaceBackgroundDefaultTertiaryHover) {
    this.interfaceBackgroundDefaultTertiaryHover = interfaceBackgroundDefaultTertiaryHover;
    return this;
  }

  /**
   * Get interfaceBackgroundDefaultTertiaryHover
   * @return interfaceBackgroundDefaultTertiaryHover
   */
  @javax.annotation.Nullable
  public String getInterfaceBackgroundDefaultTertiaryHover() {
    return interfaceBackgroundDefaultTertiaryHover;
  }

  public void setInterfaceBackgroundDefaultTertiaryHover(String interfaceBackgroundDefaultTertiaryHover) {
    this.interfaceBackgroundDefaultTertiaryHover = interfaceBackgroundDefaultTertiaryHover;
  }


  public AccountExperienceColors interfaceBackgroundDisabledDisabled(String interfaceBackgroundDisabledDisabled) {
    this.interfaceBackgroundDisabledDisabled = interfaceBackgroundDisabledDisabled;
    return this;
  }

  /**
   * Get interfaceBackgroundDisabledDisabled
   * @return interfaceBackgroundDisabledDisabled
   */
  @javax.annotation.Nullable
  public String getInterfaceBackgroundDisabledDisabled() {
    return interfaceBackgroundDisabledDisabled;
  }

  public void setInterfaceBackgroundDisabledDisabled(String interfaceBackgroundDisabledDisabled) {
    this.interfaceBackgroundDisabledDisabled = interfaceBackgroundDisabledDisabled;
  }


  public AccountExperienceColors interfaceBackgroundValidationDanger(String interfaceBackgroundValidationDanger) {
    this.interfaceBackgroundValidationDanger = interfaceBackgroundValidationDanger;
    return this;
  }

  /**
   * Get interfaceBackgroundValidationDanger
   * @return interfaceBackgroundValidationDanger
   */
  @javax.annotation.Nullable
  public String getInterfaceBackgroundValidationDanger() {
    return interfaceBackgroundValidationDanger;
  }

  public void setInterfaceBackgroundValidationDanger(String interfaceBackgroundValidationDanger) {
    this.interfaceBackgroundValidationDanger = interfaceBackgroundValidationDanger;
  }


  public AccountExperienceColors interfaceBackgroundValidationSuccess(String interfaceBackgroundValidationSuccess) {
    this.interfaceBackgroundValidationSuccess = interfaceBackgroundValidationSuccess;
    return this;
  }

  /**
   * Get interfaceBackgroundValidationSuccess
   * @return interfaceBackgroundValidationSuccess
   */
  @javax.annotation.Nullable
  public String getInterfaceBackgroundValidationSuccess() {
    return interfaceBackgroundValidationSuccess;
  }

  public void setInterfaceBackgroundValidationSuccess(String interfaceBackgroundValidationSuccess) {
    this.interfaceBackgroundValidationSuccess = interfaceBackgroundValidationSuccess;
  }


  public AccountExperienceColors interfaceBackgroundValidationWarning(String interfaceBackgroundValidationWarning) {
    this.interfaceBackgroundValidationWarning = interfaceBackgroundValidationWarning;
    return this;
  }

  /**
   * Get interfaceBackgroundValidationWarning
   * @return interfaceBackgroundValidationWarning
   */
  @javax.annotation.Nullable
  public String getInterfaceBackgroundValidationWarning() {
    return interfaceBackgroundValidationWarning;
  }

  public void setInterfaceBackgroundValidationWarning(String interfaceBackgroundValidationWarning) {
    this.interfaceBackgroundValidationWarning = interfaceBackgroundValidationWarning;
  }


  public AccountExperienceColors interfaceBorderBrandBrand(String interfaceBorderBrandBrand) {
    this.interfaceBorderBrandBrand = interfaceBorderBrandBrand;
    return this;
  }

  /**
   * Get interfaceBorderBrandBrand
   * @return interfaceBorderBrandBrand
   */
  @javax.annotation.Nullable
  public String getInterfaceBorderBrandBrand() {
    return interfaceBorderBrandBrand;
  }

  public void setInterfaceBorderBrandBrand(String interfaceBorderBrandBrand) {
    this.interfaceBorderBrandBrand = interfaceBorderBrandBrand;
  }


  public AccountExperienceColors interfaceBorderDefaultInverted(String interfaceBorderDefaultInverted) {
    this.interfaceBorderDefaultInverted = interfaceBorderDefaultInverted;
    return this;
  }

  /**
   * Get interfaceBorderDefaultInverted
   * @return interfaceBorderDefaultInverted
   */
  @javax.annotation.Nullable
  public String getInterfaceBorderDefaultInverted() {
    return interfaceBorderDefaultInverted;
  }

  public void setInterfaceBorderDefaultInverted(String interfaceBorderDefaultInverted) {
    this.interfaceBorderDefaultInverted = interfaceBorderDefaultInverted;
  }


  public AccountExperienceColors interfaceBorderDefaultNone(String interfaceBorderDefaultNone) {
    this.interfaceBorderDefaultNone = interfaceBorderDefaultNone;
    return this;
  }

  /**
   * Get interfaceBorderDefaultNone
   * @return interfaceBorderDefaultNone
   */
  @javax.annotation.Nullable
  public String getInterfaceBorderDefaultNone() {
    return interfaceBorderDefaultNone;
  }

  public void setInterfaceBorderDefaultNone(String interfaceBorderDefaultNone) {
    this.interfaceBorderDefaultNone = interfaceBorderDefaultNone;
  }


  public AccountExperienceColors interfaceBorderDefaultPrimary(String interfaceBorderDefaultPrimary) {
    this.interfaceBorderDefaultPrimary = interfaceBorderDefaultPrimary;
    return this;
  }

  /**
   * Get interfaceBorderDefaultPrimary
   * @return interfaceBorderDefaultPrimary
   */
  @javax.annotation.Nullable
  public String getInterfaceBorderDefaultPrimary() {
    return interfaceBorderDefaultPrimary;
  }

  public void setInterfaceBorderDefaultPrimary(String interfaceBorderDefaultPrimary) {
    this.interfaceBorderDefaultPrimary = interfaceBorderDefaultPrimary;
  }


  public AccountExperienceColors interfaceBorderDisabledDisabled(String interfaceBorderDisabledDisabled) {
    this.interfaceBorderDisabledDisabled = interfaceBorderDisabledDisabled;
    return this;
  }

  /**
   * Get interfaceBorderDisabledDisabled
   * @return interfaceBorderDisabledDisabled
   */
  @javax.annotation.Nullable
  public String getInterfaceBorderDisabledDisabled() {
    return interfaceBorderDisabledDisabled;
  }

  public void setInterfaceBorderDisabledDisabled(String interfaceBorderDisabledDisabled) {
    this.interfaceBorderDisabledDisabled = interfaceBorderDisabledDisabled;
  }


  public AccountExperienceColors interfaceBorderValidationDanger(String interfaceBorderValidationDanger) {
    this.interfaceBorderValidationDanger = interfaceBorderValidationDanger;
    return this;
  }

  /**
   * Get interfaceBorderValidationDanger
   * @return interfaceBorderValidationDanger
   */
  @javax.annotation.Nullable
  public String getInterfaceBorderValidationDanger() {
    return interfaceBorderValidationDanger;
  }

  public void setInterfaceBorderValidationDanger(String interfaceBorderValidationDanger) {
    this.interfaceBorderValidationDanger = interfaceBorderValidationDanger;
  }


  public AccountExperienceColors interfaceBorderValidationSuccess(String interfaceBorderValidationSuccess) {
    this.interfaceBorderValidationSuccess = interfaceBorderValidationSuccess;
    return this;
  }

  /**
   * Get interfaceBorderValidationSuccess
   * @return interfaceBorderValidationSuccess
   */
  @javax.annotation.Nullable
  public String getInterfaceBorderValidationSuccess() {
    return interfaceBorderValidationSuccess;
  }

  public void setInterfaceBorderValidationSuccess(String interfaceBorderValidationSuccess) {
    this.interfaceBorderValidationSuccess = interfaceBorderValidationSuccess;
  }


  public AccountExperienceColors interfaceBorderValidationWarning(String interfaceBorderValidationWarning) {
    this.interfaceBorderValidationWarning = interfaceBorderValidationWarning;
    return this;
  }

  /**
   * Get interfaceBorderValidationWarning
   * @return interfaceBorderValidationWarning
   */
  @javax.annotation.Nullable
  public String getInterfaceBorderValidationWarning() {
    return interfaceBorderValidationWarning;
  }

  public void setInterfaceBorderValidationWarning(String interfaceBorderValidationWarning) {
    this.interfaceBorderValidationWarning = interfaceBorderValidationWarning;
  }


  public AccountExperienceColors interfaceForegroundBrandOnPrimary(String interfaceForegroundBrandOnPrimary) {
    this.interfaceForegroundBrandOnPrimary = interfaceForegroundBrandOnPrimary;
    return this;
  }

  /**
   * Get interfaceForegroundBrandOnPrimary
   * @return interfaceForegroundBrandOnPrimary
   */
  @javax.annotation.Nullable
  public String getInterfaceForegroundBrandOnPrimary() {
    return interfaceForegroundBrandOnPrimary;
  }

  public void setInterfaceForegroundBrandOnPrimary(String interfaceForegroundBrandOnPrimary) {
    this.interfaceForegroundBrandOnPrimary = interfaceForegroundBrandOnPrimary;
  }


  public AccountExperienceColors interfaceForegroundBrandOnSecondary(String interfaceForegroundBrandOnSecondary) {
    this.interfaceForegroundBrandOnSecondary = interfaceForegroundBrandOnSecondary;
    return this;
  }

  /**
   * Get interfaceForegroundBrandOnSecondary
   * @return interfaceForegroundBrandOnSecondary
   */
  @javax.annotation.Nullable
  public String getInterfaceForegroundBrandOnSecondary() {
    return interfaceForegroundBrandOnSecondary;
  }

  public void setInterfaceForegroundBrandOnSecondary(String interfaceForegroundBrandOnSecondary) {
    this.interfaceForegroundBrandOnSecondary = interfaceForegroundBrandOnSecondary;
  }


  public AccountExperienceColors interfaceForegroundBrandPrimary(String interfaceForegroundBrandPrimary) {
    this.interfaceForegroundBrandPrimary = interfaceForegroundBrandPrimary;
    return this;
  }

  /**
   * Get interfaceForegroundBrandPrimary
   * @return interfaceForegroundBrandPrimary
   */
  @javax.annotation.Nullable
  public String getInterfaceForegroundBrandPrimary() {
    return interfaceForegroundBrandPrimary;
  }

  public void setInterfaceForegroundBrandPrimary(String interfaceForegroundBrandPrimary) {
    this.interfaceForegroundBrandPrimary = interfaceForegroundBrandPrimary;
  }


  public AccountExperienceColors interfaceForegroundBrandSecondary(String interfaceForegroundBrandSecondary) {
    this.interfaceForegroundBrandSecondary = interfaceForegroundBrandSecondary;
    return this;
  }

  /**
   * Get interfaceForegroundBrandSecondary
   * @return interfaceForegroundBrandSecondary
   */
  @javax.annotation.Nullable
  public String getInterfaceForegroundBrandSecondary() {
    return interfaceForegroundBrandSecondary;
  }

  public void setInterfaceForegroundBrandSecondary(String interfaceForegroundBrandSecondary) {
    this.interfaceForegroundBrandSecondary = interfaceForegroundBrandSecondary;
  }


  public AccountExperienceColors interfaceForegroundDefaultInverted(String interfaceForegroundDefaultInverted) {
    this.interfaceForegroundDefaultInverted = interfaceForegroundDefaultInverted;
    return this;
  }

  /**
   * Get interfaceForegroundDefaultInverted
   * @return interfaceForegroundDefaultInverted
   */
  @javax.annotation.Nullable
  public String getInterfaceForegroundDefaultInverted() {
    return interfaceForegroundDefaultInverted;
  }

  public void setInterfaceForegroundDefaultInverted(String interfaceForegroundDefaultInverted) {
    this.interfaceForegroundDefaultInverted = interfaceForegroundDefaultInverted;
  }


  public AccountExperienceColors interfaceForegroundDefaultPrimary(String interfaceForegroundDefaultPrimary) {
    this.interfaceForegroundDefaultPrimary = interfaceForegroundDefaultPrimary;
    return this;
  }

  /**
   * Get interfaceForegroundDefaultPrimary
   * @return interfaceForegroundDefaultPrimary
   */
  @javax.annotation.Nullable
  public String getInterfaceForegroundDefaultPrimary() {
    return interfaceForegroundDefaultPrimary;
  }

  public void setInterfaceForegroundDefaultPrimary(String interfaceForegroundDefaultPrimary) {
    this.interfaceForegroundDefaultPrimary = interfaceForegroundDefaultPrimary;
  }


  public AccountExperienceColors interfaceForegroundDefaultSecondary(String interfaceForegroundDefaultSecondary) {
    this.interfaceForegroundDefaultSecondary = interfaceForegroundDefaultSecondary;
    return this;
  }

  /**
   * Get interfaceForegroundDefaultSecondary
   * @return interfaceForegroundDefaultSecondary
   */
  @javax.annotation.Nullable
  public String getInterfaceForegroundDefaultSecondary() {
    return interfaceForegroundDefaultSecondary;
  }

  public void setInterfaceForegroundDefaultSecondary(String interfaceForegroundDefaultSecondary) {
    this.interfaceForegroundDefaultSecondary = interfaceForegroundDefaultSecondary;
  }


  public AccountExperienceColors interfaceForegroundDefaultTertiary(String interfaceForegroundDefaultTertiary) {
    this.interfaceForegroundDefaultTertiary = interfaceForegroundDefaultTertiary;
    return this;
  }

  /**
   * Get interfaceForegroundDefaultTertiary
   * @return interfaceForegroundDefaultTertiary
   */
  @javax.annotation.Nullable
  public String getInterfaceForegroundDefaultTertiary() {
    return interfaceForegroundDefaultTertiary;
  }

  public void setInterfaceForegroundDefaultTertiary(String interfaceForegroundDefaultTertiary) {
    this.interfaceForegroundDefaultTertiary = interfaceForegroundDefaultTertiary;
  }


  public AccountExperienceColors interfaceForegroundDisabledDisabled(String interfaceForegroundDisabledDisabled) {
    this.interfaceForegroundDisabledDisabled = interfaceForegroundDisabledDisabled;
    return this;
  }

  /**
   * Get interfaceForegroundDisabledDisabled
   * @return interfaceForegroundDisabledDisabled
   */
  @javax.annotation.Nullable
  public String getInterfaceForegroundDisabledDisabled() {
    return interfaceForegroundDisabledDisabled;
  }

  public void setInterfaceForegroundDisabledDisabled(String interfaceForegroundDisabledDisabled) {
    this.interfaceForegroundDisabledDisabled = interfaceForegroundDisabledDisabled;
  }


  public AccountExperienceColors interfaceForegroundDisabledOnDisabled(String interfaceForegroundDisabledOnDisabled) {
    this.interfaceForegroundDisabledOnDisabled = interfaceForegroundDisabledOnDisabled;
    return this;
  }

  /**
   * Get interfaceForegroundDisabledOnDisabled
   * @return interfaceForegroundDisabledOnDisabled
   */
  @javax.annotation.Nullable
  public String getInterfaceForegroundDisabledOnDisabled() {
    return interfaceForegroundDisabledOnDisabled;
  }

  public void setInterfaceForegroundDisabledOnDisabled(String interfaceForegroundDisabledOnDisabled) {
    this.interfaceForegroundDisabledOnDisabled = interfaceForegroundDisabledOnDisabled;
  }


  public AccountExperienceColors interfaceForegroundValidationDanger(String interfaceForegroundValidationDanger) {
    this.interfaceForegroundValidationDanger = interfaceForegroundValidationDanger;
    return this;
  }

  /**
   * Get interfaceForegroundValidationDanger
   * @return interfaceForegroundValidationDanger
   */
  @javax.annotation.Nullable
  public String getInterfaceForegroundValidationDanger() {
    return interfaceForegroundValidationDanger;
  }

  public void setInterfaceForegroundValidationDanger(String interfaceForegroundValidationDanger) {
    this.interfaceForegroundValidationDanger = interfaceForegroundValidationDanger;
  }


  public AccountExperienceColors interfaceForegroundValidationSuccess(String interfaceForegroundValidationSuccess) {
    this.interfaceForegroundValidationSuccess = interfaceForegroundValidationSuccess;
    return this;
  }

  /**
   * Get interfaceForegroundValidationSuccess
   * @return interfaceForegroundValidationSuccess
   */
  @javax.annotation.Nullable
  public String getInterfaceForegroundValidationSuccess() {
    return interfaceForegroundValidationSuccess;
  }

  public void setInterfaceForegroundValidationSuccess(String interfaceForegroundValidationSuccess) {
    this.interfaceForegroundValidationSuccess = interfaceForegroundValidationSuccess;
  }


  public AccountExperienceColors interfaceForegroundValidationWarning(String interfaceForegroundValidationWarning) {
    this.interfaceForegroundValidationWarning = interfaceForegroundValidationWarning;
    return this;
  }

  /**
   * Get interfaceForegroundValidationWarning
   * @return interfaceForegroundValidationWarning
   */
  @javax.annotation.Nullable
  public String getInterfaceForegroundValidationWarning() {
    return interfaceForegroundValidationWarning;
  }

  public void setInterfaceForegroundValidationWarning(String interfaceForegroundValidationWarning) {
    this.interfaceForegroundValidationWarning = interfaceForegroundValidationWarning;
  }


  public AccountExperienceColors oryBackgroundDefault(String oryBackgroundDefault) {
    this.oryBackgroundDefault = oryBackgroundDefault;
    return this;
  }

  /**
   * Get oryBackgroundDefault
   * @return oryBackgroundDefault
   */
  @javax.annotation.Nullable
  public String getOryBackgroundDefault() {
    return oryBackgroundDefault;
  }

  public void setOryBackgroundDefault(String oryBackgroundDefault) {
    this.oryBackgroundDefault = oryBackgroundDefault;
  }


  public AccountExperienceColors oryBorderDefault(String oryBorderDefault) {
    this.oryBorderDefault = oryBorderDefault;
    return this;
  }

  /**
   * Get oryBorderDefault
   * @return oryBorderDefault
   */
  @javax.annotation.Nullable
  public String getOryBorderDefault() {
    return oryBorderDefault;
  }

  public void setOryBorderDefault(String oryBorderDefault) {
    this.oryBorderDefault = oryBorderDefault;
  }


  public AccountExperienceColors oryForegroundDefault(String oryForegroundDefault) {
    this.oryForegroundDefault = oryForegroundDefault;
    return this;
  }

  /**
   * Get oryForegroundDefault
   * @return oryForegroundDefault
   */
  @javax.annotation.Nullable
  public String getOryForegroundDefault() {
    return oryForegroundDefault;
  }

  public void setOryForegroundDefault(String oryForegroundDefault) {
    this.oryForegroundDefault = oryForegroundDefault;
  }


  public AccountExperienceColors radioBackgroundChecked(String radioBackgroundChecked) {
    this.radioBackgroundChecked = radioBackgroundChecked;
    return this;
  }

  /**
   * Get radioBackgroundChecked
   * @return radioBackgroundChecked
   */
  @javax.annotation.Nullable
  public String getRadioBackgroundChecked() {
    return radioBackgroundChecked;
  }

  public void setRadioBackgroundChecked(String radioBackgroundChecked) {
    this.radioBackgroundChecked = radioBackgroundChecked;
  }


  public AccountExperienceColors radioBackgroundDefault(String radioBackgroundDefault) {
    this.radioBackgroundDefault = radioBackgroundDefault;
    return this;
  }

  /**
   * Get radioBackgroundDefault
   * @return radioBackgroundDefault
   */
  @javax.annotation.Nullable
  public String getRadioBackgroundDefault() {
    return radioBackgroundDefault;
  }

  public void setRadioBackgroundDefault(String radioBackgroundDefault) {
    this.radioBackgroundDefault = radioBackgroundDefault;
  }


  public AccountExperienceColors radioBorderChecked(String radioBorderChecked) {
    this.radioBorderChecked = radioBorderChecked;
    return this;
  }

  /**
   * Get radioBorderChecked
   * @return radioBorderChecked
   */
  @javax.annotation.Nullable
  public String getRadioBorderChecked() {
    return radioBorderChecked;
  }

  public void setRadioBorderChecked(String radioBorderChecked) {
    this.radioBorderChecked = radioBorderChecked;
  }


  public AccountExperienceColors radioBorderDefault(String radioBorderDefault) {
    this.radioBorderDefault = radioBorderDefault;
    return this;
  }

  /**
   * Get radioBorderDefault
   * @return radioBorderDefault
   */
  @javax.annotation.Nullable
  public String getRadioBorderDefault() {
    return radioBorderDefault;
  }

  public void setRadioBorderDefault(String radioBorderDefault) {
    this.radioBorderDefault = radioBorderDefault;
  }


  public AccountExperienceColors radioForegroundChecked(String radioForegroundChecked) {
    this.radioForegroundChecked = radioForegroundChecked;
    return this;
  }

  /**
   * Get radioForegroundChecked
   * @return radioForegroundChecked
   */
  @javax.annotation.Nullable
  public String getRadioForegroundChecked() {
    return radioForegroundChecked;
  }

  public void setRadioForegroundChecked(String radioForegroundChecked) {
    this.radioForegroundChecked = radioForegroundChecked;
  }


  public AccountExperienceColors radioForegroundDefault(String radioForegroundDefault) {
    this.radioForegroundDefault = radioForegroundDefault;
    return this;
  }

  /**
   * Get radioForegroundDefault
   * @return radioForegroundDefault
   */
  @javax.annotation.Nullable
  public String getRadioForegroundDefault() {
    return radioForegroundDefault;
  }

  public void setRadioForegroundDefault(String radioForegroundDefault) {
    this.radioForegroundDefault = radioForegroundDefault;
  }


  public AccountExperienceColors toggleBackgroundChecked(String toggleBackgroundChecked) {
    this.toggleBackgroundChecked = toggleBackgroundChecked;
    return this;
  }

  /**
   * Get toggleBackgroundChecked
   * @return toggleBackgroundChecked
   */
  @javax.annotation.Nullable
  public String getToggleBackgroundChecked() {
    return toggleBackgroundChecked;
  }

  public void setToggleBackgroundChecked(String toggleBackgroundChecked) {
    this.toggleBackgroundChecked = toggleBackgroundChecked;
  }


  public AccountExperienceColors toggleBackgroundDefault(String toggleBackgroundDefault) {
    this.toggleBackgroundDefault = toggleBackgroundDefault;
    return this;
  }

  /**
   * Get toggleBackgroundDefault
   * @return toggleBackgroundDefault
   */
  @javax.annotation.Nullable
  public String getToggleBackgroundDefault() {
    return toggleBackgroundDefault;
  }

  public void setToggleBackgroundDefault(String toggleBackgroundDefault) {
    this.toggleBackgroundDefault = toggleBackgroundDefault;
  }


  public AccountExperienceColors toggleBorderChecked(String toggleBorderChecked) {
    this.toggleBorderChecked = toggleBorderChecked;
    return this;
  }

  /**
   * Get toggleBorderChecked
   * @return toggleBorderChecked
   */
  @javax.annotation.Nullable
  public String getToggleBorderChecked() {
    return toggleBorderChecked;
  }

  public void setToggleBorderChecked(String toggleBorderChecked) {
    this.toggleBorderChecked = toggleBorderChecked;
  }


  public AccountExperienceColors toggleBorderDefault(String toggleBorderDefault) {
    this.toggleBorderDefault = toggleBorderDefault;
    return this;
  }

  /**
   * Get toggleBorderDefault
   * @return toggleBorderDefault
   */
  @javax.annotation.Nullable
  public String getToggleBorderDefault() {
    return toggleBorderDefault;
  }

  public void setToggleBorderDefault(String toggleBorderDefault) {
    this.toggleBorderDefault = toggleBorderDefault;
  }


  public AccountExperienceColors toggleForegroundChecked(String toggleForegroundChecked) {
    this.toggleForegroundChecked = toggleForegroundChecked;
    return this;
  }

  /**
   * Get toggleForegroundChecked
   * @return toggleForegroundChecked
   */
  @javax.annotation.Nullable
  public String getToggleForegroundChecked() {
    return toggleForegroundChecked;
  }

  public void setToggleForegroundChecked(String toggleForegroundChecked) {
    this.toggleForegroundChecked = toggleForegroundChecked;
  }


  public AccountExperienceColors toggleForegroundDefault(String toggleForegroundDefault) {
    this.toggleForegroundDefault = toggleForegroundDefault;
    return this;
  }

  /**
   * Get toggleForegroundDefault
   * @return toggleForegroundDefault
   */
  @javax.annotation.Nullable
  public String getToggleForegroundDefault() {
    return toggleForegroundDefault;
  }

  public void setToggleForegroundDefault(String toggleForegroundDefault) {
    this.toggleForegroundDefault = toggleForegroundDefault;
  }


  public AccountExperienceColors ui100(String ui100) {
    this.ui100 = ui100;
    return this;
  }

  /**
   * Get ui100
   * @return ui100
   */
  @javax.annotation.Nullable
  public String getUi100() {
    return ui100;
  }

  public void setUi100(String ui100) {
    this.ui100 = ui100;
  }


  public AccountExperienceColors ui200(String ui200) {
    this.ui200 = ui200;
    return this;
  }

  /**
   * Get ui200
   * @return ui200
   */
  @javax.annotation.Nullable
  public String getUi200() {
    return ui200;
  }

  public void setUi200(String ui200) {
    this.ui200 = ui200;
  }


  public AccountExperienceColors ui300(String ui300) {
    this.ui300 = ui300;
    return this;
  }

  /**
   * Get ui300
   * @return ui300
   */
  @javax.annotation.Nullable
  public String getUi300() {
    return ui300;
  }

  public void setUi300(String ui300) {
    this.ui300 = ui300;
  }


  public AccountExperienceColors ui400(String ui400) {
    this.ui400 = ui400;
    return this;
  }

  /**
   * Get ui400
   * @return ui400
   */
  @javax.annotation.Nullable
  public String getUi400() {
    return ui400;
  }

  public void setUi400(String ui400) {
    this.ui400 = ui400;
  }


  public AccountExperienceColors ui50(String ui50) {
    this.ui50 = ui50;
    return this;
  }

  /**
   * Get ui50
   * @return ui50
   */
  @javax.annotation.Nullable
  public String getUi50() {
    return ui50;
  }

  public void setUi50(String ui50) {
    this.ui50 = ui50;
  }


  public AccountExperienceColors ui500(String ui500) {
    this.ui500 = ui500;
    return this;
  }

  /**
   * Get ui500
   * @return ui500
   */
  @javax.annotation.Nullable
  public String getUi500() {
    return ui500;
  }

  public void setUi500(String ui500) {
    this.ui500 = ui500;
  }


  public AccountExperienceColors ui600(String ui600) {
    this.ui600 = ui600;
    return this;
  }

  /**
   * Get ui600
   * @return ui600
   */
  @javax.annotation.Nullable
  public String getUi600() {
    return ui600;
  }

  public void setUi600(String ui600) {
    this.ui600 = ui600;
  }


  public AccountExperienceColors ui700(String ui700) {
    this.ui700 = ui700;
    return this;
  }

  /**
   * Get ui700
   * @return ui700
   */
  @javax.annotation.Nullable
  public String getUi700() {
    return ui700;
  }

  public void setUi700(String ui700) {
    this.ui700 = ui700;
  }


  public AccountExperienceColors ui800(String ui800) {
    this.ui800 = ui800;
    return this;
  }

  /**
   * Get ui800
   * @return ui800
   */
  @javax.annotation.Nullable
  public String getUi800() {
    return ui800;
  }

  public void setUi800(String ui800) {
    this.ui800 = ui800;
  }


  public AccountExperienceColors ui900(String ui900) {
    this.ui900 = ui900;
    return this;
  }

  /**
   * Get ui900
   * @return ui900
   */
  @javax.annotation.Nullable
  public String getUi900() {
    return ui900;
  }

  public void setUi900(String ui900) {
    this.ui900 = ui900;
  }


  public AccountExperienceColors ui950(String ui950) {
    this.ui950 = ui950;
    return this;
  }

  /**
   * Get ui950
   * @return ui950
   */
  @javax.annotation.Nullable
  public String getUi950() {
    return ui950;
  }

  public void setUi950(String ui950) {
    this.ui950 = ui950;
  }


  public AccountExperienceColors uiBlack(String uiBlack) {
    this.uiBlack = uiBlack;
    return this;
  }

  /**
   * Get uiBlack
   * @return uiBlack
   */
  @javax.annotation.Nullable
  public String getUiBlack() {
    return uiBlack;
  }

  public void setUiBlack(String uiBlack) {
    this.uiBlack = uiBlack;
  }


  public AccountExperienceColors uiDanger(String uiDanger) {
    this.uiDanger = uiDanger;
    return this;
  }

  /**
   * Get uiDanger
   * @return uiDanger
   */
  @javax.annotation.Nullable
  public String getUiDanger() {
    return uiDanger;
  }

  public void setUiDanger(String uiDanger) {
    this.uiDanger = uiDanger;
  }


  public AccountExperienceColors uiSuccess(String uiSuccess) {
    this.uiSuccess = uiSuccess;
    return this;
  }

  /**
   * Get uiSuccess
   * @return uiSuccess
   */
  @javax.annotation.Nullable
  public String getUiSuccess() {
    return uiSuccess;
  }

  public void setUiSuccess(String uiSuccess) {
    this.uiSuccess = uiSuccess;
  }


  public AccountExperienceColors uiTransparent(String uiTransparent) {
    this.uiTransparent = uiTransparent;
    return this;
  }

  /**
   * Get uiTransparent
   * @return uiTransparent
   */
  @javax.annotation.Nullable
  public String getUiTransparent() {
    return uiTransparent;
  }

  public void setUiTransparent(String uiTransparent) {
    this.uiTransparent = uiTransparent;
  }


  public AccountExperienceColors uiWarning(String uiWarning) {
    this.uiWarning = uiWarning;
    return this;
  }

  /**
   * Get uiWarning
   * @return uiWarning
   */
  @javax.annotation.Nullable
  public String getUiWarning() {
    return uiWarning;
  }

  public void setUiWarning(String uiWarning) {
    this.uiWarning = uiWarning;
  }


  public AccountExperienceColors uiWhite(String uiWhite) {
    this.uiWhite = uiWhite;
    return this;
  }

  /**
   * Get uiWhite
   * @return uiWhite
   */
  @javax.annotation.Nullable
  public String getUiWhite() {
    return uiWhite;
  }

  public void setUiWhite(String uiWhite) {
    this.uiWhite = uiWhite;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the AccountExperienceColors instance itself
   */
  public AccountExperienceColors putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountExperienceColors accountExperienceColors = (AccountExperienceColors) o;
    return Objects.equals(this.brand100, accountExperienceColors.brand100) &&
        Objects.equals(this.brand200, accountExperienceColors.brand200) &&
        Objects.equals(this.brand300, accountExperienceColors.brand300) &&
        Objects.equals(this.brand400, accountExperienceColors.brand400) &&
        Objects.equals(this.brand50, accountExperienceColors.brand50) &&
        Objects.equals(this.brand500, accountExperienceColors.brand500) &&
        Objects.equals(this.brand600, accountExperienceColors.brand600) &&
        Objects.equals(this.brand700, accountExperienceColors.brand700) &&
        Objects.equals(this.brand800, accountExperienceColors.brand800) &&
        Objects.equals(this.brand900, accountExperienceColors.brand900) &&
        Objects.equals(this.brand950, accountExperienceColors.brand950) &&
        Objects.equals(this.buttonIdentifierBackgroundDefault, accountExperienceColors.buttonIdentifierBackgroundDefault) &&
        Objects.equals(this.buttonIdentifierBackgroundHover, accountExperienceColors.buttonIdentifierBackgroundHover) &&
        Objects.equals(this.buttonIdentifierBorderBorderDefault, accountExperienceColors.buttonIdentifierBorderBorderDefault) &&
        Objects.equals(this.buttonIdentifierBorderBorderHover, accountExperienceColors.buttonIdentifierBorderBorderHover) &&
        Objects.equals(this.buttonIdentifierForegroundDefault, accountExperienceColors.buttonIdentifierForegroundDefault) &&
        Objects.equals(this.buttonIdentifierForegroundHover, accountExperienceColors.buttonIdentifierForegroundHover) &&
        Objects.equals(this.buttonLinkBrandBrand, accountExperienceColors.buttonLinkBrandBrand) &&
        Objects.equals(this.buttonLinkBrandBrandHover, accountExperienceColors.buttonLinkBrandBrandHover) &&
        Objects.equals(this.buttonLinkDefaultPrimary, accountExperienceColors.buttonLinkDefaultPrimary) &&
        Objects.equals(this.buttonLinkDefaultPrimaryHover, accountExperienceColors.buttonLinkDefaultPrimaryHover) &&
        Objects.equals(this.buttonLinkDefaultSecondary, accountExperienceColors.buttonLinkDefaultSecondary) &&
        Objects.equals(this.buttonLinkDefaultSecondaryHover, accountExperienceColors.buttonLinkDefaultSecondaryHover) &&
        Objects.equals(this.buttonLinkDisabledDisabled, accountExperienceColors.buttonLinkDisabledDisabled) &&
        Objects.equals(this.buttonPrimaryBackgroundDefault, accountExperienceColors.buttonPrimaryBackgroundDefault) &&
        Objects.equals(this.buttonPrimaryBackgroundDisabled, accountExperienceColors.buttonPrimaryBackgroundDisabled) &&
        Objects.equals(this.buttonPrimaryBackgroundHover, accountExperienceColors.buttonPrimaryBackgroundHover) &&
        Objects.equals(this.buttonPrimaryBorderDefault, accountExperienceColors.buttonPrimaryBorderDefault) &&
        Objects.equals(this.buttonPrimaryBorderDisabled, accountExperienceColors.buttonPrimaryBorderDisabled) &&
        Objects.equals(this.buttonPrimaryBorderHover, accountExperienceColors.buttonPrimaryBorderHover) &&
        Objects.equals(this.buttonPrimaryForegroundDefault, accountExperienceColors.buttonPrimaryForegroundDefault) &&
        Objects.equals(this.buttonPrimaryForegroundDisabled, accountExperienceColors.buttonPrimaryForegroundDisabled) &&
        Objects.equals(this.buttonPrimaryForegroundHover, accountExperienceColors.buttonPrimaryForegroundHover) &&
        Objects.equals(this.buttonSecondaryBackgroundDefault, accountExperienceColors.buttonSecondaryBackgroundDefault) &&
        Objects.equals(this.buttonSecondaryBackgroundDisabled, accountExperienceColors.buttonSecondaryBackgroundDisabled) &&
        Objects.equals(this.buttonSecondaryBackgroundHover, accountExperienceColors.buttonSecondaryBackgroundHover) &&
        Objects.equals(this.buttonSecondaryBorderDefault, accountExperienceColors.buttonSecondaryBorderDefault) &&
        Objects.equals(this.buttonSecondaryBorderDisabled, accountExperienceColors.buttonSecondaryBorderDisabled) &&
        Objects.equals(this.buttonSecondaryBorderHover, accountExperienceColors.buttonSecondaryBorderHover) &&
        Objects.equals(this.buttonSecondaryForegroundDefault, accountExperienceColors.buttonSecondaryForegroundDefault) &&
        Objects.equals(this.buttonSecondaryForegroundDisabled, accountExperienceColors.buttonSecondaryForegroundDisabled) &&
        Objects.equals(this.buttonSecondaryForegroundHover, accountExperienceColors.buttonSecondaryForegroundHover) &&
        Objects.equals(this.buttonSocialBackgroundDefault, accountExperienceColors.buttonSocialBackgroundDefault) &&
        Objects.equals(this.buttonSocialBackgroundDisabled, accountExperienceColors.buttonSocialBackgroundDisabled) &&
        Objects.equals(this.buttonSocialBackgroundGenericProvider, accountExperienceColors.buttonSocialBackgroundGenericProvider) &&
        Objects.equals(this.buttonSocialBackgroundHover, accountExperienceColors.buttonSocialBackgroundHover) &&
        Objects.equals(this.buttonSocialBorderDefault, accountExperienceColors.buttonSocialBorderDefault) &&
        Objects.equals(this.buttonSocialBorderDisabled, accountExperienceColors.buttonSocialBorderDisabled) &&
        Objects.equals(this.buttonSocialBorderGenericProvider, accountExperienceColors.buttonSocialBorderGenericProvider) &&
        Objects.equals(this.buttonSocialBorderHover, accountExperienceColors.buttonSocialBorderHover) &&
        Objects.equals(this.buttonSocialForegroundDefault, accountExperienceColors.buttonSocialForegroundDefault) &&
        Objects.equals(this.buttonSocialForegroundDisabled, accountExperienceColors.buttonSocialForegroundDisabled) &&
        Objects.equals(this.buttonSocialForegroundGenericProvider, accountExperienceColors.buttonSocialForegroundGenericProvider) &&
        Objects.equals(this.buttonSocialForegroundHover, accountExperienceColors.buttonSocialForegroundHover) &&
        Objects.equals(this.checkboxBackgroundChecked, accountExperienceColors.checkboxBackgroundChecked) &&
        Objects.equals(this.checkboxBackgroundDefault, accountExperienceColors.checkboxBackgroundDefault) &&
        Objects.equals(this.checkboxBorderCheckboxBorderChecked, accountExperienceColors.checkboxBorderCheckboxBorderChecked) &&
        Objects.equals(this.checkboxBorderCheckboxBorderDefault, accountExperienceColors.checkboxBorderCheckboxBorderDefault) &&
        Objects.equals(this.checkboxForegroundChecked, accountExperienceColors.checkboxForegroundChecked) &&
        Objects.equals(this.checkboxForegroundDefault, accountExperienceColors.checkboxForegroundDefault) &&
        Objects.equals(this.formBackgroundDefault, accountExperienceColors.formBackgroundDefault) &&
        Objects.equals(this.formBorderDefault, accountExperienceColors.formBorderDefault) &&
        Objects.equals(this.inputBackgroundDefault, accountExperienceColors.inputBackgroundDefault) &&
        Objects.equals(this.inputBackgroundDisabled, accountExperienceColors.inputBackgroundDisabled) &&
        Objects.equals(this.inputBackgroundHover, accountExperienceColors.inputBackgroundHover) &&
        Objects.equals(this.inputBorderDefault, accountExperienceColors.inputBorderDefault) &&
        Objects.equals(this.inputBorderDisabled, accountExperienceColors.inputBorderDisabled) &&
        Objects.equals(this.inputBorderFocus, accountExperienceColors.inputBorderFocus) &&
        Objects.equals(this.inputBorderHover, accountExperienceColors.inputBorderHover) &&
        Objects.equals(this.inputForegroundDisabled, accountExperienceColors.inputForegroundDisabled) &&
        Objects.equals(this.inputForegroundPrimary, accountExperienceColors.inputForegroundPrimary) &&
        Objects.equals(this.inputForegroundSecondary, accountExperienceColors.inputForegroundSecondary) &&
        Objects.equals(this.inputForegroundTertiary, accountExperienceColors.inputForegroundTertiary) &&
        Objects.equals(this.interfaceBackgroundBrandPrimary, accountExperienceColors.interfaceBackgroundBrandPrimary) &&
        Objects.equals(this.interfaceBackgroundBrandPrimaryHover, accountExperienceColors.interfaceBackgroundBrandPrimaryHover) &&
        Objects.equals(this.interfaceBackgroundBrandSecondary, accountExperienceColors.interfaceBackgroundBrandSecondary) &&
        Objects.equals(this.interfaceBackgroundBrandSecondaryHover, accountExperienceColors.interfaceBackgroundBrandSecondaryHover) &&
        Objects.equals(this.interfaceBackgroundDefaultInverted, accountExperienceColors.interfaceBackgroundDefaultInverted) &&
        Objects.equals(this.interfaceBackgroundDefaultInvertedHover, accountExperienceColors.interfaceBackgroundDefaultInvertedHover) &&
        Objects.equals(this.interfaceBackgroundDefaultNone, accountExperienceColors.interfaceBackgroundDefaultNone) &&
        Objects.equals(this.interfaceBackgroundDefaultPrimary, accountExperienceColors.interfaceBackgroundDefaultPrimary) &&
        Objects.equals(this.interfaceBackgroundDefaultPrimaryHover, accountExperienceColors.interfaceBackgroundDefaultPrimaryHover) &&
        Objects.equals(this.interfaceBackgroundDefaultSecondary, accountExperienceColors.interfaceBackgroundDefaultSecondary) &&
        Objects.equals(this.interfaceBackgroundDefaultSecondaryHover, accountExperienceColors.interfaceBackgroundDefaultSecondaryHover) &&
        Objects.equals(this.interfaceBackgroundDefaultTertiary, accountExperienceColors.interfaceBackgroundDefaultTertiary) &&
        Objects.equals(this.interfaceBackgroundDefaultTertiaryHover, accountExperienceColors.interfaceBackgroundDefaultTertiaryHover) &&
        Objects.equals(this.interfaceBackgroundDisabledDisabled, accountExperienceColors.interfaceBackgroundDisabledDisabled) &&
        Objects.equals(this.interfaceBackgroundValidationDanger, accountExperienceColors.interfaceBackgroundValidationDanger) &&
        Objects.equals(this.interfaceBackgroundValidationSuccess, accountExperienceColors.interfaceBackgroundValidationSuccess) &&
        Objects.equals(this.interfaceBackgroundValidationWarning, accountExperienceColors.interfaceBackgroundValidationWarning) &&
        Objects.equals(this.interfaceBorderBrandBrand, accountExperienceColors.interfaceBorderBrandBrand) &&
        Objects.equals(this.interfaceBorderDefaultInverted, accountExperienceColors.interfaceBorderDefaultInverted) &&
        Objects.equals(this.interfaceBorderDefaultNone, accountExperienceColors.interfaceBorderDefaultNone) &&
        Objects.equals(this.interfaceBorderDefaultPrimary, accountExperienceColors.interfaceBorderDefaultPrimary) &&
        Objects.equals(this.interfaceBorderDisabledDisabled, accountExperienceColors.interfaceBorderDisabledDisabled) &&
        Objects.equals(this.interfaceBorderValidationDanger, accountExperienceColors.interfaceBorderValidationDanger) &&
        Objects.equals(this.interfaceBorderValidationSuccess, accountExperienceColors.interfaceBorderValidationSuccess) &&
        Objects.equals(this.interfaceBorderValidationWarning, accountExperienceColors.interfaceBorderValidationWarning) &&
        Objects.equals(this.interfaceForegroundBrandOnPrimary, accountExperienceColors.interfaceForegroundBrandOnPrimary) &&
        Objects.equals(this.interfaceForegroundBrandOnSecondary, accountExperienceColors.interfaceForegroundBrandOnSecondary) &&
        Objects.equals(this.interfaceForegroundBrandPrimary, accountExperienceColors.interfaceForegroundBrandPrimary) &&
        Objects.equals(this.interfaceForegroundBrandSecondary, accountExperienceColors.interfaceForegroundBrandSecondary) &&
        Objects.equals(this.interfaceForegroundDefaultInverted, accountExperienceColors.interfaceForegroundDefaultInverted) &&
        Objects.equals(this.interfaceForegroundDefaultPrimary, accountExperienceColors.interfaceForegroundDefaultPrimary) &&
        Objects.equals(this.interfaceForegroundDefaultSecondary, accountExperienceColors.interfaceForegroundDefaultSecondary) &&
        Objects.equals(this.interfaceForegroundDefaultTertiary, accountExperienceColors.interfaceForegroundDefaultTertiary) &&
        Objects.equals(this.interfaceForegroundDisabledDisabled, accountExperienceColors.interfaceForegroundDisabledDisabled) &&
        Objects.equals(this.interfaceForegroundDisabledOnDisabled, accountExperienceColors.interfaceForegroundDisabledOnDisabled) &&
        Objects.equals(this.interfaceForegroundValidationDanger, accountExperienceColors.interfaceForegroundValidationDanger) &&
        Objects.equals(this.interfaceForegroundValidationSuccess, accountExperienceColors.interfaceForegroundValidationSuccess) &&
        Objects.equals(this.interfaceForegroundValidationWarning, accountExperienceColors.interfaceForegroundValidationWarning) &&
        Objects.equals(this.oryBackgroundDefault, accountExperienceColors.oryBackgroundDefault) &&
        Objects.equals(this.oryBorderDefault, accountExperienceColors.oryBorderDefault) &&
        Objects.equals(this.oryForegroundDefault, accountExperienceColors.oryForegroundDefault) &&
        Objects.equals(this.radioBackgroundChecked, accountExperienceColors.radioBackgroundChecked) &&
        Objects.equals(this.radioBackgroundDefault, accountExperienceColors.radioBackgroundDefault) &&
        Objects.equals(this.radioBorderChecked, accountExperienceColors.radioBorderChecked) &&
        Objects.equals(this.radioBorderDefault, accountExperienceColors.radioBorderDefault) &&
        Objects.equals(this.radioForegroundChecked, accountExperienceColors.radioForegroundChecked) &&
        Objects.equals(this.radioForegroundDefault, accountExperienceColors.radioForegroundDefault) &&
        Objects.equals(this.toggleBackgroundChecked, accountExperienceColors.toggleBackgroundChecked) &&
        Objects.equals(this.toggleBackgroundDefault, accountExperienceColors.toggleBackgroundDefault) &&
        Objects.equals(this.toggleBorderChecked, accountExperienceColors.toggleBorderChecked) &&
        Objects.equals(this.toggleBorderDefault, accountExperienceColors.toggleBorderDefault) &&
        Objects.equals(this.toggleForegroundChecked, accountExperienceColors.toggleForegroundChecked) &&
        Objects.equals(this.toggleForegroundDefault, accountExperienceColors.toggleForegroundDefault) &&
        Objects.equals(this.ui100, accountExperienceColors.ui100) &&
        Objects.equals(this.ui200, accountExperienceColors.ui200) &&
        Objects.equals(this.ui300, accountExperienceColors.ui300) &&
        Objects.equals(this.ui400, accountExperienceColors.ui400) &&
        Objects.equals(this.ui50, accountExperienceColors.ui50) &&
        Objects.equals(this.ui500, accountExperienceColors.ui500) &&
        Objects.equals(this.ui600, accountExperienceColors.ui600) &&
        Objects.equals(this.ui700, accountExperienceColors.ui700) &&
        Objects.equals(this.ui800, accountExperienceColors.ui800) &&
        Objects.equals(this.ui900, accountExperienceColors.ui900) &&
        Objects.equals(this.ui950, accountExperienceColors.ui950) &&
        Objects.equals(this.uiBlack, accountExperienceColors.uiBlack) &&
        Objects.equals(this.uiDanger, accountExperienceColors.uiDanger) &&
        Objects.equals(this.uiSuccess, accountExperienceColors.uiSuccess) &&
        Objects.equals(this.uiTransparent, accountExperienceColors.uiTransparent) &&
        Objects.equals(this.uiWarning, accountExperienceColors.uiWarning) &&
        Objects.equals(this.uiWhite, accountExperienceColors.uiWhite)&&
        Objects.equals(this.additionalProperties, accountExperienceColors.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(brand100, brand200, brand300, brand400, brand50, brand500, brand600, brand700, brand800, brand900, brand950, buttonIdentifierBackgroundDefault, buttonIdentifierBackgroundHover, buttonIdentifierBorderBorderDefault, buttonIdentifierBorderBorderHover, buttonIdentifierForegroundDefault, buttonIdentifierForegroundHover, buttonLinkBrandBrand, buttonLinkBrandBrandHover, buttonLinkDefaultPrimary, buttonLinkDefaultPrimaryHover, buttonLinkDefaultSecondary, buttonLinkDefaultSecondaryHover, buttonLinkDisabledDisabled, buttonPrimaryBackgroundDefault, buttonPrimaryBackgroundDisabled, buttonPrimaryBackgroundHover, buttonPrimaryBorderDefault, buttonPrimaryBorderDisabled, buttonPrimaryBorderHover, buttonPrimaryForegroundDefault, buttonPrimaryForegroundDisabled, buttonPrimaryForegroundHover, buttonSecondaryBackgroundDefault, buttonSecondaryBackgroundDisabled, buttonSecondaryBackgroundHover, buttonSecondaryBorderDefault, buttonSecondaryBorderDisabled, buttonSecondaryBorderHover, buttonSecondaryForegroundDefault, buttonSecondaryForegroundDisabled, buttonSecondaryForegroundHover, buttonSocialBackgroundDefault, buttonSocialBackgroundDisabled, buttonSocialBackgroundGenericProvider, buttonSocialBackgroundHover, buttonSocialBorderDefault, buttonSocialBorderDisabled, buttonSocialBorderGenericProvider, buttonSocialBorderHover, buttonSocialForegroundDefault, buttonSocialForegroundDisabled, buttonSocialForegroundGenericProvider, buttonSocialForegroundHover, checkboxBackgroundChecked, checkboxBackgroundDefault, checkboxBorderCheckboxBorderChecked, checkboxBorderCheckboxBorderDefault, checkboxForegroundChecked, checkboxForegroundDefault, formBackgroundDefault, formBorderDefault, inputBackgroundDefault, inputBackgroundDisabled, inputBackgroundHover, inputBorderDefault, inputBorderDisabled, inputBorderFocus, inputBorderHover, inputForegroundDisabled, inputForegroundPrimary, inputForegroundSecondary, inputForegroundTertiary, interfaceBackgroundBrandPrimary, interfaceBackgroundBrandPrimaryHover, interfaceBackgroundBrandSecondary, interfaceBackgroundBrandSecondaryHover, interfaceBackgroundDefaultInverted, interfaceBackgroundDefaultInvertedHover, interfaceBackgroundDefaultNone, interfaceBackgroundDefaultPrimary, interfaceBackgroundDefaultPrimaryHover, interfaceBackgroundDefaultSecondary, interfaceBackgroundDefaultSecondaryHover, interfaceBackgroundDefaultTertiary, interfaceBackgroundDefaultTertiaryHover, interfaceBackgroundDisabledDisabled, interfaceBackgroundValidationDanger, interfaceBackgroundValidationSuccess, interfaceBackgroundValidationWarning, interfaceBorderBrandBrand, interfaceBorderDefaultInverted, interfaceBorderDefaultNone, interfaceBorderDefaultPrimary, interfaceBorderDisabledDisabled, interfaceBorderValidationDanger, interfaceBorderValidationSuccess, interfaceBorderValidationWarning, interfaceForegroundBrandOnPrimary, interfaceForegroundBrandOnSecondary, interfaceForegroundBrandPrimary, interfaceForegroundBrandSecondary, interfaceForegroundDefaultInverted, interfaceForegroundDefaultPrimary, interfaceForegroundDefaultSecondary, interfaceForegroundDefaultTertiary, interfaceForegroundDisabledDisabled, interfaceForegroundDisabledOnDisabled, interfaceForegroundValidationDanger, interfaceForegroundValidationSuccess, interfaceForegroundValidationWarning, oryBackgroundDefault, oryBorderDefault, oryForegroundDefault, radioBackgroundChecked, radioBackgroundDefault, radioBorderChecked, radioBorderDefault, radioForegroundChecked, radioForegroundDefault, toggleBackgroundChecked, toggleBackgroundDefault, toggleBorderChecked, toggleBorderDefault, toggleForegroundChecked, toggleForegroundDefault, ui100, ui200, ui300, ui400, ui50, ui500, ui600, ui700, ui800, ui900, ui950, uiBlack, uiDanger, uiSuccess, uiTransparent, uiWarning, uiWhite, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountExperienceColors {\n");
    sb.append("    brand100: ").append(toIndentedString(brand100)).append("\n");
    sb.append("    brand200: ").append(toIndentedString(brand200)).append("\n");
    sb.append("    brand300: ").append(toIndentedString(brand300)).append("\n");
    sb.append("    brand400: ").append(toIndentedString(brand400)).append("\n");
    sb.append("    brand50: ").append(toIndentedString(brand50)).append("\n");
    sb.append("    brand500: ").append(toIndentedString(brand500)).append("\n");
    sb.append("    brand600: ").append(toIndentedString(brand600)).append("\n");
    sb.append("    brand700: ").append(toIndentedString(brand700)).append("\n");
    sb.append("    brand800: ").append(toIndentedString(brand800)).append("\n");
    sb.append("    brand900: ").append(toIndentedString(brand900)).append("\n");
    sb.append("    brand950: ").append(toIndentedString(brand950)).append("\n");
    sb.append("    buttonIdentifierBackgroundDefault: ").append(toIndentedString(buttonIdentifierBackgroundDefault)).append("\n");
    sb.append("    buttonIdentifierBackgroundHover: ").append(toIndentedString(buttonIdentifierBackgroundHover)).append("\n");
    sb.append("    buttonIdentifierBorderBorderDefault: ").append(toIndentedString(buttonIdentifierBorderBorderDefault)).append("\n");
    sb.append("    buttonIdentifierBorderBorderHover: ").append(toIndentedString(buttonIdentifierBorderBorderHover)).append("\n");
    sb.append("    buttonIdentifierForegroundDefault: ").append(toIndentedString(buttonIdentifierForegroundDefault)).append("\n");
    sb.append("    buttonIdentifierForegroundHover: ").append(toIndentedString(buttonIdentifierForegroundHover)).append("\n");
    sb.append("    buttonLinkBrandBrand: ").append(toIndentedString(buttonLinkBrandBrand)).append("\n");
    sb.append("    buttonLinkBrandBrandHover: ").append(toIndentedString(buttonLinkBrandBrandHover)).append("\n");
    sb.append("    buttonLinkDefaultPrimary: ").append(toIndentedString(buttonLinkDefaultPrimary)).append("\n");
    sb.append("    buttonLinkDefaultPrimaryHover: ").append(toIndentedString(buttonLinkDefaultPrimaryHover)).append("\n");
    sb.append("    buttonLinkDefaultSecondary: ").append(toIndentedString(buttonLinkDefaultSecondary)).append("\n");
    sb.append("    buttonLinkDefaultSecondaryHover: ").append(toIndentedString(buttonLinkDefaultSecondaryHover)).append("\n");
    sb.append("    buttonLinkDisabledDisabled: ").append(toIndentedString(buttonLinkDisabledDisabled)).append("\n");
    sb.append("    buttonPrimaryBackgroundDefault: ").append(toIndentedString(buttonPrimaryBackgroundDefault)).append("\n");
    sb.append("    buttonPrimaryBackgroundDisabled: ").append(toIndentedString(buttonPrimaryBackgroundDisabled)).append("\n");
    sb.append("    buttonPrimaryBackgroundHover: ").append(toIndentedString(buttonPrimaryBackgroundHover)).append("\n");
    sb.append("    buttonPrimaryBorderDefault: ").append(toIndentedString(buttonPrimaryBorderDefault)).append("\n");
    sb.append("    buttonPrimaryBorderDisabled: ").append(toIndentedString(buttonPrimaryBorderDisabled)).append("\n");
    sb.append("    buttonPrimaryBorderHover: ").append(toIndentedString(buttonPrimaryBorderHover)).append("\n");
    sb.append("    buttonPrimaryForegroundDefault: ").append(toIndentedString(buttonPrimaryForegroundDefault)).append("\n");
    sb.append("    buttonPrimaryForegroundDisabled: ").append(toIndentedString(buttonPrimaryForegroundDisabled)).append("\n");
    sb.append("    buttonPrimaryForegroundHover: ").append(toIndentedString(buttonPrimaryForegroundHover)).append("\n");
    sb.append("    buttonSecondaryBackgroundDefault: ").append(toIndentedString(buttonSecondaryBackgroundDefault)).append("\n");
    sb.append("    buttonSecondaryBackgroundDisabled: ").append(toIndentedString(buttonSecondaryBackgroundDisabled)).append("\n");
    sb.append("    buttonSecondaryBackgroundHover: ").append(toIndentedString(buttonSecondaryBackgroundHover)).append("\n");
    sb.append("    buttonSecondaryBorderDefault: ").append(toIndentedString(buttonSecondaryBorderDefault)).append("\n");
    sb.append("    buttonSecondaryBorderDisabled: ").append(toIndentedString(buttonSecondaryBorderDisabled)).append("\n");
    sb.append("    buttonSecondaryBorderHover: ").append(toIndentedString(buttonSecondaryBorderHover)).append("\n");
    sb.append("    buttonSecondaryForegroundDefault: ").append(toIndentedString(buttonSecondaryForegroundDefault)).append("\n");
    sb.append("    buttonSecondaryForegroundDisabled: ").append(toIndentedString(buttonSecondaryForegroundDisabled)).append("\n");
    sb.append("    buttonSecondaryForegroundHover: ").append(toIndentedString(buttonSecondaryForegroundHover)).append("\n");
    sb.append("    buttonSocialBackgroundDefault: ").append(toIndentedString(buttonSocialBackgroundDefault)).append("\n");
    sb.append("    buttonSocialBackgroundDisabled: ").append(toIndentedString(buttonSocialBackgroundDisabled)).append("\n");
    sb.append("    buttonSocialBackgroundGenericProvider: ").append(toIndentedString(buttonSocialBackgroundGenericProvider)).append("\n");
    sb.append("    buttonSocialBackgroundHover: ").append(toIndentedString(buttonSocialBackgroundHover)).append("\n");
    sb.append("    buttonSocialBorderDefault: ").append(toIndentedString(buttonSocialBorderDefault)).append("\n");
    sb.append("    buttonSocialBorderDisabled: ").append(toIndentedString(buttonSocialBorderDisabled)).append("\n");
    sb.append("    buttonSocialBorderGenericProvider: ").append(toIndentedString(buttonSocialBorderGenericProvider)).append("\n");
    sb.append("    buttonSocialBorderHover: ").append(toIndentedString(buttonSocialBorderHover)).append("\n");
    sb.append("    buttonSocialForegroundDefault: ").append(toIndentedString(buttonSocialForegroundDefault)).append("\n");
    sb.append("    buttonSocialForegroundDisabled: ").append(toIndentedString(buttonSocialForegroundDisabled)).append("\n");
    sb.append("    buttonSocialForegroundGenericProvider: ").append(toIndentedString(buttonSocialForegroundGenericProvider)).append("\n");
    sb.append("    buttonSocialForegroundHover: ").append(toIndentedString(buttonSocialForegroundHover)).append("\n");
    sb.append("    checkboxBackgroundChecked: ").append(toIndentedString(checkboxBackgroundChecked)).append("\n");
    sb.append("    checkboxBackgroundDefault: ").append(toIndentedString(checkboxBackgroundDefault)).append("\n");
    sb.append("    checkboxBorderCheckboxBorderChecked: ").append(toIndentedString(checkboxBorderCheckboxBorderChecked)).append("\n");
    sb.append("    checkboxBorderCheckboxBorderDefault: ").append(toIndentedString(checkboxBorderCheckboxBorderDefault)).append("\n");
    sb.append("    checkboxForegroundChecked: ").append(toIndentedString(checkboxForegroundChecked)).append("\n");
    sb.append("    checkboxForegroundDefault: ").append(toIndentedString(checkboxForegroundDefault)).append("\n");
    sb.append("    formBackgroundDefault: ").append(toIndentedString(formBackgroundDefault)).append("\n");
    sb.append("    formBorderDefault: ").append(toIndentedString(formBorderDefault)).append("\n");
    sb.append("    inputBackgroundDefault: ").append(toIndentedString(inputBackgroundDefault)).append("\n");
    sb.append("    inputBackgroundDisabled: ").append(toIndentedString(inputBackgroundDisabled)).append("\n");
    sb.append("    inputBackgroundHover: ").append(toIndentedString(inputBackgroundHover)).append("\n");
    sb.append("    inputBorderDefault: ").append(toIndentedString(inputBorderDefault)).append("\n");
    sb.append("    inputBorderDisabled: ").append(toIndentedString(inputBorderDisabled)).append("\n");
    sb.append("    inputBorderFocus: ").append(toIndentedString(inputBorderFocus)).append("\n");
    sb.append("    inputBorderHover: ").append(toIndentedString(inputBorderHover)).append("\n");
    sb.append("    inputForegroundDisabled: ").append(toIndentedString(inputForegroundDisabled)).append("\n");
    sb.append("    inputForegroundPrimary: ").append(toIndentedString(inputForegroundPrimary)).append("\n");
    sb.append("    inputForegroundSecondary: ").append(toIndentedString(inputForegroundSecondary)).append("\n");
    sb.append("    inputForegroundTertiary: ").append(toIndentedString(inputForegroundTertiary)).append("\n");
    sb.append("    interfaceBackgroundBrandPrimary: ").append(toIndentedString(interfaceBackgroundBrandPrimary)).append("\n");
    sb.append("    interfaceBackgroundBrandPrimaryHover: ").append(toIndentedString(interfaceBackgroundBrandPrimaryHover)).append("\n");
    sb.append("    interfaceBackgroundBrandSecondary: ").append(toIndentedString(interfaceBackgroundBrandSecondary)).append("\n");
    sb.append("    interfaceBackgroundBrandSecondaryHover: ").append(toIndentedString(interfaceBackgroundBrandSecondaryHover)).append("\n");
    sb.append("    interfaceBackgroundDefaultInverted: ").append(toIndentedString(interfaceBackgroundDefaultInverted)).append("\n");
    sb.append("    interfaceBackgroundDefaultInvertedHover: ").append(toIndentedString(interfaceBackgroundDefaultInvertedHover)).append("\n");
    sb.append("    interfaceBackgroundDefaultNone: ").append(toIndentedString(interfaceBackgroundDefaultNone)).append("\n");
    sb.append("    interfaceBackgroundDefaultPrimary: ").append(toIndentedString(interfaceBackgroundDefaultPrimary)).append("\n");
    sb.append("    interfaceBackgroundDefaultPrimaryHover: ").append(toIndentedString(interfaceBackgroundDefaultPrimaryHover)).append("\n");
    sb.append("    interfaceBackgroundDefaultSecondary: ").append(toIndentedString(interfaceBackgroundDefaultSecondary)).append("\n");
    sb.append("    interfaceBackgroundDefaultSecondaryHover: ").append(toIndentedString(interfaceBackgroundDefaultSecondaryHover)).append("\n");
    sb.append("    interfaceBackgroundDefaultTertiary: ").append(toIndentedString(interfaceBackgroundDefaultTertiary)).append("\n");
    sb.append("    interfaceBackgroundDefaultTertiaryHover: ").append(toIndentedString(interfaceBackgroundDefaultTertiaryHover)).append("\n");
    sb.append("    interfaceBackgroundDisabledDisabled: ").append(toIndentedString(interfaceBackgroundDisabledDisabled)).append("\n");
    sb.append("    interfaceBackgroundValidationDanger: ").append(toIndentedString(interfaceBackgroundValidationDanger)).append("\n");
    sb.append("    interfaceBackgroundValidationSuccess: ").append(toIndentedString(interfaceBackgroundValidationSuccess)).append("\n");
    sb.append("    interfaceBackgroundValidationWarning: ").append(toIndentedString(interfaceBackgroundValidationWarning)).append("\n");
    sb.append("    interfaceBorderBrandBrand: ").append(toIndentedString(interfaceBorderBrandBrand)).append("\n");
    sb.append("    interfaceBorderDefaultInverted: ").append(toIndentedString(interfaceBorderDefaultInverted)).append("\n");
    sb.append("    interfaceBorderDefaultNone: ").append(toIndentedString(interfaceBorderDefaultNone)).append("\n");
    sb.append("    interfaceBorderDefaultPrimary: ").append(toIndentedString(interfaceBorderDefaultPrimary)).append("\n");
    sb.append("    interfaceBorderDisabledDisabled: ").append(toIndentedString(interfaceBorderDisabledDisabled)).append("\n");
    sb.append("    interfaceBorderValidationDanger: ").append(toIndentedString(interfaceBorderValidationDanger)).append("\n");
    sb.append("    interfaceBorderValidationSuccess: ").append(toIndentedString(interfaceBorderValidationSuccess)).append("\n");
    sb.append("    interfaceBorderValidationWarning: ").append(toIndentedString(interfaceBorderValidationWarning)).append("\n");
    sb.append("    interfaceForegroundBrandOnPrimary: ").append(toIndentedString(interfaceForegroundBrandOnPrimary)).append("\n");
    sb.append("    interfaceForegroundBrandOnSecondary: ").append(toIndentedString(interfaceForegroundBrandOnSecondary)).append("\n");
    sb.append("    interfaceForegroundBrandPrimary: ").append(toIndentedString(interfaceForegroundBrandPrimary)).append("\n");
    sb.append("    interfaceForegroundBrandSecondary: ").append(toIndentedString(interfaceForegroundBrandSecondary)).append("\n");
    sb.append("    interfaceForegroundDefaultInverted: ").append(toIndentedString(interfaceForegroundDefaultInverted)).append("\n");
    sb.append("    interfaceForegroundDefaultPrimary: ").append(toIndentedString(interfaceForegroundDefaultPrimary)).append("\n");
    sb.append("    interfaceForegroundDefaultSecondary: ").append(toIndentedString(interfaceForegroundDefaultSecondary)).append("\n");
    sb.append("    interfaceForegroundDefaultTertiary: ").append(toIndentedString(interfaceForegroundDefaultTertiary)).append("\n");
    sb.append("    interfaceForegroundDisabledDisabled: ").append(toIndentedString(interfaceForegroundDisabledDisabled)).append("\n");
    sb.append("    interfaceForegroundDisabledOnDisabled: ").append(toIndentedString(interfaceForegroundDisabledOnDisabled)).append("\n");
    sb.append("    interfaceForegroundValidationDanger: ").append(toIndentedString(interfaceForegroundValidationDanger)).append("\n");
    sb.append("    interfaceForegroundValidationSuccess: ").append(toIndentedString(interfaceForegroundValidationSuccess)).append("\n");
    sb.append("    interfaceForegroundValidationWarning: ").append(toIndentedString(interfaceForegroundValidationWarning)).append("\n");
    sb.append("    oryBackgroundDefault: ").append(toIndentedString(oryBackgroundDefault)).append("\n");
    sb.append("    oryBorderDefault: ").append(toIndentedString(oryBorderDefault)).append("\n");
    sb.append("    oryForegroundDefault: ").append(toIndentedString(oryForegroundDefault)).append("\n");
    sb.append("    radioBackgroundChecked: ").append(toIndentedString(radioBackgroundChecked)).append("\n");
    sb.append("    radioBackgroundDefault: ").append(toIndentedString(radioBackgroundDefault)).append("\n");
    sb.append("    radioBorderChecked: ").append(toIndentedString(radioBorderChecked)).append("\n");
    sb.append("    radioBorderDefault: ").append(toIndentedString(radioBorderDefault)).append("\n");
    sb.append("    radioForegroundChecked: ").append(toIndentedString(radioForegroundChecked)).append("\n");
    sb.append("    radioForegroundDefault: ").append(toIndentedString(radioForegroundDefault)).append("\n");
    sb.append("    toggleBackgroundChecked: ").append(toIndentedString(toggleBackgroundChecked)).append("\n");
    sb.append("    toggleBackgroundDefault: ").append(toIndentedString(toggleBackgroundDefault)).append("\n");
    sb.append("    toggleBorderChecked: ").append(toIndentedString(toggleBorderChecked)).append("\n");
    sb.append("    toggleBorderDefault: ").append(toIndentedString(toggleBorderDefault)).append("\n");
    sb.append("    toggleForegroundChecked: ").append(toIndentedString(toggleForegroundChecked)).append("\n");
    sb.append("    toggleForegroundDefault: ").append(toIndentedString(toggleForegroundDefault)).append("\n");
    sb.append("    ui100: ").append(toIndentedString(ui100)).append("\n");
    sb.append("    ui200: ").append(toIndentedString(ui200)).append("\n");
    sb.append("    ui300: ").append(toIndentedString(ui300)).append("\n");
    sb.append("    ui400: ").append(toIndentedString(ui400)).append("\n");
    sb.append("    ui50: ").append(toIndentedString(ui50)).append("\n");
    sb.append("    ui500: ").append(toIndentedString(ui500)).append("\n");
    sb.append("    ui600: ").append(toIndentedString(ui600)).append("\n");
    sb.append("    ui700: ").append(toIndentedString(ui700)).append("\n");
    sb.append("    ui800: ").append(toIndentedString(ui800)).append("\n");
    sb.append("    ui900: ").append(toIndentedString(ui900)).append("\n");
    sb.append("    ui950: ").append(toIndentedString(ui950)).append("\n");
    sb.append("    uiBlack: ").append(toIndentedString(uiBlack)).append("\n");
    sb.append("    uiDanger: ").append(toIndentedString(uiDanger)).append("\n");
    sb.append("    uiSuccess: ").append(toIndentedString(uiSuccess)).append("\n");
    sb.append("    uiTransparent: ").append(toIndentedString(uiTransparent)).append("\n");
    sb.append("    uiWarning: ").append(toIndentedString(uiWarning)).append("\n");
    sb.append("    uiWhite: ").append(toIndentedString(uiWhite)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("brand-100");
    openapiFields.add("brand-200");
    openapiFields.add("brand-300");
    openapiFields.add("brand-400");
    openapiFields.add("brand-50");
    openapiFields.add("brand-500");
    openapiFields.add("brand-600");
    openapiFields.add("brand-700");
    openapiFields.add("brand-800");
    openapiFields.add("brand-900");
    openapiFields.add("brand-950");
    openapiFields.add("button-identifier-background-default");
    openapiFields.add("button-identifier-background-hover");
    openapiFields.add("button-identifier-border-border-default");
    openapiFields.add("button-identifier-border-border-hover");
    openapiFields.add("button-identifier-foreground-default");
    openapiFields.add("button-identifier-foreground-hover");
    openapiFields.add("button-link-brand-brand");
    openapiFields.add("button-link-brand-brand-hover");
    openapiFields.add("button-link-default-primary");
    openapiFields.add("button-link-default-primary-hover");
    openapiFields.add("button-link-default-secondary");
    openapiFields.add("button-link-default-secondary-hover");
    openapiFields.add("button-link-disabled-disabled");
    openapiFields.add("button-primary-background-default");
    openapiFields.add("button-primary-background-disabled");
    openapiFields.add("button-primary-background-hover");
    openapiFields.add("button-primary-border-default");
    openapiFields.add("button-primary-border-disabled");
    openapiFields.add("button-primary-border-hover");
    openapiFields.add("button-primary-foreground-default");
    openapiFields.add("button-primary-foreground-disabled");
    openapiFields.add("button-primary-foreground-hover");
    openapiFields.add("button-secondary-background-default");
    openapiFields.add("button-secondary-background-disabled");
    openapiFields.add("button-secondary-background-hover");
    openapiFields.add("button-secondary-border-default");
    openapiFields.add("button-secondary-border-disabled");
    openapiFields.add("button-secondary-border-hover");
    openapiFields.add("button-secondary-foreground-default");
    openapiFields.add("button-secondary-foreground-disabled");
    openapiFields.add("button-secondary-foreground-hover");
    openapiFields.add("button-social-background-default");
    openapiFields.add("button-social-background-disabled");
    openapiFields.add("button-social-background-generic-provider");
    openapiFields.add("button-social-background-hover");
    openapiFields.add("button-social-border-default");
    openapiFields.add("button-social-border-disabled");
    openapiFields.add("button-social-border-generic-provider");
    openapiFields.add("button-social-border-hover");
    openapiFields.add("button-social-foreground-default");
    openapiFields.add("button-social-foreground-disabled");
    openapiFields.add("button-social-foreground-generic-provider");
    openapiFields.add("button-social-foreground-hover");
    openapiFields.add("checkbox-background-checked");
    openapiFields.add("checkbox-background-default");
    openapiFields.add("checkbox-border-checkbox-border-checked");
    openapiFields.add("checkbox-border-checkbox-border-default");
    openapiFields.add("checkbox-foreground-checked");
    openapiFields.add("checkbox-foreground-default");
    openapiFields.add("form-background-default");
    openapiFields.add("form-border-default");
    openapiFields.add("input-background-default");
    openapiFields.add("input-background-disabled");
    openapiFields.add("input-background-hover");
    openapiFields.add("input-border-default");
    openapiFields.add("input-border-disabled");
    openapiFields.add("input-border-focus");
    openapiFields.add("input-border-hover");
    openapiFields.add("input-foreground-disabled");
    openapiFields.add("input-foreground-primary");
    openapiFields.add("input-foreground-secondary");
    openapiFields.add("input-foreground-tertiary");
    openapiFields.add("interface-background-brand-primary");
    openapiFields.add("interface-background-brand-primary-hover");
    openapiFields.add("interface-background-brand-secondary");
    openapiFields.add("interface-background-brand-secondary-hover");
    openapiFields.add("interface-background-default-inverted");
    openapiFields.add("interface-background-default-inverted-hover");
    openapiFields.add("interface-background-default-none");
    openapiFields.add("interface-background-default-primary");
    openapiFields.add("interface-background-default-primary-hover");
    openapiFields.add("interface-background-default-secondary");
    openapiFields.add("interface-background-default-secondary-hover");
    openapiFields.add("interface-background-default-tertiary");
    openapiFields.add("interface-background-default-tertiary-hover");
    openapiFields.add("interface-background-disabled-disabled");
    openapiFields.add("interface-background-validation-danger");
    openapiFields.add("interface-background-validation-success");
    openapiFields.add("interface-background-validation-warning");
    openapiFields.add("interface-border-brand-brand");
    openapiFields.add("interface-border-default-inverted");
    openapiFields.add("interface-border-default-none");
    openapiFields.add("interface-border-default-primary");
    openapiFields.add("interface-border-disabled-disabled");
    openapiFields.add("interface-border-validation-danger");
    openapiFields.add("interface-border-validation-success");
    openapiFields.add("interface-border-validation-warning");
    openapiFields.add("interface-foreground-brand-on-primary");
    openapiFields.add("interface-foreground-brand-on-secondary");
    openapiFields.add("interface-foreground-brand-primary");
    openapiFields.add("interface-foreground-brand-secondary");
    openapiFields.add("interface-foreground-default-inverted");
    openapiFields.add("interface-foreground-default-primary");
    openapiFields.add("interface-foreground-default-secondary");
    openapiFields.add("interface-foreground-default-tertiary");
    openapiFields.add("interface-foreground-disabled-disabled");
    openapiFields.add("interface-foreground-disabled-on-disabled");
    openapiFields.add("interface-foreground-validation-danger");
    openapiFields.add("interface-foreground-validation-success");
    openapiFields.add("interface-foreground-validation-warning");
    openapiFields.add("ory-background-default");
    openapiFields.add("ory-border-default");
    openapiFields.add("ory-foreground-default");
    openapiFields.add("radio-background-checked");
    openapiFields.add("radio-background-default");
    openapiFields.add("radio-border-checked");
    openapiFields.add("radio-border-default");
    openapiFields.add("radio-foreground-checked");
    openapiFields.add("radio-foreground-default");
    openapiFields.add("toggle-background-checked");
    openapiFields.add("toggle-background-default");
    openapiFields.add("toggle-border-checked");
    openapiFields.add("toggle-border-default");
    openapiFields.add("toggle-foreground-checked");
    openapiFields.add("toggle-foreground-default");
    openapiFields.add("ui-100");
    openapiFields.add("ui-200");
    openapiFields.add("ui-300");
    openapiFields.add("ui-400");
    openapiFields.add("ui-50");
    openapiFields.add("ui-500");
    openapiFields.add("ui-600");
    openapiFields.add("ui-700");
    openapiFields.add("ui-800");
    openapiFields.add("ui-900");
    openapiFields.add("ui-950");
    openapiFields.add("ui-black");
    openapiFields.add("ui-danger");
    openapiFields.add("ui-success");
    openapiFields.add("ui-transparent");
    openapiFields.add("ui-warning");
    openapiFields.add("ui-white");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AccountExperienceColors
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AccountExperienceColors.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AccountExperienceColors is not found in the empty JSON string", AccountExperienceColors.openapiRequiredFields.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("brand-100") != null && !jsonObj.get("brand-100").isJsonNull()) && !jsonObj.get("brand-100").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `brand-100` to be a primitive type in the JSON string but got `%s`", jsonObj.get("brand-100").toString()));
      }
      if ((jsonObj.get("brand-200") != null && !jsonObj.get("brand-200").isJsonNull()) && !jsonObj.get("brand-200").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `brand-200` to be a primitive type in the JSON string but got `%s`", jsonObj.get("brand-200").toString()));
      }
      if ((jsonObj.get("brand-300") != null && !jsonObj.get("brand-300").isJsonNull()) && !jsonObj.get("brand-300").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `brand-300` to be a primitive type in the JSON string but got `%s`", jsonObj.get("brand-300").toString()));
      }
      if ((jsonObj.get("brand-400") != null && !jsonObj.get("brand-400").isJsonNull()) && !jsonObj.get("brand-400").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `brand-400` to be a primitive type in the JSON string but got `%s`", jsonObj.get("brand-400").toString()));
      }
      if ((jsonObj.get("brand-50") != null && !jsonObj.get("brand-50").isJsonNull()) && !jsonObj.get("brand-50").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `brand-50` to be a primitive type in the JSON string but got `%s`", jsonObj.get("brand-50").toString()));
      }
      if ((jsonObj.get("brand-500") != null && !jsonObj.get("brand-500").isJsonNull()) && !jsonObj.get("brand-500").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `brand-500` to be a primitive type in the JSON string but got `%s`", jsonObj.get("brand-500").toString()));
      }
      if ((jsonObj.get("brand-600") != null && !jsonObj.get("brand-600").isJsonNull()) && !jsonObj.get("brand-600").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `brand-600` to be a primitive type in the JSON string but got `%s`", jsonObj.get("brand-600").toString()));
      }
      if ((jsonObj.get("brand-700") != null && !jsonObj.get("brand-700").isJsonNull()) && !jsonObj.get("brand-700").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `brand-700` to be a primitive type in the JSON string but got `%s`", jsonObj.get("brand-700").toString()));
      }
      if ((jsonObj.get("brand-800") != null && !jsonObj.get("brand-800").isJsonNull()) && !jsonObj.get("brand-800").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `brand-800` to be a primitive type in the JSON string but got `%s`", jsonObj.get("brand-800").toString()));
      }
      if ((jsonObj.get("brand-900") != null && !jsonObj.get("brand-900").isJsonNull()) && !jsonObj.get("brand-900").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `brand-900` to be a primitive type in the JSON string but got `%s`", jsonObj.get("brand-900").toString()));
      }
      if ((jsonObj.get("brand-950") != null && !jsonObj.get("brand-950").isJsonNull()) && !jsonObj.get("brand-950").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `brand-950` to be a primitive type in the JSON string but got `%s`", jsonObj.get("brand-950").toString()));
      }
      if ((jsonObj.get("button-identifier-background-default") != null && !jsonObj.get("button-identifier-background-default").isJsonNull()) && !jsonObj.get("button-identifier-background-default").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `button-identifier-background-default` to be a primitive type in the JSON string but got `%s`", jsonObj.get("button-identifier-background-default").toString()));
      }
      if ((jsonObj.get("button-identifier-background-hover") != null && !jsonObj.get("button-identifier-background-hover").isJsonNull()) && !jsonObj.get("button-identifier-background-hover").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `button-identifier-background-hover` to be a primitive type in the JSON string but got `%s`", jsonObj.get("button-identifier-background-hover").toString()));
      }
      if ((jsonObj.get("button-identifier-border-border-default") != null && !jsonObj.get("button-identifier-border-border-default").isJsonNull()) && !jsonObj.get("button-identifier-border-border-default").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `button-identifier-border-border-default` to be a primitive type in the JSON string but got `%s`", jsonObj.get("button-identifier-border-border-default").toString()));
      }
      if ((jsonObj.get("button-identifier-border-border-hover") != null && !jsonObj.get("button-identifier-border-border-hover").isJsonNull()) && !jsonObj.get("button-identifier-border-border-hover").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `button-identifier-border-border-hover` to be a primitive type in the JSON string but got `%s`", jsonObj.get("button-identifier-border-border-hover").toString()));
      }
      if ((jsonObj.get("button-identifier-foreground-default") != null && !jsonObj.get("button-identifier-foreground-default").isJsonNull()) && !jsonObj.get("button-identifier-foreground-default").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `button-identifier-foreground-default` to be a primitive type in the JSON string but got `%s`", jsonObj.get("button-identifier-foreground-default").toString()));
      }
      if ((jsonObj.get("button-identifier-foreground-hover") != null && !jsonObj.get("button-identifier-foreground-hover").isJsonNull()) && !jsonObj.get("button-identifier-foreground-hover").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `button-identifier-foreground-hover` to be a primitive type in the JSON string but got `%s`", jsonObj.get("button-identifier-foreground-hover").toString()));
      }
      if ((jsonObj.get("button-link-brand-brand") != null && !jsonObj.get("button-link-brand-brand").isJsonNull()) && !jsonObj.get("button-link-brand-brand").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `button-link-brand-brand` to be a primitive type in the JSON string but got `%s`", jsonObj.get("button-link-brand-brand").toString()));
      }
      if ((jsonObj.get("button-link-brand-brand-hover") != null && !jsonObj.get("button-link-brand-brand-hover").isJsonNull()) && !jsonObj.get("button-link-brand-brand-hover").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `button-link-brand-brand-hover` to be a primitive type in the JSON string but got `%s`", jsonObj.get("button-link-brand-brand-hover").toString()));
      }
      if ((jsonObj.get("button-link-default-primary") != null && !jsonObj.get("button-link-default-primary").isJsonNull()) && !jsonObj.get("button-link-default-primary").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `button-link-default-primary` to be a primitive type in the JSON string but got `%s`", jsonObj.get("button-link-default-primary").toString()));
      }
      if ((jsonObj.get("button-link-default-primary-hover") != null && !jsonObj.get("button-link-default-primary-hover").isJsonNull()) && !jsonObj.get("button-link-default-primary-hover").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `button-link-default-primary-hover` to be a primitive type in the JSON string but got `%s`", jsonObj.get("button-link-default-primary-hover").toString()));
      }
      if ((jsonObj.get("button-link-default-secondary") != null && !jsonObj.get("button-link-default-secondary").isJsonNull()) && !jsonObj.get("button-link-default-secondary").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `button-link-default-secondary` to be a primitive type in the JSON string but got `%s`", jsonObj.get("button-link-default-secondary").toString()));
      }
      if ((jsonObj.get("button-link-default-secondary-hover") != null && !jsonObj.get("button-link-default-secondary-hover").isJsonNull()) && !jsonObj.get("button-link-default-secondary-hover").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `button-link-default-secondary-hover` to be a primitive type in the JSON string but got `%s`", jsonObj.get("button-link-default-secondary-hover").toString()));
      }
      if ((jsonObj.get("button-link-disabled-disabled") != null && !jsonObj.get("button-link-disabled-disabled").isJsonNull()) && !jsonObj.get("button-link-disabled-disabled").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `button-link-disabled-disabled` to be a primitive type in the JSON string but got `%s`", jsonObj.get("button-link-disabled-disabled").toString()));
      }
      if ((jsonObj.get("button-primary-background-default") != null && !jsonObj.get("button-primary-background-default").isJsonNull()) && !jsonObj.get("button-primary-background-default").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `button-primary-background-default` to be a primitive type in the JSON string but got `%s`", jsonObj.get("button-primary-background-default").toString()));
      }
      if ((jsonObj.get("button-primary-background-disabled") != null && !jsonObj.get("button-primary-background-disabled").isJsonNull()) && !jsonObj.get("button-primary-background-disabled").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `button-primary-background-disabled` to be a primitive type in the JSON string but got `%s`", jsonObj.get("button-primary-background-disabled").toString()));
      }
      if ((jsonObj.get("button-primary-background-hover") != null && !jsonObj.get("button-primary-background-hover").isJsonNull()) && !jsonObj.get("button-primary-background-hover").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `button-primary-background-hover` to be a primitive type in the JSON string but got `%s`", jsonObj.get("button-primary-background-hover").toString()));
      }
      if ((jsonObj.get("button-primary-border-default") != null && !jsonObj.get("button-primary-border-default").isJsonNull()) && !jsonObj.get("button-primary-border-default").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `button-primary-border-default` to be a primitive type in the JSON string but got `%s`", jsonObj.get("button-primary-border-default").toString()));
      }
      if ((jsonObj.get("button-primary-border-disabled") != null && !jsonObj.get("button-primary-border-disabled").isJsonNull()) && !jsonObj.get("button-primary-border-disabled").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `button-primary-border-disabled` to be a primitive type in the JSON string but got `%s`", jsonObj.get("button-primary-border-disabled").toString()));
      }
      if ((jsonObj.get("button-primary-border-hover") != null && !jsonObj.get("button-primary-border-hover").isJsonNull()) && !jsonObj.get("button-primary-border-hover").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `button-primary-border-hover` to be a primitive type in the JSON string but got `%s`", jsonObj.get("button-primary-border-hover").toString()));
      }
      if ((jsonObj.get("button-primary-foreground-default") != null && !jsonObj.get("button-primary-foreground-default").isJsonNull()) && !jsonObj.get("button-primary-foreground-default").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `button-primary-foreground-default` to be a primitive type in the JSON string but got `%s`", jsonObj.get("button-primary-foreground-default").toString()));
      }
      if ((jsonObj.get("button-primary-foreground-disabled") != null && !jsonObj.get("button-primary-foreground-disabled").isJsonNull()) && !jsonObj.get("button-primary-foreground-disabled").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `button-primary-foreground-disabled` to be a primitive type in the JSON string but got `%s`", jsonObj.get("button-primary-foreground-disabled").toString()));
      }
      if ((jsonObj.get("button-primary-foreground-hover") != null && !jsonObj.get("button-primary-foreground-hover").isJsonNull()) && !jsonObj.get("button-primary-foreground-hover").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `button-primary-foreground-hover` to be a primitive type in the JSON string but got `%s`", jsonObj.get("button-primary-foreground-hover").toString()));
      }
      if ((jsonObj.get("button-secondary-background-default") != null && !jsonObj.get("button-secondary-background-default").isJsonNull()) && !jsonObj.get("button-secondary-background-default").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `button-secondary-background-default` to be a primitive type in the JSON string but got `%s`", jsonObj.get("button-secondary-background-default").toString()));
      }
      if ((jsonObj.get("button-secondary-background-disabled") != null && !jsonObj.get("button-secondary-background-disabled").isJsonNull()) && !jsonObj.get("button-secondary-background-disabled").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `button-secondary-background-disabled` to be a primitive type in the JSON string but got `%s`", jsonObj.get("button-secondary-background-disabled").toString()));
      }
      if ((jsonObj.get("button-secondary-background-hover") != null && !jsonObj.get("button-secondary-background-hover").isJsonNull()) && !jsonObj.get("button-secondary-background-hover").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `button-secondary-background-hover` to be a primitive type in the JSON string but got `%s`", jsonObj.get("button-secondary-background-hover").toString()));
      }
      if ((jsonObj.get("button-secondary-border-default") != null && !jsonObj.get("button-secondary-border-default").isJsonNull()) && !jsonObj.get("button-secondary-border-default").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `button-secondary-border-default` to be a primitive type in the JSON string but got `%s`", jsonObj.get("button-secondary-border-default").toString()));
      }
      if ((jsonObj.get("button-secondary-border-disabled") != null && !jsonObj.get("button-secondary-border-disabled").isJsonNull()) && !jsonObj.get("button-secondary-border-disabled").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `button-secondary-border-disabled` to be a primitive type in the JSON string but got `%s`", jsonObj.get("button-secondary-border-disabled").toString()));
      }
      if ((jsonObj.get("button-secondary-border-hover") != null && !jsonObj.get("button-secondary-border-hover").isJsonNull()) && !jsonObj.get("button-secondary-border-hover").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `button-secondary-border-hover` to be a primitive type in the JSON string but got `%s`", jsonObj.get("button-secondary-border-hover").toString()));
      }
      if ((jsonObj.get("button-secondary-foreground-default") != null && !jsonObj.get("button-secondary-foreground-default").isJsonNull()) && !jsonObj.get("button-secondary-foreground-default").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `button-secondary-foreground-default` to be a primitive type in the JSON string but got `%s`", jsonObj.get("button-secondary-foreground-default").toString()));
      }
      if ((jsonObj.get("button-secondary-foreground-disabled") != null && !jsonObj.get("button-secondary-foreground-disabled").isJsonNull()) && !jsonObj.get("button-secondary-foreground-disabled").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `button-secondary-foreground-disabled` to be a primitive type in the JSON string but got `%s`", jsonObj.get("button-secondary-foreground-disabled").toString()));
      }
      if ((jsonObj.get("button-secondary-foreground-hover") != null && !jsonObj.get("button-secondary-foreground-hover").isJsonNull()) && !jsonObj.get("button-secondary-foreground-hover").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `button-secondary-foreground-hover` to be a primitive type in the JSON string but got `%s`", jsonObj.get("button-secondary-foreground-hover").toString()));
      }
      if ((jsonObj.get("button-social-background-default") != null && !jsonObj.get("button-social-background-default").isJsonNull()) && !jsonObj.get("button-social-background-default").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `button-social-background-default` to be a primitive type in the JSON string but got `%s`", jsonObj.get("button-social-background-default").toString()));
      }
      if ((jsonObj.get("button-social-background-disabled") != null && !jsonObj.get("button-social-background-disabled").isJsonNull()) && !jsonObj.get("button-social-background-disabled").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `button-social-background-disabled` to be a primitive type in the JSON string but got `%s`", jsonObj.get("button-social-background-disabled").toString()));
      }
      if ((jsonObj.get("button-social-background-generic-provider") != null && !jsonObj.get("button-social-background-generic-provider").isJsonNull()) && !jsonObj.get("button-social-background-generic-provider").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `button-social-background-generic-provider` to be a primitive type in the JSON string but got `%s`", jsonObj.get("button-social-background-generic-provider").toString()));
      }
      if ((jsonObj.get("button-social-background-hover") != null && !jsonObj.get("button-social-background-hover").isJsonNull()) && !jsonObj.get("button-social-background-hover").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `button-social-background-hover` to be a primitive type in the JSON string but got `%s`", jsonObj.get("button-social-background-hover").toString()));
      }
      if ((jsonObj.get("button-social-border-default") != null && !jsonObj.get("button-social-border-default").isJsonNull()) && !jsonObj.get("button-social-border-default").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `button-social-border-default` to be a primitive type in the JSON string but got `%s`", jsonObj.get("button-social-border-default").toString()));
      }
      if ((jsonObj.get("button-social-border-disabled") != null && !jsonObj.get("button-social-border-disabled").isJsonNull()) && !jsonObj.get("button-social-border-disabled").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `button-social-border-disabled` to be a primitive type in the JSON string but got `%s`", jsonObj.get("button-social-border-disabled").toString()));
      }
      if ((jsonObj.get("button-social-border-generic-provider") != null && !jsonObj.get("button-social-border-generic-provider").isJsonNull()) && !jsonObj.get("button-social-border-generic-provider").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `button-social-border-generic-provider` to be a primitive type in the JSON string but got `%s`", jsonObj.get("button-social-border-generic-provider").toString()));
      }
      if ((jsonObj.get("button-social-border-hover") != null && !jsonObj.get("button-social-border-hover").isJsonNull()) && !jsonObj.get("button-social-border-hover").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `button-social-border-hover` to be a primitive type in the JSON string but got `%s`", jsonObj.get("button-social-border-hover").toString()));
      }
      if ((jsonObj.get("button-social-foreground-default") != null && !jsonObj.get("button-social-foreground-default").isJsonNull()) && !jsonObj.get("button-social-foreground-default").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `button-social-foreground-default` to be a primitive type in the JSON string but got `%s`", jsonObj.get("button-social-foreground-default").toString()));
      }
      if ((jsonObj.get("button-social-foreground-disabled") != null && !jsonObj.get("button-social-foreground-disabled").isJsonNull()) && !jsonObj.get("button-social-foreground-disabled").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `button-social-foreground-disabled` to be a primitive type in the JSON string but got `%s`", jsonObj.get("button-social-foreground-disabled").toString()));
      }
      if ((jsonObj.get("button-social-foreground-generic-provider") != null && !jsonObj.get("button-social-foreground-generic-provider").isJsonNull()) && !jsonObj.get("button-social-foreground-generic-provider").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `button-social-foreground-generic-provider` to be a primitive type in the JSON string but got `%s`", jsonObj.get("button-social-foreground-generic-provider").toString()));
      }
      if ((jsonObj.get("button-social-foreground-hover") != null && !jsonObj.get("button-social-foreground-hover").isJsonNull()) && !jsonObj.get("button-social-foreground-hover").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `button-social-foreground-hover` to be a primitive type in the JSON string but got `%s`", jsonObj.get("button-social-foreground-hover").toString()));
      }
      if ((jsonObj.get("checkbox-background-checked") != null && !jsonObj.get("checkbox-background-checked").isJsonNull()) && !jsonObj.get("checkbox-background-checked").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `checkbox-background-checked` to be a primitive type in the JSON string but got `%s`", jsonObj.get("checkbox-background-checked").toString()));
      }
      if ((jsonObj.get("checkbox-background-default") != null && !jsonObj.get("checkbox-background-default").isJsonNull()) && !jsonObj.get("checkbox-background-default").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `checkbox-background-default` to be a primitive type in the JSON string but got `%s`", jsonObj.get("checkbox-background-default").toString()));
      }
      if ((jsonObj.get("checkbox-border-checkbox-border-checked") != null && !jsonObj.get("checkbox-border-checkbox-border-checked").isJsonNull()) && !jsonObj.get("checkbox-border-checkbox-border-checked").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `checkbox-border-checkbox-border-checked` to be a primitive type in the JSON string but got `%s`", jsonObj.get("checkbox-border-checkbox-border-checked").toString()));
      }
      if ((jsonObj.get("checkbox-border-checkbox-border-default") != null && !jsonObj.get("checkbox-border-checkbox-border-default").isJsonNull()) && !jsonObj.get("checkbox-border-checkbox-border-default").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `checkbox-border-checkbox-border-default` to be a primitive type in the JSON string but got `%s`", jsonObj.get("checkbox-border-checkbox-border-default").toString()));
      }
      if ((jsonObj.get("checkbox-foreground-checked") != null && !jsonObj.get("checkbox-foreground-checked").isJsonNull()) && !jsonObj.get("checkbox-foreground-checked").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `checkbox-foreground-checked` to be a primitive type in the JSON string but got `%s`", jsonObj.get("checkbox-foreground-checked").toString()));
      }
      if ((jsonObj.get("checkbox-foreground-default") != null && !jsonObj.get("checkbox-foreground-default").isJsonNull()) && !jsonObj.get("checkbox-foreground-default").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `checkbox-foreground-default` to be a primitive type in the JSON string but got `%s`", jsonObj.get("checkbox-foreground-default").toString()));
      }
      if ((jsonObj.get("form-background-default") != null && !jsonObj.get("form-background-default").isJsonNull()) && !jsonObj.get("form-background-default").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `form-background-default` to be a primitive type in the JSON string but got `%s`", jsonObj.get("form-background-default").toString()));
      }
      if ((jsonObj.get("form-border-default") != null && !jsonObj.get("form-border-default").isJsonNull()) && !jsonObj.get("form-border-default").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `form-border-default` to be a primitive type in the JSON string but got `%s`", jsonObj.get("form-border-default").toString()));
      }
      if ((jsonObj.get("input-background-default") != null && !jsonObj.get("input-background-default").isJsonNull()) && !jsonObj.get("input-background-default").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `input-background-default` to be a primitive type in the JSON string but got `%s`", jsonObj.get("input-background-default").toString()));
      }
      if ((jsonObj.get("input-background-disabled") != null && !jsonObj.get("input-background-disabled").isJsonNull()) && !jsonObj.get("input-background-disabled").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `input-background-disabled` to be a primitive type in the JSON string but got `%s`", jsonObj.get("input-background-disabled").toString()));
      }
      if ((jsonObj.get("input-background-hover") != null && !jsonObj.get("input-background-hover").isJsonNull()) && !jsonObj.get("input-background-hover").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `input-background-hover` to be a primitive type in the JSON string but got `%s`", jsonObj.get("input-background-hover").toString()));
      }
      if ((jsonObj.get("input-border-default") != null && !jsonObj.get("input-border-default").isJsonNull()) && !jsonObj.get("input-border-default").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `input-border-default` to be a primitive type in the JSON string but got `%s`", jsonObj.get("input-border-default").toString()));
      }
      if ((jsonObj.get("input-border-disabled") != null && !jsonObj.get("input-border-disabled").isJsonNull()) && !jsonObj.get("input-border-disabled").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `input-border-disabled` to be a primitive type in the JSON string but got `%s`", jsonObj.get("input-border-disabled").toString()));
      }
      if ((jsonObj.get("input-border-focus") != null && !jsonObj.get("input-border-focus").isJsonNull()) && !jsonObj.get("input-border-focus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `input-border-focus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("input-border-focus").toString()));
      }
      if ((jsonObj.get("input-border-hover") != null && !jsonObj.get("input-border-hover").isJsonNull()) && !jsonObj.get("input-border-hover").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `input-border-hover` to be a primitive type in the JSON string but got `%s`", jsonObj.get("input-border-hover").toString()));
      }
      if ((jsonObj.get("input-foreground-disabled") != null && !jsonObj.get("input-foreground-disabled").isJsonNull()) && !jsonObj.get("input-foreground-disabled").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `input-foreground-disabled` to be a primitive type in the JSON string but got `%s`", jsonObj.get("input-foreground-disabled").toString()));
      }
      if ((jsonObj.get("input-foreground-primary") != null && !jsonObj.get("input-foreground-primary").isJsonNull()) && !jsonObj.get("input-foreground-primary").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `input-foreground-primary` to be a primitive type in the JSON string but got `%s`", jsonObj.get("input-foreground-primary").toString()));
      }
      if ((jsonObj.get("input-foreground-secondary") != null && !jsonObj.get("input-foreground-secondary").isJsonNull()) && !jsonObj.get("input-foreground-secondary").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `input-foreground-secondary` to be a primitive type in the JSON string but got `%s`", jsonObj.get("input-foreground-secondary").toString()));
      }
      if ((jsonObj.get("input-foreground-tertiary") != null && !jsonObj.get("input-foreground-tertiary").isJsonNull()) && !jsonObj.get("input-foreground-tertiary").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `input-foreground-tertiary` to be a primitive type in the JSON string but got `%s`", jsonObj.get("input-foreground-tertiary").toString()));
      }
      if ((jsonObj.get("interface-background-brand-primary") != null && !jsonObj.get("interface-background-brand-primary").isJsonNull()) && !jsonObj.get("interface-background-brand-primary").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `interface-background-brand-primary` to be a primitive type in the JSON string but got `%s`", jsonObj.get("interface-background-brand-primary").toString()));
      }
      if ((jsonObj.get("interface-background-brand-primary-hover") != null && !jsonObj.get("interface-background-brand-primary-hover").isJsonNull()) && !jsonObj.get("interface-background-brand-primary-hover").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `interface-background-brand-primary-hover` to be a primitive type in the JSON string but got `%s`", jsonObj.get("interface-background-brand-primary-hover").toString()));
      }
      if ((jsonObj.get("interface-background-brand-secondary") != null && !jsonObj.get("interface-background-brand-secondary").isJsonNull()) && !jsonObj.get("interface-background-brand-secondary").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `interface-background-brand-secondary` to be a primitive type in the JSON string but got `%s`", jsonObj.get("interface-background-brand-secondary").toString()));
      }
      if ((jsonObj.get("interface-background-brand-secondary-hover") != null && !jsonObj.get("interface-background-brand-secondary-hover").isJsonNull()) && !jsonObj.get("interface-background-brand-secondary-hover").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `interface-background-brand-secondary-hover` to be a primitive type in the JSON string but got `%s`", jsonObj.get("interface-background-brand-secondary-hover").toString()));
      }
      if ((jsonObj.get("interface-background-default-inverted") != null && !jsonObj.get("interface-background-default-inverted").isJsonNull()) && !jsonObj.get("interface-background-default-inverted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `interface-background-default-inverted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("interface-background-default-inverted").toString()));
      }
      if ((jsonObj.get("interface-background-default-inverted-hover") != null && !jsonObj.get("interface-background-default-inverted-hover").isJsonNull()) && !jsonObj.get("interface-background-default-inverted-hover").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `interface-background-default-inverted-hover` to be a primitive type in the JSON string but got `%s`", jsonObj.get("interface-background-default-inverted-hover").toString()));
      }
      if ((jsonObj.get("interface-background-default-none") != null && !jsonObj.get("interface-background-default-none").isJsonNull()) && !jsonObj.get("interface-background-default-none").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `interface-background-default-none` to be a primitive type in the JSON string but got `%s`", jsonObj.get("interface-background-default-none").toString()));
      }
      if ((jsonObj.get("interface-background-default-primary") != null && !jsonObj.get("interface-background-default-primary").isJsonNull()) && !jsonObj.get("interface-background-default-primary").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `interface-background-default-primary` to be a primitive type in the JSON string but got `%s`", jsonObj.get("interface-background-default-primary").toString()));
      }
      if ((jsonObj.get("interface-background-default-primary-hover") != null && !jsonObj.get("interface-background-default-primary-hover").isJsonNull()) && !jsonObj.get("interface-background-default-primary-hover").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `interface-background-default-primary-hover` to be a primitive type in the JSON string but got `%s`", jsonObj.get("interface-background-default-primary-hover").toString()));
      }
      if ((jsonObj.get("interface-background-default-secondary") != null && !jsonObj.get("interface-background-default-secondary").isJsonNull()) && !jsonObj.get("interface-background-default-secondary").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `interface-background-default-secondary` to be a primitive type in the JSON string but got `%s`", jsonObj.get("interface-background-default-secondary").toString()));
      }
      if ((jsonObj.get("interface-background-default-secondary-hover") != null && !jsonObj.get("interface-background-default-secondary-hover").isJsonNull()) && !jsonObj.get("interface-background-default-secondary-hover").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `interface-background-default-secondary-hover` to be a primitive type in the JSON string but got `%s`", jsonObj.get("interface-background-default-secondary-hover").toString()));
      }
      if ((jsonObj.get("interface-background-default-tertiary") != null && !jsonObj.get("interface-background-default-tertiary").isJsonNull()) && !jsonObj.get("interface-background-default-tertiary").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `interface-background-default-tertiary` to be a primitive type in the JSON string but got `%s`", jsonObj.get("interface-background-default-tertiary").toString()));
      }
      if ((jsonObj.get("interface-background-default-tertiary-hover") != null && !jsonObj.get("interface-background-default-tertiary-hover").isJsonNull()) && !jsonObj.get("interface-background-default-tertiary-hover").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `interface-background-default-tertiary-hover` to be a primitive type in the JSON string but got `%s`", jsonObj.get("interface-background-default-tertiary-hover").toString()));
      }
      if ((jsonObj.get("interface-background-disabled-disabled") != null && !jsonObj.get("interface-background-disabled-disabled").isJsonNull()) && !jsonObj.get("interface-background-disabled-disabled").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `interface-background-disabled-disabled` to be a primitive type in the JSON string but got `%s`", jsonObj.get("interface-background-disabled-disabled").toString()));
      }
      if ((jsonObj.get("interface-background-validation-danger") != null && !jsonObj.get("interface-background-validation-danger").isJsonNull()) && !jsonObj.get("interface-background-validation-danger").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `interface-background-validation-danger` to be a primitive type in the JSON string but got `%s`", jsonObj.get("interface-background-validation-danger").toString()));
      }
      if ((jsonObj.get("interface-background-validation-success") != null && !jsonObj.get("interface-background-validation-success").isJsonNull()) && !jsonObj.get("interface-background-validation-success").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `interface-background-validation-success` to be a primitive type in the JSON string but got `%s`", jsonObj.get("interface-background-validation-success").toString()));
      }
      if ((jsonObj.get("interface-background-validation-warning") != null && !jsonObj.get("interface-background-validation-warning").isJsonNull()) && !jsonObj.get("interface-background-validation-warning").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `interface-background-validation-warning` to be a primitive type in the JSON string but got `%s`", jsonObj.get("interface-background-validation-warning").toString()));
      }
      if ((jsonObj.get("interface-border-brand-brand") != null && !jsonObj.get("interface-border-brand-brand").isJsonNull()) && !jsonObj.get("interface-border-brand-brand").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `interface-border-brand-brand` to be a primitive type in the JSON string but got `%s`", jsonObj.get("interface-border-brand-brand").toString()));
      }
      if ((jsonObj.get("interface-border-default-inverted") != null && !jsonObj.get("interface-border-default-inverted").isJsonNull()) && !jsonObj.get("interface-border-default-inverted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `interface-border-default-inverted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("interface-border-default-inverted").toString()));
      }
      if ((jsonObj.get("interface-border-default-none") != null && !jsonObj.get("interface-border-default-none").isJsonNull()) && !jsonObj.get("interface-border-default-none").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `interface-border-default-none` to be a primitive type in the JSON string but got `%s`", jsonObj.get("interface-border-default-none").toString()));
      }
      if ((jsonObj.get("interface-border-default-primary") != null && !jsonObj.get("interface-border-default-primary").isJsonNull()) && !jsonObj.get("interface-border-default-primary").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `interface-border-default-primary` to be a primitive type in the JSON string but got `%s`", jsonObj.get("interface-border-default-primary").toString()));
      }
      if ((jsonObj.get("interface-border-disabled-disabled") != null && !jsonObj.get("interface-border-disabled-disabled").isJsonNull()) && !jsonObj.get("interface-border-disabled-disabled").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `interface-border-disabled-disabled` to be a primitive type in the JSON string but got `%s`", jsonObj.get("interface-border-disabled-disabled").toString()));
      }
      if ((jsonObj.get("interface-border-validation-danger") != null && !jsonObj.get("interface-border-validation-danger").isJsonNull()) && !jsonObj.get("interface-border-validation-danger").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `interface-border-validation-danger` to be a primitive type in the JSON string but got `%s`", jsonObj.get("interface-border-validation-danger").toString()));
      }
      if ((jsonObj.get("interface-border-validation-success") != null && !jsonObj.get("interface-border-validation-success").isJsonNull()) && !jsonObj.get("interface-border-validation-success").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `interface-border-validation-success` to be a primitive type in the JSON string but got `%s`", jsonObj.get("interface-border-validation-success").toString()));
      }
      if ((jsonObj.get("interface-border-validation-warning") != null && !jsonObj.get("interface-border-validation-warning").isJsonNull()) && !jsonObj.get("interface-border-validation-warning").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `interface-border-validation-warning` to be a primitive type in the JSON string but got `%s`", jsonObj.get("interface-border-validation-warning").toString()));
      }
      if ((jsonObj.get("interface-foreground-brand-on-primary") != null && !jsonObj.get("interface-foreground-brand-on-primary").isJsonNull()) && !jsonObj.get("interface-foreground-brand-on-primary").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `interface-foreground-brand-on-primary` to be a primitive type in the JSON string but got `%s`", jsonObj.get("interface-foreground-brand-on-primary").toString()));
      }
      if ((jsonObj.get("interface-foreground-brand-on-secondary") != null && !jsonObj.get("interface-foreground-brand-on-secondary").isJsonNull()) && !jsonObj.get("interface-foreground-brand-on-secondary").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `interface-foreground-brand-on-secondary` to be a primitive type in the JSON string but got `%s`", jsonObj.get("interface-foreground-brand-on-secondary").toString()));
      }
      if ((jsonObj.get("interface-foreground-brand-primary") != null && !jsonObj.get("interface-foreground-brand-primary").isJsonNull()) && !jsonObj.get("interface-foreground-brand-primary").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `interface-foreground-brand-primary` to be a primitive type in the JSON string but got `%s`", jsonObj.get("interface-foreground-brand-primary").toString()));
      }
      if ((jsonObj.get("interface-foreground-brand-secondary") != null && !jsonObj.get("interface-foreground-brand-secondary").isJsonNull()) && !jsonObj.get("interface-foreground-brand-secondary").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `interface-foreground-brand-secondary` to be a primitive type in the JSON string but got `%s`", jsonObj.get("interface-foreground-brand-secondary").toString()));
      }
      if ((jsonObj.get("interface-foreground-default-inverted") != null && !jsonObj.get("interface-foreground-default-inverted").isJsonNull()) && !jsonObj.get("interface-foreground-default-inverted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `interface-foreground-default-inverted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("interface-foreground-default-inverted").toString()));
      }
      if ((jsonObj.get("interface-foreground-default-primary") != null && !jsonObj.get("interface-foreground-default-primary").isJsonNull()) && !jsonObj.get("interface-foreground-default-primary").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `interface-foreground-default-primary` to be a primitive type in the JSON string but got `%s`", jsonObj.get("interface-foreground-default-primary").toString()));
      }
      if ((jsonObj.get("interface-foreground-default-secondary") != null && !jsonObj.get("interface-foreground-default-secondary").isJsonNull()) && !jsonObj.get("interface-foreground-default-secondary").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `interface-foreground-default-secondary` to be a primitive type in the JSON string but got `%s`", jsonObj.get("interface-foreground-default-secondary").toString()));
      }
      if ((jsonObj.get("interface-foreground-default-tertiary") != null && !jsonObj.get("interface-foreground-default-tertiary").isJsonNull()) && !jsonObj.get("interface-foreground-default-tertiary").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `interface-foreground-default-tertiary` to be a primitive type in the JSON string but got `%s`", jsonObj.get("interface-foreground-default-tertiary").toString()));
      }
      if ((jsonObj.get("interface-foreground-disabled-disabled") != null && !jsonObj.get("interface-foreground-disabled-disabled").isJsonNull()) && !jsonObj.get("interface-foreground-disabled-disabled").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `interface-foreground-disabled-disabled` to be a primitive type in the JSON string but got `%s`", jsonObj.get("interface-foreground-disabled-disabled").toString()));
      }
      if ((jsonObj.get("interface-foreground-disabled-on-disabled") != null && !jsonObj.get("interface-foreground-disabled-on-disabled").isJsonNull()) && !jsonObj.get("interface-foreground-disabled-on-disabled").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `interface-foreground-disabled-on-disabled` to be a primitive type in the JSON string but got `%s`", jsonObj.get("interface-foreground-disabled-on-disabled").toString()));
      }
      if ((jsonObj.get("interface-foreground-validation-danger") != null && !jsonObj.get("interface-foreground-validation-danger").isJsonNull()) && !jsonObj.get("interface-foreground-validation-danger").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `interface-foreground-validation-danger` to be a primitive type in the JSON string but got `%s`", jsonObj.get("interface-foreground-validation-danger").toString()));
      }
      if ((jsonObj.get("interface-foreground-validation-success") != null && !jsonObj.get("interface-foreground-validation-success").isJsonNull()) && !jsonObj.get("interface-foreground-validation-success").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `interface-foreground-validation-success` to be a primitive type in the JSON string but got `%s`", jsonObj.get("interface-foreground-validation-success").toString()));
      }
      if ((jsonObj.get("interface-foreground-validation-warning") != null && !jsonObj.get("interface-foreground-validation-warning").isJsonNull()) && !jsonObj.get("interface-foreground-validation-warning").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `interface-foreground-validation-warning` to be a primitive type in the JSON string but got `%s`", jsonObj.get("interface-foreground-validation-warning").toString()));
      }
      if ((jsonObj.get("ory-background-default") != null && !jsonObj.get("ory-background-default").isJsonNull()) && !jsonObj.get("ory-background-default").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ory-background-default` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ory-background-default").toString()));
      }
      if ((jsonObj.get("ory-border-default") != null && !jsonObj.get("ory-border-default").isJsonNull()) && !jsonObj.get("ory-border-default").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ory-border-default` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ory-border-default").toString()));
      }
      if ((jsonObj.get("ory-foreground-default") != null && !jsonObj.get("ory-foreground-default").isJsonNull()) && !jsonObj.get("ory-foreground-default").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ory-foreground-default` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ory-foreground-default").toString()));
      }
      if ((jsonObj.get("radio-background-checked") != null && !jsonObj.get("radio-background-checked").isJsonNull()) && !jsonObj.get("radio-background-checked").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `radio-background-checked` to be a primitive type in the JSON string but got `%s`", jsonObj.get("radio-background-checked").toString()));
      }
      if ((jsonObj.get("radio-background-default") != null && !jsonObj.get("radio-background-default").isJsonNull()) && !jsonObj.get("radio-background-default").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `radio-background-default` to be a primitive type in the JSON string but got `%s`", jsonObj.get("radio-background-default").toString()));
      }
      if ((jsonObj.get("radio-border-checked") != null && !jsonObj.get("radio-border-checked").isJsonNull()) && !jsonObj.get("radio-border-checked").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `radio-border-checked` to be a primitive type in the JSON string but got `%s`", jsonObj.get("radio-border-checked").toString()));
      }
      if ((jsonObj.get("radio-border-default") != null && !jsonObj.get("radio-border-default").isJsonNull()) && !jsonObj.get("radio-border-default").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `radio-border-default` to be a primitive type in the JSON string but got `%s`", jsonObj.get("radio-border-default").toString()));
      }
      if ((jsonObj.get("radio-foreground-checked") != null && !jsonObj.get("radio-foreground-checked").isJsonNull()) && !jsonObj.get("radio-foreground-checked").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `radio-foreground-checked` to be a primitive type in the JSON string but got `%s`", jsonObj.get("radio-foreground-checked").toString()));
      }
      if ((jsonObj.get("radio-foreground-default") != null && !jsonObj.get("radio-foreground-default").isJsonNull()) && !jsonObj.get("radio-foreground-default").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `radio-foreground-default` to be a primitive type in the JSON string but got `%s`", jsonObj.get("radio-foreground-default").toString()));
      }
      if ((jsonObj.get("toggle-background-checked") != null && !jsonObj.get("toggle-background-checked").isJsonNull()) && !jsonObj.get("toggle-background-checked").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `toggle-background-checked` to be a primitive type in the JSON string but got `%s`", jsonObj.get("toggle-background-checked").toString()));
      }
      if ((jsonObj.get("toggle-background-default") != null && !jsonObj.get("toggle-background-default").isJsonNull()) && !jsonObj.get("toggle-background-default").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `toggle-background-default` to be a primitive type in the JSON string but got `%s`", jsonObj.get("toggle-background-default").toString()));
      }
      if ((jsonObj.get("toggle-border-checked") != null && !jsonObj.get("toggle-border-checked").isJsonNull()) && !jsonObj.get("toggle-border-checked").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `toggle-border-checked` to be a primitive type in the JSON string but got `%s`", jsonObj.get("toggle-border-checked").toString()));
      }
      if ((jsonObj.get("toggle-border-default") != null && !jsonObj.get("toggle-border-default").isJsonNull()) && !jsonObj.get("toggle-border-default").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `toggle-border-default` to be a primitive type in the JSON string but got `%s`", jsonObj.get("toggle-border-default").toString()));
      }
      if ((jsonObj.get("toggle-foreground-checked") != null && !jsonObj.get("toggle-foreground-checked").isJsonNull()) && !jsonObj.get("toggle-foreground-checked").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `toggle-foreground-checked` to be a primitive type in the JSON string but got `%s`", jsonObj.get("toggle-foreground-checked").toString()));
      }
      if ((jsonObj.get("toggle-foreground-default") != null && !jsonObj.get("toggle-foreground-default").isJsonNull()) && !jsonObj.get("toggle-foreground-default").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `toggle-foreground-default` to be a primitive type in the JSON string but got `%s`", jsonObj.get("toggle-foreground-default").toString()));
      }
      if ((jsonObj.get("ui-100") != null && !jsonObj.get("ui-100").isJsonNull()) && !jsonObj.get("ui-100").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ui-100` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ui-100").toString()));
      }
      if ((jsonObj.get("ui-200") != null && !jsonObj.get("ui-200").isJsonNull()) && !jsonObj.get("ui-200").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ui-200` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ui-200").toString()));
      }
      if ((jsonObj.get("ui-300") != null && !jsonObj.get("ui-300").isJsonNull()) && !jsonObj.get("ui-300").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ui-300` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ui-300").toString()));
      }
      if ((jsonObj.get("ui-400") != null && !jsonObj.get("ui-400").isJsonNull()) && !jsonObj.get("ui-400").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ui-400` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ui-400").toString()));
      }
      if ((jsonObj.get("ui-50") != null && !jsonObj.get("ui-50").isJsonNull()) && !jsonObj.get("ui-50").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ui-50` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ui-50").toString()));
      }
      if ((jsonObj.get("ui-500") != null && !jsonObj.get("ui-500").isJsonNull()) && !jsonObj.get("ui-500").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ui-500` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ui-500").toString()));
      }
      if ((jsonObj.get("ui-600") != null && !jsonObj.get("ui-600").isJsonNull()) && !jsonObj.get("ui-600").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ui-600` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ui-600").toString()));
      }
      if ((jsonObj.get("ui-700") != null && !jsonObj.get("ui-700").isJsonNull()) && !jsonObj.get("ui-700").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ui-700` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ui-700").toString()));
      }
      if ((jsonObj.get("ui-800") != null && !jsonObj.get("ui-800").isJsonNull()) && !jsonObj.get("ui-800").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ui-800` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ui-800").toString()));
      }
      if ((jsonObj.get("ui-900") != null && !jsonObj.get("ui-900").isJsonNull()) && !jsonObj.get("ui-900").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ui-900` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ui-900").toString()));
      }
      if ((jsonObj.get("ui-950") != null && !jsonObj.get("ui-950").isJsonNull()) && !jsonObj.get("ui-950").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ui-950` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ui-950").toString()));
      }
      if ((jsonObj.get("ui-black") != null && !jsonObj.get("ui-black").isJsonNull()) && !jsonObj.get("ui-black").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ui-black` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ui-black").toString()));
      }
      if ((jsonObj.get("ui-danger") != null && !jsonObj.get("ui-danger").isJsonNull()) && !jsonObj.get("ui-danger").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ui-danger` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ui-danger").toString()));
      }
      if ((jsonObj.get("ui-success") != null && !jsonObj.get("ui-success").isJsonNull()) && !jsonObj.get("ui-success").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ui-success` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ui-success").toString()));
      }
      if ((jsonObj.get("ui-transparent") != null && !jsonObj.get("ui-transparent").isJsonNull()) && !jsonObj.get("ui-transparent").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ui-transparent` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ui-transparent").toString()));
      }
      if ((jsonObj.get("ui-warning") != null && !jsonObj.get("ui-warning").isJsonNull()) && !jsonObj.get("ui-warning").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ui-warning` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ui-warning").toString()));
      }
      if ((jsonObj.get("ui-white") != null && !jsonObj.get("ui-white").isJsonNull()) && !jsonObj.get("ui-white").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ui-white` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ui-white").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AccountExperienceColors.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AccountExperienceColors' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AccountExperienceColors> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AccountExperienceColors.class));

       return (TypeAdapter<T>) new TypeAdapter<AccountExperienceColors>() {
           @Override
           public void write(JsonWriter out, AccountExperienceColors value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additional properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   JsonElement jsonElement = gson.toJsonTree(entry.getValue());
                   if (jsonElement.isJsonArray()) {
                     obj.add(entry.getKey(), jsonElement.getAsJsonArray());
                   } else {
                     obj.add(entry.getKey(), jsonElement.getAsJsonObject());
                   }
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public AccountExperienceColors read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             JsonObject jsonObj = jsonElement.getAsJsonObject();
             // store additional fields in the deserialized instance
             AccountExperienceColors instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AccountExperienceColors given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AccountExperienceColors
   * @throws IOException if the JSON string is invalid with respect to AccountExperienceColors
   */
  public static AccountExperienceColors fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AccountExperienceColors.class);
  }

  /**
   * Convert an instance of AccountExperienceColors to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

