/*
 * Ory APIs
 * Documentation for all public and administrative Ory APIs. Administrative APIs can only be accessed with a valid Personal Access Token. Public APIs are mostly used in browsers. 
 *
 * The version of the OpenAPI document: v0.0.1-alpha.152
 * Contact: support@ory.sh
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package sh.ory.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.UUID;
import sh.ory.model.NullPlan;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for Subscription
 */
public class SubscriptionTest {
    private final Subscription model = new Subscription();

    /**
     * Model tests for Subscription
     */
    @Test
    public void testSubscription() {
        // TODO: test Subscription
    }

    /**
     * Test the property 'createdAt'
     */
    @Test
    public void createdAtTest() {
        // TODO: test createdAt
    }

    /**
     * Test the property 'currentPlan'
     */
    @Test
    public void currentPlanTest() {
        // TODO: test currentPlan
    }

    /**
     * Test the property 'customerId'
     */
    @Test
    public void customerIdTest() {
        // TODO: test customerId
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'ongoingStripeCheckoutId'
     */
    @Test
    public void ongoingStripeCheckoutIdTest() {
        // TODO: test ongoingStripeCheckoutId
    }

    /**
     * Test the property 'payedUntil'
     */
    @Test
    public void payedUntilTest() {
        // TODO: test payedUntil
    }

    /**
     * Test the property 'planChangesAt'
     */
    @Test
    public void planChangesAtTest() {
        // TODO: test planChangesAt
    }

    /**
     * Test the property 'planChangesTo'
     */
    @Test
    public void planChangesToTest() {
        // TODO: test planChangesTo
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'updatedAt'
     */
    @Test
    public void updatedAtTest() {
        // TODO: test updatedAt
    }

}
