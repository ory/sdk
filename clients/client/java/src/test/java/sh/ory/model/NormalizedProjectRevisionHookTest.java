/*
 * Ory APIs
 * Documentation for all public and administrative Ory APIs. Administrative APIs can only be accessed with a valid Personal Access Token. Public APIs are mostly used in browsers. 
 *
 * The version of the OpenAPI document: v0.0.1-alpha.183
 * Contact: support@ory.sh
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package sh.ory.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.UUID;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for NormalizedProjectRevisionHook
 */
public class NormalizedProjectRevisionHookTest {
    private final NormalizedProjectRevisionHook model = new NormalizedProjectRevisionHook();

    /**
     * Model tests for NormalizedProjectRevisionHook
     */
    @Test
    public void testNormalizedProjectRevisionHook() {
        // TODO: test NormalizedProjectRevisionHook
    }

    /**
     * Test the property 'configKey'
     */
    @Test
    public void configKeyTest() {
        // TODO: test configKey
    }

    /**
     * Test the property 'createdAt'
     */
    @Test
    public void createdAtTest() {
        // TODO: test createdAt
    }

    /**
     * Test the property 'hook'
     */
    @Test
    public void hookTest() {
        // TODO: test hook
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'projectRevisionId'
     */
    @Test
    public void projectRevisionIdTest() {
        // TODO: test projectRevisionId
    }

    /**
     * Test the property 'updatedAt'
     */
    @Test
    public void updatedAtTest() {
        // TODO: test updatedAt
    }

    /**
     * Test the property 'webHookConfigAuthApiKeyIn'
     */
    @Test
    public void webHookConfigAuthApiKeyInTest() {
        // TODO: test webHookConfigAuthApiKeyIn
    }

    /**
     * Test the property 'webHookConfigAuthApiKeyName'
     */
    @Test
    public void webHookConfigAuthApiKeyNameTest() {
        // TODO: test webHookConfigAuthApiKeyName
    }

    /**
     * Test the property 'webHookConfigAuthApiKeyValue'
     */
    @Test
    public void webHookConfigAuthApiKeyValueTest() {
        // TODO: test webHookConfigAuthApiKeyValue
    }

    /**
     * Test the property 'webHookConfigAuthBasicAuthPassword'
     */
    @Test
    public void webHookConfigAuthBasicAuthPasswordTest() {
        // TODO: test webHookConfigAuthBasicAuthPassword
    }

    /**
     * Test the property 'webHookConfigAuthBasicAuthUser'
     */
    @Test
    public void webHookConfigAuthBasicAuthUserTest() {
        // TODO: test webHookConfigAuthBasicAuthUser
    }

    /**
     * Test the property 'webHookConfigAuthType'
     */
    @Test
    public void webHookConfigAuthTypeTest() {
        // TODO: test webHookConfigAuthType
    }

    /**
     * Test the property 'webHookConfigBody'
     */
    @Test
    public void webHookConfigBodyTest() {
        // TODO: test webHookConfigBody
    }

    /**
     * Test the property 'webHookConfigMethod'
     */
    @Test
    public void webHookConfigMethodTest() {
        // TODO: test webHookConfigMethod
    }

    /**
     * Test the property 'webHookConfigResponseIgnore'
     */
    @Test
    public void webHookConfigResponseIgnoreTest() {
        // TODO: test webHookConfigResponseIgnore
    }

    /**
     * Test the property 'webHookConfigUrl'
     */
    @Test
    public void webHookConfigUrlTest() {
        // TODO: test webHookConfigUrl
    }

}
