/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package sh.ory.client-kotlin-multiplatform.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import sh.ory.client-kotlin-multiplatform.models.TrustedOAuth2JwtGrantIssuer
import sh.ory.client-kotlin-multiplatform.models.TrustedOAuth2JwtGrantJsonWebKey

class TrustedOAuth2JwtGrantIssuerTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of TrustedOAuth2JwtGrantIssuer
        //val modelInstance = TrustedOAuth2JwtGrantIssuer()

        // to test the property `allowAnySubject` - The \"allow_any_subject\" indicates that the issuer is allowed to have any principal as the subject of the JWT.
        should("test allowAnySubject") {
            // uncomment below to test the property
            //modelInstance.allowAnySubject shouldBe ("TODO")
        }

        // to test the property `createdAt` - The \"created_at\" indicates, when grant was created.
        should("test createdAt") {
            // uncomment below to test the property
            //modelInstance.createdAt shouldBe ("TODO")
        }

        // to test the property `expiresAt` - The \"expires_at\" indicates, when grant will expire, so we will reject assertion from \"issuer\" targeting \"subject\".
        should("test expiresAt") {
            // uncomment below to test the property
            //modelInstance.expiresAt shouldBe ("TODO")
        }

        // to test the property `id`
        should("test id") {
            // uncomment below to test the property
            //modelInstance.id shouldBe ("TODO")
        }

        // to test the property `issuer` - The \"issuer\" identifies the principal that issued the JWT assertion (same as \"iss\" claim in JWT).
        should("test issuer") {
            // uncomment below to test the property
            //modelInstance.issuer shouldBe ("TODO")
        }

        // to test the property `publicKey`
        should("test publicKey") {
            // uncomment below to test the property
            //modelInstance.publicKey shouldBe ("TODO")
        }

        // to test the property `scope` - The \"scope\" contains list of scope values (as described in Section 3.3 of OAuth 2.0 [RFC6749])
        should("test scope") {
            // uncomment below to test the property
            //modelInstance.scope shouldBe ("TODO")
        }

        // to test the property `subject` - The \"subject\" identifies the principal that is the subject of the JWT.
        should("test subject") {
            // uncomment below to test the property
            //modelInstance.subject shouldBe ("TODO")
        }

    }
}
