/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package sh.ory.client-kotlin-multiplatform.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import sh.ory.client-kotlin-multiplatform.apis.RelationshipApi
import sh.ory.client-kotlin-multiplatform.models.CheckOplSyntaxResult
import sh.ory.client-kotlin-multiplatform.models.CreateRelationshipBody
import sh.ory.client-kotlin-multiplatform.models.ErrorGeneric
import sh.ory.client-kotlin-multiplatform.models.Relationship
import sh.ory.client-kotlin-multiplatform.models.RelationshipNamespaces
import sh.ory.client-kotlin-multiplatform.models.RelationshipPatch
import sh.ory.client-kotlin-multiplatform.models.Relationships

class RelationshipApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of RelationshipApi
        //val apiInstance = RelationshipApi()

        // to test checkOplSyntax
        should("test checkOplSyntax") {
            // uncomment below to test checkOplSyntax
            //val body : kotlin.String = body_example // kotlin.String | 
            //val result : CheckOplSyntaxResult = apiInstance.checkOplSyntax(body)
            //result shouldBe ("TODO")
        }

        // to test createRelationship
        should("test createRelationship") {
            // uncomment below to test createRelationship
            //val createRelationshipBody : CreateRelationshipBody =  // CreateRelationshipBody | 
            //val result : Relationship = apiInstance.createRelationship(createRelationshipBody)
            //result shouldBe ("TODO")
        }

        // to test deleteRelationships
        should("test deleteRelationships") {
            // uncomment below to test deleteRelationships
            //val namespace : kotlin.String = namespace_example // kotlin.String | Namespace of the Relationship
            //val `object` : kotlin.String = `object`_example // kotlin.String | Object of the Relationship
            //val relation : kotlin.String = relation_example // kotlin.String | Relation of the Relationship
            //val subjectId : kotlin.String = subjectId_example // kotlin.String | SubjectID of the Relationship
            //val subjectSetNamespace : kotlin.String = subjectSetNamespace_example // kotlin.String | Namespace of the Subject Set
            //val subjectSetObject : kotlin.String = subjectSetObject_example // kotlin.String | Object of the Subject Set
            //val subjectSetRelation : kotlin.String = subjectSetRelation_example // kotlin.String | Relation of the Subject Set
            //apiInstance.deleteRelationships(namespace, `object`, relation, subjectId, subjectSetNamespace, subjectSetObject, subjectSetRelation)
        }

        // to test getRelationships
        should("test getRelationships") {
            // uncomment below to test getRelationships
            //val pageToken : kotlin.String = pageToken_example // kotlin.String | 
            //val pageSize : kotlin.Long = 789 // kotlin.Long | 
            //val namespace : kotlin.String = namespace_example // kotlin.String | Namespace of the Relationship
            //val `object` : kotlin.String = `object`_example // kotlin.String | Object of the Relationship
            //val relation : kotlin.String = relation_example // kotlin.String | Relation of the Relationship
            //val subjectId : kotlin.String = subjectId_example // kotlin.String | SubjectID of the Relationship
            //val subjectSetNamespace : kotlin.String = subjectSetNamespace_example // kotlin.String | Namespace of the Subject Set
            //val subjectSetObject : kotlin.String = subjectSetObject_example // kotlin.String | Object of the Subject Set
            //val subjectSetRelation : kotlin.String = subjectSetRelation_example // kotlin.String | Relation of the Subject Set
            //val result : Relationships = apiInstance.getRelationships(pageToken, pageSize, namespace, `object`, relation, subjectId, subjectSetNamespace, subjectSetObject, subjectSetRelation)
            //result shouldBe ("TODO")
        }

        // to test listRelationshipNamespaces
        should("test listRelationshipNamespaces") {
            // uncomment below to test listRelationshipNamespaces
            //val result : RelationshipNamespaces = apiInstance.listRelationshipNamespaces()
            //result shouldBe ("TODO")
        }

        // to test patchRelationships
        should("test patchRelationships") {
            // uncomment below to test patchRelationships
            //val relationshipPatch : kotlin.collections.List<RelationshipPatch> =  // kotlin.collections.List<RelationshipPatch> | 
            //apiInstance.patchRelationships(relationshipPatch)
        }

    }
}
