/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package sh.ory.client-kotlin-multiplatform.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import sh.ory.client-kotlin-multiplatform.models.AcceptOAuth2ConsentRequestSession

class AcceptOAuth2ConsentRequestSessionTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of AcceptOAuth2ConsentRequestSession
        //val modelInstance = AcceptOAuth2ConsentRequestSession()

        // to test the property `accessToken` - AccessToken sets session data for the access and refresh token, as well as any future tokens issued by the refresh grant. Keep in mind that this data will be available to anyone performing OAuth 2.0 Challenge Introspection. If only your services can perform OAuth 2.0 Challenge Introspection, this is usually fine. But if third parties can access that endpoint as well, sensitive data from the session might be exposed to them. Use with care!
        should("test accessToken") {
            // uncomment below to test the property
            //modelInstance.accessToken shouldBe ("TODO")
        }

        // to test the property `idToken` - IDToken sets session data for the OpenID Connect ID token. Keep in mind that the session'id payloads are readable by anyone that has access to the ID Challenge. Use with care!
        should("test idToken") {
            // uncomment below to test the property
            //modelInstance.idToken shouldBe ("TODO")
        }

    }
}
