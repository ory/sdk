/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package sh.ory.client-kotlin-multiplatform.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import sh.ory.client-kotlin-multiplatform.models.NormalizedProject
import sh.ory.client-kotlin-multiplatform.models.NormalizedProjectRevision
import sh.ory.client-kotlin-multiplatform.models.Workspace

class NormalizedProjectTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of NormalizedProject
        //val modelInstance = NormalizedProject()

        // to test the property `createdAt` - The Project's Creation Date
        should("test createdAt") {
            // uncomment below to test the property
            //modelInstance.createdAt shouldBe ("TODO")
        }

        // to test the property `currentRevision`
        should("test currentRevision") {
            // uncomment below to test the property
            //modelInstance.currentRevision shouldBe ("TODO")
        }

        // to test the property `environment` - The environment of the project. prod Production stage Staging dev Development
        should("test environment") {
            // uncomment below to test the property
            //modelInstance.environment shouldBe ("TODO")
        }

        // to test the property `homeRegion` - The project's data home region. eu-central EUCentral asia-northeast AsiaNorthEast us-east USEast us-west USWest us US global Global
        should("test homeRegion") {
            // uncomment below to test the property
            //modelInstance.homeRegion shouldBe ("TODO")
        }

        // to test the property `hosts`
        should("test hosts") {
            // uncomment below to test the property
            //modelInstance.hosts shouldBe ("TODO")
        }

        // to test the property `id` - The project's ID.
        should("test id") {
            // uncomment below to test the property
            //modelInstance.id shouldBe ("TODO")
        }

        // to test the property `slug` - The project's slug
        should("test slug") {
            // uncomment below to test the property
            //modelInstance.slug shouldBe ("TODO")
        }

        // to test the property `state` - The state of the project. running Running halted Halted deleted Deleted
        should("test state") {
            // uncomment below to test the property
            //modelInstance.state shouldBe ("TODO")
        }

        // to test the property `updatedAt` - Last Time Project was Updated
        should("test updatedAt") {
            // uncomment below to test the property
            //modelInstance.updatedAt shouldBe ("TODO")
        }

        // to test the property `workspaceId`
        should("test workspaceId") {
            // uncomment below to test the property
            //modelInstance.workspaceId shouldBe ("TODO")
        }

        // to test the property `subscriptionId`
        should("test subscriptionId") {
            // uncomment below to test the property
            //modelInstance.subscriptionId shouldBe ("TODO")
        }

        // to test the property `subscriptionPlan`
        should("test subscriptionPlan") {
            // uncomment below to test the property
            //modelInstance.subscriptionPlan shouldBe ("TODO")
        }

        // to test the property `workspace`
        should("test workspace") {
            // uncomment below to test the property
            //modelInstance.workspace shouldBe ("TODO")
        }

    }
}
