/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package sh.ory.client-kotlin-multiplatform.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import sh.ory.client-kotlin-multiplatform.models.UiNodeScriptAttributes

class UiNodeScriptAttributesTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of UiNodeScriptAttributes
        //val modelInstance = UiNodeScriptAttributes()

        // to test the property `async` - The script async type
        should("test async") {
            // uncomment below to test the property
            //modelInstance.async shouldBe ("TODO")
        }

        // to test the property `crossorigin` - The script cross origin policy
        should("test crossorigin") {
            // uncomment below to test the property
            //modelInstance.crossorigin shouldBe ("TODO")
        }

        // to test the property `id` - A unique identifier
        should("test id") {
            // uncomment below to test the property
            //modelInstance.id shouldBe ("TODO")
        }

        // to test the property `integrity` - The script's integrity hash
        should("test integrity") {
            // uncomment below to test the property
            //modelInstance.integrity shouldBe ("TODO")
        }

        // to test the property `nodeType` - NodeType represents this node's types. It is a mirror of `node.type` and is primarily used to allow compatibility with OpenAPI 3.0. In this struct it technically always is \"script\". text Text input Input img Image a Anchor script Script
        should("test nodeType") {
            // uncomment below to test the property
            //modelInstance.nodeType shouldBe ("TODO")
        }

        // to test the property `nonce` - Nonce for CSP  A nonce you may want to use to improve your Content Security Policy. You do not have to use this value but if you want to improve your CSP policies you may use it. You can also choose to use your own nonce value!
        should("test nonce") {
            // uncomment below to test the property
            //modelInstance.nonce shouldBe ("TODO")
        }

        // to test the property `referrerpolicy` - The script referrer policy
        should("test referrerpolicy") {
            // uncomment below to test the property
            //modelInstance.referrerpolicy shouldBe ("TODO")
        }

        // to test the property `src` - The script source
        should("test src") {
            // uncomment below to test the property
            //modelInstance.src shouldBe ("TODO")
        }

        // to test the property `type` - The script MIME type
        should("test type") {
            // uncomment below to test the property
            //modelInstance.type shouldBe ("TODO")
        }

    }
}
