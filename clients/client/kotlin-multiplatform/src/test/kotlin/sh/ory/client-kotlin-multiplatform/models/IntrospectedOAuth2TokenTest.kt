/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package sh.ory.client-kotlin-multiplatform.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import sh.ory.client-kotlin-multiplatform.models.IntrospectedOAuth2Token

class IntrospectedOAuth2TokenTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of IntrospectedOAuth2Token
        //val modelInstance = IntrospectedOAuth2Token()

        // to test the property `active` - Active is a boolean indicator of whether or not the presented token is currently active.  The specifics of a token's \"active\" state will vary depending on the implementation of the authorization server and the information it keeps about its tokens, but a \"true\" value return for the \"active\" property will generally indicate that a given token has been issued by this authorization server, has not been revoked by the resource owner, and is within its given time window of validity (e.g., after its issuance time and before its expiration time).
        should("test active") {
            // uncomment below to test the property
            //modelInstance.active shouldBe ("TODO")
        }

        // to test the property `aud` - Audience contains a list of the token's intended audiences.
        should("test aud") {
            // uncomment below to test the property
            //modelInstance.aud shouldBe ("TODO")
        }

        // to test the property `clientId` - ID is aclient identifier for the OAuth 2.0 client that requested this token.
        should("test clientId") {
            // uncomment below to test the property
            //modelInstance.clientId shouldBe ("TODO")
        }

        // to test the property `exp` - Expires at is an integer timestamp, measured in the number of seconds since January 1 1970 UTC, indicating when this token will expire.
        should("test exp") {
            // uncomment below to test the property
            //modelInstance.exp shouldBe ("TODO")
        }

        // to test the property `ext` - Extra is arbitrary data set by the session.
        should("test ext") {
            // uncomment below to test the property
            //modelInstance.ext shouldBe ("TODO")
        }

        // to test the property `iat` - Issued at is an integer timestamp, measured in the number of seconds since January 1 1970 UTC, indicating when this token was originally issued.
        should("test iat") {
            // uncomment below to test the property
            //modelInstance.iat shouldBe ("TODO")
        }

        // to test the property `iss` - IssuerURL is a string representing the issuer of this token
        should("test iss") {
            // uncomment below to test the property
            //modelInstance.iss shouldBe ("TODO")
        }

        // to test the property `nbf` - NotBefore is an integer timestamp, measured in the number of seconds since January 1 1970 UTC, indicating when this token is not to be used before.
        should("test nbf") {
            // uncomment below to test the property
            //modelInstance.nbf shouldBe ("TODO")
        }

        // to test the property `obfuscatedSubject` - ObfuscatedSubject is set when the subject identifier algorithm was set to \"pairwise\" during authorization. It is the `sub` value of the ID Token that was issued.
        should("test obfuscatedSubject") {
            // uncomment below to test the property
            //modelInstance.obfuscatedSubject shouldBe ("TODO")
        }

        // to test the property `scope` - Scope is a JSON string containing a space-separated list of scopes associated with this token.
        should("test scope") {
            // uncomment below to test the property
            //modelInstance.scope shouldBe ("TODO")
        }

        // to test the property `sub` - Subject of the token, as defined in JWT [RFC7519]. Usually a machine-readable identifier of the resource owner who authorized this token.
        should("test sub") {
            // uncomment below to test the property
            //modelInstance.sub shouldBe ("TODO")
        }

        // to test the property `tokenType` - TokenType is the introspected token's type, typically `Bearer`.
        should("test tokenType") {
            // uncomment below to test the property
            //modelInstance.tokenType shouldBe ("TODO")
        }

        // to test the property `tokenUse` - TokenUse is the introspected token's use, for example `access_token` or `refresh_token`.
        should("test tokenUse") {
            // uncomment below to test the property
            //modelInstance.tokenUse shouldBe ("TODO")
        }

        // to test the property `username` - Username is a human-readable identifier for the resource owner who authorized this token.
        should("test username") {
            // uncomment below to test the property
            //modelInstance.username shouldBe ("TODO")
        }

    }
}
