/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package sh.ory.client-kotlin-multiplatform.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import sh.ory.client-kotlin-multiplatform.models.PlanDetails
import sh.ory.client-kotlin-multiplatform.models.GenericUsage

class PlanDetailsTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of PlanDetails
        //val modelInstance = PlanDetails()

        // to test the property `baseFeeMonthly` - BaseFeeMonthly is the monthly base fee for the plan.
        should("test baseFeeMonthly") {
            // uncomment below to test the property
            //modelInstance.baseFeeMonthly shouldBe ("TODO")
        }

        // to test the property `baseFeeYearly` - BaseFeeYearly is the yearly base fee for the plan.
        should("test baseFeeYearly") {
            // uncomment below to test the property
            //modelInstance.baseFeeYearly shouldBe ("TODO")
        }

        // to test the property `custom` - Custom is true if the plan is custom. This means it will be hidden from the pricing page.
        should("test custom") {
            // uncomment below to test the property
            //modelInstance.custom shouldBe ("TODO")
        }

        // to test the property `description` - Description is the description of the plan.
        should("test description") {
            // uncomment below to test the property
            //modelInstance.description shouldBe ("TODO")
        }

        // to test the property `features`
        should("test features") {
            // uncomment below to test the property
            //modelInstance.features shouldBe ("TODO")
        }

        // to test the property `name` - Name is the name of the plan.
        should("test name") {
            // uncomment below to test the property
            //modelInstance.name shouldBe ("TODO")
        }

        // to test the property `version` - Version is the version of the plan. The combination of `name@version` must be unique.
        should("test version") {
            // uncomment below to test the property
            //modelInstance.version shouldBe ("TODO")
        }

        // to test the property `latest` - Latest is true if the plan is the latest version of a plan and should be available for self-service usage.
        should("test latest") {
            // uncomment below to test the property
            //modelInstance.latest shouldBe ("TODO")
        }

    }
}
