/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package sh.ory.client-kotlin-multiplatform.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import sh.ory.client-kotlin-multiplatform.models.NormalizedProjectRevisionIdentitySchema
import sh.ory.client-kotlin-multiplatform.models.ManagedIdentitySchema

class NormalizedProjectRevisionIdentitySchemaTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of NormalizedProjectRevisionIdentitySchema
        //val modelInstance = NormalizedProjectRevisionIdentitySchema()

        // to test the property `createdAt` - The Project's Revision Creation Date
        should("test createdAt") {
            // uncomment below to test the property
            //modelInstance.createdAt shouldBe ("TODO")
        }

        // to test the property `id` - The unique ID of this entry.
        should("test id") {
            // uncomment below to test the property
            //modelInstance.id shouldBe ("TODO")
        }

        // to test the property `identitySchema`
        should("test identitySchema") {
            // uncomment below to test the property
            //modelInstance.identitySchema shouldBe ("TODO")
        }

        // to test the property `identitySchemaId`
        should("test identitySchemaId") {
            // uncomment below to test the property
            //modelInstance.identitySchemaId shouldBe ("TODO")
        }

        // to test the property `importId` - The imported (named) ID of the Identity Schema referenced in the Ory Kratos config.
        should("test importId") {
            // uncomment below to test the property
            //modelInstance.importId shouldBe ("TODO")
        }

        // to test the property `importUrl` - The ImportURL can be used to import an Identity Schema from a bse64 encoded string. In the future, this key also support HTTPS and other sources!  If you import an Ory Kratos configuration, this would be akin to the `identity.schemas.#.url` key.  The configuration will always return the import URL when you fetch it from the API.
        should("test importUrl") {
            // uncomment below to test the property
            //modelInstance.importUrl shouldBe ("TODO")
        }

        // to test the property `isDefault` - If true sets the default schema for identities  Only one schema can ever be the default schema. If you try to add two schemas with default to true, the request will fail.
        should("test isDefault") {
            // uncomment below to test the property
            //modelInstance.isDefault shouldBe ("TODO")
        }

        // to test the property `preset` - Use a preset instead of a custom identity schema.
        should("test preset") {
            // uncomment below to test the property
            //modelInstance.preset shouldBe ("TODO")
        }

        // to test the property `projectRevisionId` - The Revision's ID this schema belongs to
        should("test projectRevisionId") {
            // uncomment below to test the property
            //modelInstance.projectRevisionId shouldBe ("TODO")
        }

        // to test the property `updatedAt` - Last Time Project's Revision was Updated
        should("test updatedAt") {
            // uncomment below to test the property
            //modelInstance.updatedAt shouldBe ("TODO")
        }

    }
}
