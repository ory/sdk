/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package sh.ory.client-kotlin-multiplatform.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import sh.ory.client-kotlin-multiplatform.models.CreateProjectNormalizedPayload
import sh.ory.client-kotlin-multiplatform.models.KetoNamespace
import sh.ory.client-kotlin-multiplatform.models.NormalizedProjectRevisionCourierChannel
import sh.ory.client-kotlin-multiplatform.models.NormalizedProjectRevisionHook
import sh.ory.client-kotlin-multiplatform.models.NormalizedProjectRevisionIdentitySchema
import sh.ory.client-kotlin-multiplatform.models.NormalizedProjectRevisionThirdPartyProvider
import sh.ory.client-kotlin-multiplatform.models.NormalizedProjectRevisionTokenizerTemplate

class CreateProjectNormalizedPayloadTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of CreateProjectNormalizedPayload
        //val modelInstance = CreateProjectNormalizedPayload()

        // to test the property `environment` -  prod Production stage Staging dev Development
        should("test environment") {
            // uncomment below to test the property
            //modelInstance.environment shouldBe ("TODO")
        }

        // to test the property `name` - The project's name.
        should("test name") {
            // uncomment below to test the property
            //modelInstance.name shouldBe ("TODO")
        }

        // to test the property `createdAt` - The Project's Revision Creation Date
        should("test createdAt") {
            // uncomment below to test the property
            //modelInstance.createdAt shouldBe ("TODO")
        }

        // to test the property `disableAccountExperienceWelcomeScreen` - Whether to disable the account experience welcome screen, which is hosted under `/ui/welcome`.
        should("test disableAccountExperienceWelcomeScreen") {
            // uncomment below to test the property
            //modelInstance.disableAccountExperienceWelcomeScreen shouldBe ("TODO")
        }

        // to test the property `enableAxV2` - Whether the new account experience is enabled and reachable.
        should("test enableAxV2") {
            // uncomment below to test the property
            //modelInstance.enableAxV2 shouldBe ("TODO")
        }

        // to test the property `homeRegion` -  eu-central EUCentral asia-northeast AsiaNorthEast us-east USEast us-west USWest us US global Global
        should("test homeRegion") {
            // uncomment below to test the property
            //modelInstance.homeRegion shouldBe ("TODO")
        }

        // to test the property `hydraOauth2AllowedTopLevelClaims`
        should("test hydraOauth2AllowedTopLevelClaims") {
            // uncomment below to test the property
            //modelInstance.hydraOauth2AllowedTopLevelClaims shouldBe ("TODO")
        }

        // to test the property `hydraOauth2ClientCredentialsDefaultGrantAllowedScope` - Automatically grant authorized OAuth2 Scope in OAuth2 Client Credentials Flow.  Each OAuth2 Client is allowed to request a predefined OAuth2 Scope (for example `read write`). If this option is enabled, the full scope is automatically granted when performing the OAuth2 Client Credentials flow.  If disabled, the OAuth2 Client has to request the scope in the OAuth2 request by providing the `scope` query parameter.  Setting this option to true is common if you need compatibility with MITREid.  This governs the \"oauth2.client_credentials.default_grant_allowed_scope\" setting.
        should("test hydraOauth2ClientCredentialsDefaultGrantAllowedScope") {
            // uncomment below to test the property
            //modelInstance.hydraOauth2ClientCredentialsDefaultGrantAllowedScope shouldBe ("TODO")
        }

        // to test the property `hydraOauth2ExcludeNotBeforeClaim` - Set to true if you want to exclude claim `nbf (not before)` part of access token.  This governs the \"oauth2.exclude_not_before_claim\" setting.
        should("test hydraOauth2ExcludeNotBeforeClaim") {
            // uncomment below to test the property
            //modelInstance.hydraOauth2ExcludeNotBeforeClaim shouldBe ("TODO")
        }

        // to test the property `hydraOauth2GrantJwtIatOptional` - Configures if the issued at (`iat`) claim is required in the JSON Web Token (JWT) Profile for OAuth 2.0 Client Authentication and Authorization Grants (RFC7523).  If set to `false`, the `iat` claim is required. Set this value to `true` only after careful consideration.  This governs the \"oauth2.grant.jwt.iat_optional\" setting.
        should("test hydraOauth2GrantJwtIatOptional") {
            // uncomment below to test the property
            //modelInstance.hydraOauth2GrantJwtIatOptional shouldBe ("TODO")
        }

        // to test the property `hydraOauth2GrantJwtJtiOptional` - Configures if the JSON Web Token ID (`jti`) claim is required in the JSON Web Token (JWT) Profile for OAuth 2.0 Client Authentication and Authorization Grants (RFC7523).  If set to `false`, the `jti` claim is required. Set this value to `true` only after careful consideration.  This governs the \"oauth2.grant.jwt.jti_optional\" setting.
        should("test hydraOauth2GrantJwtJtiOptional") {
            // uncomment below to test the property
            //modelInstance.hydraOauth2GrantJwtJtiOptional shouldBe ("TODO")
        }

        // to test the property `hydraOauth2GrantJwtMaxTtl` - Configures what the maximum age of a JWT assertion used in the JSON Web Token (JWT) Profile for OAuth 2.0 Client Authentication and Authorization Grants (RFC7523) can be.  This feature uses the `exp` claim and `iat` claim to calculate assertion age. Assertions exceeding the max age will be denied.  Useful as a safety measure and recommended to keep below 720h.  This governs the \"oauth2.grant.jwt.max_ttl\" setting.
        should("test hydraOauth2GrantJwtMaxTtl") {
            // uncomment below to test the property
            //modelInstance.hydraOauth2GrantJwtMaxTtl shouldBe ("TODO")
        }

        // to test the property `hydraOauth2MirrorTopLevelClaims` - Set to false if you don't want to mirror custom claims under 'ext'.  This governs the \"oauth2.mirror_top_level_claims\" setting.
        should("test hydraOauth2MirrorTopLevelClaims") {
            // uncomment below to test the property
            //modelInstance.hydraOauth2MirrorTopLevelClaims shouldBe ("TODO")
        }

        // to test the property `hydraOauth2PkceEnforced` - Configures whether PKCE should be enforced for all OAuth2 Clients.  This governs the \"oauth2.pkce.enforced\" setting.
        should("test hydraOauth2PkceEnforced") {
            // uncomment below to test the property
            //modelInstance.hydraOauth2PkceEnforced shouldBe ("TODO")
        }

        // to test the property `hydraOauth2PkceEnforcedForPublicClients` - Configures whether PKCE should be enforced for OAuth2 Clients without a client secret (public clients).  This governs the \"oauth2.pkce.enforced_for_public_clients\" setting.
        should("test hydraOauth2PkceEnforcedForPublicClients") {
            // uncomment below to test the property
            //modelInstance.hydraOauth2PkceEnforcedForPublicClients shouldBe ("TODO")
        }

        // to test the property `hydraOauth2RefreshTokenHook` - Sets the Refresh Token Hook Endpoint. If set this endpoint will be called during the OAuth2 Token Refresh grant update the OAuth2 Access Token claims.  This governs the \"oauth2.refresh_token_hook\" setting.
        should("test hydraOauth2RefreshTokenHook") {
            // uncomment below to test the property
            //modelInstance.hydraOauth2RefreshTokenHook shouldBe ("TODO")
        }

        // to test the property `hydraOauth2TokenHook` - Sets the token hook endpoint for all grant types. If set it will be called while providing token to customize claims.  This governs the \"oauth2.token_hook.url\" setting.
        should("test hydraOauth2TokenHook") {
            // uncomment below to test the property
            //modelInstance.hydraOauth2TokenHook shouldBe ("TODO")
        }

        // to test the property `hydraOidcDynamicClientRegistrationDefaultScope`
        should("test hydraOidcDynamicClientRegistrationDefaultScope") {
            // uncomment below to test the property
            //modelInstance.hydraOidcDynamicClientRegistrationDefaultScope shouldBe ("TODO")
        }

        // to test the property `hydraOidcDynamicClientRegistrationEnabled` - Configures OpenID Connect Dynamic Client Registration.  This governs the \"oidc.dynamic_client_registration.enabled\" setting.
        should("test hydraOidcDynamicClientRegistrationEnabled") {
            // uncomment below to test the property
            //modelInstance.hydraOidcDynamicClientRegistrationEnabled shouldBe ("TODO")
        }

        // to test the property `hydraOidcSubjectIdentifiersPairwiseSalt` - Configures OpenID Connect Discovery and overwrites the pairwise algorithm  This governs the \"oidc.subject_identifiers.pairwise_salt\" setting.
        should("test hydraOidcSubjectIdentifiersPairwiseSalt") {
            // uncomment below to test the property
            //modelInstance.hydraOidcSubjectIdentifiersPairwiseSalt shouldBe ("TODO")
        }

        // to test the property `hydraOidcSubjectIdentifiersSupportedTypes`
        should("test hydraOidcSubjectIdentifiersSupportedTypes") {
            // uncomment below to test the property
            //modelInstance.hydraOidcSubjectIdentifiersSupportedTypes shouldBe ("TODO")
        }

        // to test the property `hydraSecretsCookie`
        should("test hydraSecretsCookie") {
            // uncomment below to test the property
            //modelInstance.hydraSecretsCookie shouldBe ("TODO")
        }

        // to test the property `hydraSecretsSystem`
        should("test hydraSecretsSystem") {
            // uncomment below to test the property
            //modelInstance.hydraSecretsSystem shouldBe ("TODO")
        }

        // to test the property `hydraServeCookiesSameSiteLegacyWorkaround` - Configures the Ory Hydra Cookie Same Site Legacy Workaround  This governs the \"serve.cookies.same_site_legacy_workaround\" setting.
        should("test hydraServeCookiesSameSiteLegacyWorkaround") {
            // uncomment below to test the property
            //modelInstance.hydraServeCookiesSameSiteLegacyWorkaround shouldBe ("TODO")
        }

        // to test the property `hydraServeCookiesSameSiteMode` - Configures the Ory Hydra Cookie Same Site Mode  This governs the \"serve.cookies.same_site_mode\" setting.
        should("test hydraServeCookiesSameSiteMode") {
            // uncomment below to test the property
            //modelInstance.hydraServeCookiesSameSiteMode shouldBe ("TODO")
        }

        // to test the property `hydraStrategiesAccessToken` - Defines access token type  This governs the \"strategies.access_token\" setting. opaque Oauth2AccessTokenStrategyOpaque jwt Oauth2AccessTokenStrategyJwt
        should("test hydraStrategiesAccessToken") {
            // uncomment below to test the property
            //modelInstance.hydraStrategiesAccessToken shouldBe ("TODO")
        }

        // to test the property `hydraStrategiesJwtScopeClaim` - Define the claim to use as the scope in the access token.  This governs the \"strategies.jwt.scope_claim\" setting:  list: The scope claim is an array of strings named `scope`: `{ \"scope\": [\"read\", \"write\"] }` string: The scope claim is a space delimited list of strings named `scp`: `{ \"scp\": \"read write\" }` both: The scope claim is both a space delimited list and an array of strings named `scope` and `scp`: `{ \"scope\": [\"read\", \"write\"], \"scp\": \"read write\" }` list OAuth2JWTScopeClaimList string OAuth2JWTScopeClaimString both OAuth2JWTScopeClaimBoth
        should("test hydraStrategiesJwtScopeClaim") {
            // uncomment below to test the property
            //modelInstance.hydraStrategiesJwtScopeClaim shouldBe ("TODO")
        }

        // to test the property `hydraStrategiesScope` - Defines how scopes are matched. For more details have a look at https://github.com/ory/fosite#scopes  This governs the \"strategies.scope\" setting. exact Oauth2ScopeStrategyExact wildcard Oauth2ScopeStrategyWildcard
        should("test hydraStrategiesScope") {
            // uncomment below to test the property
            //modelInstance.hydraStrategiesScope shouldBe ("TODO")
        }

        // to test the property `hydraTtlAccessToken` - This governs the \"ttl.access_token\" setting.
        should("test hydraTtlAccessToken") {
            // uncomment below to test the property
            //modelInstance.hydraTtlAccessToken shouldBe ("TODO")
        }

        // to test the property `hydraTtlAuthCode` - Configures how long refresh tokens are valid.  Set to -1 for refresh tokens to never expire. This is not recommended!  This governs the \"ttl.auth_code\" setting.
        should("test hydraTtlAuthCode") {
            // uncomment below to test the property
            //modelInstance.hydraTtlAuthCode shouldBe ("TODO")
        }

        // to test the property `hydraTtlIdToken` - This governs the \"ttl.id_token\" setting.
        should("test hydraTtlIdToken") {
            // uncomment below to test the property
            //modelInstance.hydraTtlIdToken shouldBe ("TODO")
        }

        // to test the property `hydraTtlLoginConsentRequest` - Configures how long a user login and consent flow may take.  This governs the \"ttl.login_consent_request\" setting.
        should("test hydraTtlLoginConsentRequest") {
            // uncomment below to test the property
            //modelInstance.hydraTtlLoginConsentRequest shouldBe ("TODO")
        }

        // to test the property `hydraTtlRefreshToken` - Configures how long refresh tokens are valid.  Set to -1 for refresh tokens to never expire. This is not recommended!  This governs the \"ttl.refresh_token\" setting.
        should("test hydraTtlRefreshToken") {
            // uncomment below to test the property
            //modelInstance.hydraTtlRefreshToken shouldBe ("TODO")
        }

        // to test the property `hydraUrlsConsent` - Sets the OAuth2 Consent Endpoint URL of the OAuth2 User Login & Consent flow.  Defaults to the Ory Account Experience if left empty.  This governs the \"urls.consent\" setting.
        should("test hydraUrlsConsent") {
            // uncomment below to test the property
            //modelInstance.hydraUrlsConsent shouldBe ("TODO")
        }

        // to test the property `hydraUrlsError` - Sets the OAuth2 Error URL of the OAuth2 User Login & Consent flow.  Defaults to the Ory Account Experience if left empty.  This governs the \"urls.error\" setting.
        should("test hydraUrlsError") {
            // uncomment below to test the property
            //modelInstance.hydraUrlsError shouldBe ("TODO")
        }

        // to test the property `hydraUrlsLogin` - Sets the OAuth2 Login Endpoint URL of the OAuth2 User Login & Consent flow.  Defaults to the Ory Account Experience if left empty.  This governs the \"urls.login\" setting.
        should("test hydraUrlsLogin") {
            // uncomment below to test the property
            //modelInstance.hydraUrlsLogin shouldBe ("TODO")
        }

        // to test the property `hydraUrlsLogout` - Sets the logout endpoint.  Defaults to the Ory Account Experience if left empty.  This governs the \"urls.logout\" setting.
        should("test hydraUrlsLogout") {
            // uncomment below to test the property
            //modelInstance.hydraUrlsLogout shouldBe ("TODO")
        }

        // to test the property `hydraUrlsPostLogoutRedirect` - When an OAuth2-related user agent requests to log out, they will be redirected to this url afterwards per default.  Defaults to the Ory Account Experience in development and your application in production mode when a custom domain is connected.  This governs the \"urls.post_logout_redirect\" setting.
        should("test hydraUrlsPostLogoutRedirect") {
            // uncomment below to test the property
            //modelInstance.hydraUrlsPostLogoutRedirect shouldBe ("TODO")
        }

        // to test the property `hydraUrlsRegistration` - Sets the OAuth2 Registration Endpoint URL of the OAuth2 User Login & Consent flow.  Defaults to the Ory Account Experience if left empty.  This governs the \"urls.registration\" setting.
        should("test hydraUrlsRegistration") {
            // uncomment below to test the property
            //modelInstance.hydraUrlsRegistration shouldBe ("TODO")
        }

        // to test the property `hydraUrlsSelfIssuer` - This value will be used as the issuer in access and ID tokens. It must be specified and using HTTPS protocol, unless the development mode is enabled.  On the Ory Network it will be very rare that you want to modify this value. If left empty, it will default to the correct value for the Ory Network.  This governs the \"urls.self.issuer\" setting.
        should("test hydraUrlsSelfIssuer") {
            // uncomment below to test the property
            //modelInstance.hydraUrlsSelfIssuer shouldBe ("TODO")
        }

        // to test the property `hydraWebfingerJwksBroadcastKeys`
        should("test hydraWebfingerJwksBroadcastKeys") {
            // uncomment below to test the property
            //modelInstance.hydraWebfingerJwksBroadcastKeys shouldBe ("TODO")
        }

        // to test the property `hydraWebfingerOidcDiscoveryAuthUrl` - Configures OpenID Connect Discovery and overwrites the OAuth2 Authorization URL.  This governs the \"webfinger.oidc.discovery.auth_url\" setting.
        should("test hydraWebfingerOidcDiscoveryAuthUrl") {
            // uncomment below to test the property
            //modelInstance.hydraWebfingerOidcDiscoveryAuthUrl shouldBe ("TODO")
        }

        // to test the property `hydraWebfingerOidcDiscoveryClientRegistrationUrl` - Configures OpenID Connect Discovery and overwrites the OpenID Connect Dynamic Client Registration Endpoint.  This governs the \"webfinger.oidc.discovery.client_registration_url\" setting.
        should("test hydraWebfingerOidcDiscoveryClientRegistrationUrl") {
            // uncomment below to test the property
            //modelInstance.hydraWebfingerOidcDiscoveryClientRegistrationUrl shouldBe ("TODO")
        }

        // to test the property `hydraWebfingerOidcDiscoveryJwksUrl` - Configures OpenID Connect Discovery and overwrites the JWKS URL.  This governs the \"webfinger.oidc.discovery.jwks_url\" setting.
        should("test hydraWebfingerOidcDiscoveryJwksUrl") {
            // uncomment below to test the property
            //modelInstance.hydraWebfingerOidcDiscoveryJwksUrl shouldBe ("TODO")
        }

        // to test the property `hydraWebfingerOidcDiscoverySupportedClaims`
        should("test hydraWebfingerOidcDiscoverySupportedClaims") {
            // uncomment below to test the property
            //modelInstance.hydraWebfingerOidcDiscoverySupportedClaims shouldBe ("TODO")
        }

        // to test the property `hydraWebfingerOidcDiscoverySupportedScope`
        should("test hydraWebfingerOidcDiscoverySupportedScope") {
            // uncomment below to test the property
            //modelInstance.hydraWebfingerOidcDiscoverySupportedScope shouldBe ("TODO")
        }

        // to test the property `hydraWebfingerOidcDiscoveryTokenUrl` - Configures OpenID Connect Discovery and overwrites the OAuth2 Token URL.  This governs the \"webfinger.oidc.discovery.token_url\" setting.
        should("test hydraWebfingerOidcDiscoveryTokenUrl") {
            // uncomment below to test the property
            //modelInstance.hydraWebfingerOidcDiscoveryTokenUrl shouldBe ("TODO")
        }

        // to test the property `hydraWebfingerOidcDiscoveryUserinfoUrl` - Configures OpenID Connect Discovery and overwrites userinfo endpoint to be advertised at the OpenID Connect Discovery endpoint /.well-known/openid-configuration. Defaults to Ory Hydra's userinfo endpoint at /userinfo. Set this value if you want to handle this endpoint yourself.  This governs the \"webfinger.oidc.discovery.userinfo_url\" setting.
        should("test hydraWebfingerOidcDiscoveryUserinfoUrl") {
            // uncomment below to test the property
            //modelInstance.hydraWebfingerOidcDiscoveryUserinfoUrl shouldBe ("TODO")
        }

        // to test the property `id` - The revision ID.
        should("test id") {
            // uncomment below to test the property
            //modelInstance.id shouldBe ("TODO")
        }

        // to test the property `ketoNamespaceConfiguration` - The Revisions' Keto Namespace Configuration  The string is a URL pointing to an OPL file with the configuration.
        should("test ketoNamespaceConfiguration") {
            // uncomment below to test the property
            //modelInstance.ketoNamespaceConfiguration shouldBe ("TODO")
        }

        // to test the property `ketoNamespaces`
        should("test ketoNamespaces") {
            // uncomment below to test the property
            //modelInstance.ketoNamespaces shouldBe ("TODO")
        }

        // to test the property `kratosCookiesSameSite` - Configures the Ory Kratos Cookie SameSite Attribute  This governs the \"cookies.same_site\" setting.
        should("test kratosCookiesSameSite") {
            // uncomment below to test the property
            //modelInstance.kratosCookiesSameSite shouldBe ("TODO")
        }

        // to test the property `kratosCourierChannels`
        should("test kratosCourierChannels") {
            // uncomment below to test the property
            //modelInstance.kratosCourierChannels shouldBe ("TODO")
        }

        // to test the property `kratosCourierDeliveryStrategy` - The delivery strategy to use when sending emails  `smtp`: Use SMTP server `http`: Use the built in HTTP client to send the email to some remote service
        should("test kratosCourierDeliveryStrategy") {
            // uncomment below to test the property
            //modelInstance.kratosCourierDeliveryStrategy shouldBe ("TODO")
        }

        // to test the property `kratosCourierHttpRequestConfigAuthApiKeyIn` - The location of the API key to use in the HTTP email sending service's authentication  `header`: Send the key value pair as a header `cookie`: Send the key value pair as a cookie This governs the \"courier.http.auth.config.in\" setting
        should("test kratosCourierHttpRequestConfigAuthApiKeyIn") {
            // uncomment below to test the property
            //modelInstance.kratosCourierHttpRequestConfigAuthApiKeyIn shouldBe ("TODO")
        }

        // to test the property `kratosCourierHttpRequestConfigAuthApiKeyName` - The name of the API key to use in the HTTP email sending service's authentication  This governs the \"courier.http.auth.config.name\" setting
        should("test kratosCourierHttpRequestConfigAuthApiKeyName") {
            // uncomment below to test the property
            //modelInstance.kratosCourierHttpRequestConfigAuthApiKeyName shouldBe ("TODO")
        }

        // to test the property `kratosCourierHttpRequestConfigAuthApiKeyValue` - The value of the API key to use in the HTTP email sending service's authentication  This governs the \"courier.http.auth.config.value\" setting
        should("test kratosCourierHttpRequestConfigAuthApiKeyValue") {
            // uncomment below to test the property
            //modelInstance.kratosCourierHttpRequestConfigAuthApiKeyValue shouldBe ("TODO")
        }

        // to test the property `kratosCourierHttpRequestConfigAuthBasicAuthPassword` - The password to use for basic auth in the HTTP email sending service's authentication  This governs the \"courier.http.auth.config.password\" setting
        should("test kratosCourierHttpRequestConfigAuthBasicAuthPassword") {
            // uncomment below to test the property
            //modelInstance.kratosCourierHttpRequestConfigAuthBasicAuthPassword shouldBe ("TODO")
        }

        // to test the property `kratosCourierHttpRequestConfigAuthBasicAuthUser` - The user to use for basic auth in the HTTP email sending service's authentication  This governs the \"courier.http.auth.config.user\" setting
        should("test kratosCourierHttpRequestConfigAuthBasicAuthUser") {
            // uncomment below to test the property
            //modelInstance.kratosCourierHttpRequestConfigAuthBasicAuthUser shouldBe ("TODO")
        }

        // to test the property `kratosCourierHttpRequestConfigAuthType` - The authentication type to use while contacting the remote HTTP email sending service  `basic_auth`: Use Basic Authentication `api_key`: Use API Key Authentication in a header or cookie
        should("test kratosCourierHttpRequestConfigAuthType") {
            // uncomment below to test the property
            //modelInstance.kratosCourierHttpRequestConfigAuthType shouldBe ("TODO")
        }

        // to test the property `kratosCourierHttpRequestConfigBody` - The Jsonnet template to generate the body to send to the remote HTTP email sending service  Should be valid Jsonnet and base64 encoded  This governs the \"courier.http.body\" setting
        should("test kratosCourierHttpRequestConfigBody") {
            // uncomment below to test the property
            //modelInstance.kratosCourierHttpRequestConfigBody shouldBe ("TODO")
        }

        // to test the property `kratosCourierHttpRequestConfigHeaders` - NullJSONRawMessage represents a json.RawMessage that works well with JSON, SQL, and Swagger and is NULLable-
        should("test kratosCourierHttpRequestConfigHeaders") {
            // uncomment below to test the property
            //modelInstance.kratosCourierHttpRequestConfigHeaders shouldBe ("TODO")
        }

        // to test the property `kratosCourierHttpRequestConfigMethod` - The http METHOD to use when calling the remote HTTP email sending service
        should("test kratosCourierHttpRequestConfigMethod") {
            // uncomment below to test the property
            //modelInstance.kratosCourierHttpRequestConfigMethod shouldBe ("TODO")
        }

        // to test the property `kratosCourierHttpRequestConfigUrl` - The URL of the remote HTTP email sending service  This governs the \"courier.http.url\" setting
        should("test kratosCourierHttpRequestConfigUrl") {
            // uncomment below to test the property
            //modelInstance.kratosCourierHttpRequestConfigUrl shouldBe ("TODO")
        }

        // to test the property `kratosCourierSmtpConnectionUri` - Configures the Ory Kratos SMTP Connection URI  This governs the \"courier.smtp.connection_uri\" setting.
        should("test kratosCourierSmtpConnectionUri") {
            // uncomment below to test the property
            //modelInstance.kratosCourierSmtpConnectionUri shouldBe ("TODO")
        }

        // to test the property `kratosCourierSmtpFromAddress` - Configures the Ory Kratos SMTP From Address  This governs the \"courier.smtp.from_address\" setting.
        should("test kratosCourierSmtpFromAddress") {
            // uncomment below to test the property
            //modelInstance.kratosCourierSmtpFromAddress shouldBe ("TODO")
        }

        // to test the property `kratosCourierSmtpFromName` - Configures the Ory Kratos SMTP From Name  This governs the \"courier.smtp.from_name\" setting.
        should("test kratosCourierSmtpFromName") {
            // uncomment below to test the property
            //modelInstance.kratosCourierSmtpFromName shouldBe ("TODO")
        }

        // to test the property `kratosCourierSmtpHeaders` - NullJSONRawMessage represents a json.RawMessage that works well with JSON, SQL, and Swagger and is NULLable-
        should("test kratosCourierSmtpHeaders") {
            // uncomment below to test the property
            //modelInstance.kratosCourierSmtpHeaders shouldBe ("TODO")
        }

        // to test the property `kratosCourierSmtpLocalName` - Configures the local_name to use in SMTP connections  This governs the \"courier.smtp.local_name\" setting.
        should("test kratosCourierSmtpLocalName") {
            // uncomment below to test the property
            //modelInstance.kratosCourierSmtpLocalName shouldBe ("TODO")
        }

        // to test the property `kratosCourierTemplatesLoginCodeValidEmailBodyHtml` - Configures the Ory Kratos Valid Login via Code Email Body HTML Template  This governs the \"courier.smtp.templates.login_code.valid.email.body.html\" setting.
        should("test kratosCourierTemplatesLoginCodeValidEmailBodyHtml") {
            // uncomment below to test the property
            //modelInstance.kratosCourierTemplatesLoginCodeValidEmailBodyHtml shouldBe ("TODO")
        }

        // to test the property `kratosCourierTemplatesLoginCodeValidEmailBodyPlaintext` - Configures the Ory Kratos Valid Login via Code Email Body Plaintext Template  This governs the \"courier.smtp.templates.login_code.valid.email.body.plaintext\" setting.
        should("test kratosCourierTemplatesLoginCodeValidEmailBodyPlaintext") {
            // uncomment below to test the property
            //modelInstance.kratosCourierTemplatesLoginCodeValidEmailBodyPlaintext shouldBe ("TODO")
        }

        // to test the property `kratosCourierTemplatesLoginCodeValidEmailSubject` - Configures the Ory Kratos Valid Login via Code Email Subject Template  This governs the \"courier.smtp.templates.login_code.valid.email.subject\" setting.
        should("test kratosCourierTemplatesLoginCodeValidEmailSubject") {
            // uncomment below to test the property
            //modelInstance.kratosCourierTemplatesLoginCodeValidEmailSubject shouldBe ("TODO")
        }

        // to test the property `kratosCourierTemplatesLoginCodeValidSmsBodyPlaintext` - Configures the Ory Kratos Valid Login via Code SMS plain text body  This governs the \"courier.smtp.templates.login_code.valid.sms.plaintext\" setting.
        should("test kratosCourierTemplatesLoginCodeValidSmsBodyPlaintext") {
            // uncomment below to test the property
            //modelInstance.kratosCourierTemplatesLoginCodeValidSmsBodyPlaintext shouldBe ("TODO")
        }

        // to test the property `kratosCourierTemplatesRecoveryCodeInvalidEmailBodyHtml` - Configures the Ory Kratos Invalid Recovery via Code Email Body HTML Template  This governs the \"courier.smtp.templates.recovery_code.invalid.email.body.html\" setting.
        should("test kratosCourierTemplatesRecoveryCodeInvalidEmailBodyHtml") {
            // uncomment below to test the property
            //modelInstance.kratosCourierTemplatesRecoveryCodeInvalidEmailBodyHtml shouldBe ("TODO")
        }

        // to test the property `kratosCourierTemplatesRecoveryCodeInvalidEmailBodyPlaintext` - Configures the Ory Kratos Invalid Recovery via Code Email Body Plaintext Template  This governs the \"courier.smtp.templates.recovery_code.invalid.email.body.plaintext\" setting.
        should("test kratosCourierTemplatesRecoveryCodeInvalidEmailBodyPlaintext") {
            // uncomment below to test the property
            //modelInstance.kratosCourierTemplatesRecoveryCodeInvalidEmailBodyPlaintext shouldBe ("TODO")
        }

        // to test the property `kratosCourierTemplatesRecoveryCodeInvalidEmailSubject` - Configures the Ory Kratos Invalid Recovery via Code Email Subject Template  This governs the \"courier.smtp.templates.recovery_code.invalid.email.body.html\" setting.
        should("test kratosCourierTemplatesRecoveryCodeInvalidEmailSubject") {
            // uncomment below to test the property
            //modelInstance.kratosCourierTemplatesRecoveryCodeInvalidEmailSubject shouldBe ("TODO")
        }

        // to test the property `kratosCourierTemplatesRecoveryCodeValidEmailBodyHtml` - Configures the Ory Kratos Valid Recovery via Code Email Body HTML Template  This governs the \"courier.smtp.templates.recovery_code.valid.email.body.html\" setting.
        should("test kratosCourierTemplatesRecoveryCodeValidEmailBodyHtml") {
            // uncomment below to test the property
            //modelInstance.kratosCourierTemplatesRecoveryCodeValidEmailBodyHtml shouldBe ("TODO")
        }

        // to test the property `kratosCourierTemplatesRecoveryCodeValidEmailBodyPlaintext` - Configures the Ory Kratos Valid Recovery via Code Email Body Plaintext Template  This governs the \"courier.smtp.templates.recovery_code.valid.email.body.plaintext\" setting.
        should("test kratosCourierTemplatesRecoveryCodeValidEmailBodyPlaintext") {
            // uncomment below to test the property
            //modelInstance.kratosCourierTemplatesRecoveryCodeValidEmailBodyPlaintext shouldBe ("TODO")
        }

        // to test the property `kratosCourierTemplatesRecoveryCodeValidEmailSubject` - Configures the Ory Kratos Valid Recovery via Code Email Subject Template  This governs the \"courier.smtp.templates.recovery_code.valid.email.subject\" setting.
        should("test kratosCourierTemplatesRecoveryCodeValidEmailSubject") {
            // uncomment below to test the property
            //modelInstance.kratosCourierTemplatesRecoveryCodeValidEmailSubject shouldBe ("TODO")
        }

        // to test the property `kratosCourierTemplatesRecoveryInvalidEmailBodyHtml` - Configures the Ory Kratos Invalid Recovery Email Body HTML Template  This governs the \"courier.smtp.templates.recovery.invalid.email.body.html\" setting.
        should("test kratosCourierTemplatesRecoveryInvalidEmailBodyHtml") {
            // uncomment below to test the property
            //modelInstance.kratosCourierTemplatesRecoveryInvalidEmailBodyHtml shouldBe ("TODO")
        }

        // to test the property `kratosCourierTemplatesRecoveryInvalidEmailBodyPlaintext` - Configures the Ory Kratos Invalid Recovery Email Body Plaintext Template  This governs the \"courier.smtp.templates.recovery.invalid.email.body.plaintext\" setting.
        should("test kratosCourierTemplatesRecoveryInvalidEmailBodyPlaintext") {
            // uncomment below to test the property
            //modelInstance.kratosCourierTemplatesRecoveryInvalidEmailBodyPlaintext shouldBe ("TODO")
        }

        // to test the property `kratosCourierTemplatesRecoveryInvalidEmailSubject` - Configures the Ory Kratos Invalid Recovery Email Subject Template  This governs the \"courier.smtp.templates.recovery.invalid.email.body.html\" setting.
        should("test kratosCourierTemplatesRecoveryInvalidEmailSubject") {
            // uncomment below to test the property
            //modelInstance.kratosCourierTemplatesRecoveryInvalidEmailSubject shouldBe ("TODO")
        }

        // to test the property `kratosCourierTemplatesRecoveryValidEmailBodyHtml` - Configures the Ory Kratos Valid Recovery Email Body HTML Template  This governs the \"courier.smtp.templates.recovery.valid.email.body.html\" setting.
        should("test kratosCourierTemplatesRecoveryValidEmailBodyHtml") {
            // uncomment below to test the property
            //modelInstance.kratosCourierTemplatesRecoveryValidEmailBodyHtml shouldBe ("TODO")
        }

        // to test the property `kratosCourierTemplatesRecoveryValidEmailBodyPlaintext` - Configures the Ory Kratos Valid Recovery Email Body Plaintext Template  This governs the \"courier.smtp.templates.recovery.valid.email.body.plaintext\" setting.
        should("test kratosCourierTemplatesRecoveryValidEmailBodyPlaintext") {
            // uncomment below to test the property
            //modelInstance.kratosCourierTemplatesRecoveryValidEmailBodyPlaintext shouldBe ("TODO")
        }

        // to test the property `kratosCourierTemplatesRecoveryValidEmailSubject` - Configures the Ory Kratos Valid Recovery Email Subject Template  This governs the \"courier.smtp.templates.recovery.valid.email.subject\" setting.
        should("test kratosCourierTemplatesRecoveryValidEmailSubject") {
            // uncomment below to test the property
            //modelInstance.kratosCourierTemplatesRecoveryValidEmailSubject shouldBe ("TODO")
        }

        // to test the property `kratosCourierTemplatesRegistrationCodeValidEmailBodyHtml` - Configures the Ory Kratos Valid Registration via Code Email Body HTML Template  This governs the \"courier.smtp.templates.registration_code.valid.email.body.html\" setting.
        should("test kratosCourierTemplatesRegistrationCodeValidEmailBodyHtml") {
            // uncomment below to test the property
            //modelInstance.kratosCourierTemplatesRegistrationCodeValidEmailBodyHtml shouldBe ("TODO")
        }

        // to test the property `kratosCourierTemplatesRegistrationCodeValidEmailBodyPlaintext` - Configures the Ory Kratos Valid Registration via Code Email Body Plaintext Template  This governs the \"courier.smtp.templates.registration_code.valid.email.body.plaintext\" setting.
        should("test kratosCourierTemplatesRegistrationCodeValidEmailBodyPlaintext") {
            // uncomment below to test the property
            //modelInstance.kratosCourierTemplatesRegistrationCodeValidEmailBodyPlaintext shouldBe ("TODO")
        }

        // to test the property `kratosCourierTemplatesRegistrationCodeValidEmailSubject` - Configures the Ory Kratos Valid Registration via Code Email Subject Template  This governs the \"courier.smtp.templates.registration_code.valid.email.subject\" setting.
        should("test kratosCourierTemplatesRegistrationCodeValidEmailSubject") {
            // uncomment below to test the property
            //modelInstance.kratosCourierTemplatesRegistrationCodeValidEmailSubject shouldBe ("TODO")
        }

        // to test the property `kratosCourierTemplatesRegistrationCodeValidSmsBodyPlaintext` - Configures the Ory Kratos Valid Registration via Code Email Subject Template  This governs the \"courier.smtp.templates.registration_code.valid.sms.body.plaintext\" setting.
        should("test kratosCourierTemplatesRegistrationCodeValidSmsBodyPlaintext") {
            // uncomment below to test the property
            //modelInstance.kratosCourierTemplatesRegistrationCodeValidSmsBodyPlaintext shouldBe ("TODO")
        }

        // to test the property `kratosCourierTemplatesVerificationCodeInvalidEmailBodyHtml` - Configures the Ory Kratos Invalid Verification via Code Email Body HTML Template  This governs the \"courier.smtp.templates.verification_code.invalid.email.body.html\" setting.
        should("test kratosCourierTemplatesVerificationCodeInvalidEmailBodyHtml") {
            // uncomment below to test the property
            //modelInstance.kratosCourierTemplatesVerificationCodeInvalidEmailBodyHtml shouldBe ("TODO")
        }

        // to test the property `kratosCourierTemplatesVerificationCodeInvalidEmailBodyPlaintext` - Configures the Ory Kratos Invalid Verification via Code Email Body Plaintext Template  This governs the \"courier.smtp.templates.verification_code.invalid.email.body.plaintext\" setting.
        should("test kratosCourierTemplatesVerificationCodeInvalidEmailBodyPlaintext") {
            // uncomment below to test the property
            //modelInstance.kratosCourierTemplatesVerificationCodeInvalidEmailBodyPlaintext shouldBe ("TODO")
        }

        // to test the property `kratosCourierTemplatesVerificationCodeInvalidEmailSubject` - Configures the Ory Kratos Invalid Verification via Code Email Subject Template  This governs the \"courier.smtp.templates.verification_code.invalid.email.subject\" setting.
        should("test kratosCourierTemplatesVerificationCodeInvalidEmailSubject") {
            // uncomment below to test the property
            //modelInstance.kratosCourierTemplatesVerificationCodeInvalidEmailSubject shouldBe ("TODO")
        }

        // to test the property `kratosCourierTemplatesVerificationCodeValidEmailBodyHtml` - Configures the Ory Kratos Valid Verification via Code Email Body HTML Template  This governs the \"courier.smtp.templates.verification_code.valid.email.body.html\" setting.
        should("test kratosCourierTemplatesVerificationCodeValidEmailBodyHtml") {
            // uncomment below to test the property
            //modelInstance.kratosCourierTemplatesVerificationCodeValidEmailBodyHtml shouldBe ("TODO")
        }

        // to test the property `kratosCourierTemplatesVerificationCodeValidEmailBodyPlaintext` - Configures the Ory Kratos Valid Verification via Code Email Body Plaintext Template  This governs the \"courier.smtp.templates.verification_code.valid.email.body.plaintext\" setting.
        should("test kratosCourierTemplatesVerificationCodeValidEmailBodyPlaintext") {
            // uncomment below to test the property
            //modelInstance.kratosCourierTemplatesVerificationCodeValidEmailBodyPlaintext shouldBe ("TODO")
        }

        // to test the property `kratosCourierTemplatesVerificationCodeValidEmailSubject` - Configures the Ory Kratos Valid Verification via Code Email Subject Template  This governs the \"courier.smtp.templates.verification_code.valid.email.subject\" setting.
        should("test kratosCourierTemplatesVerificationCodeValidEmailSubject") {
            // uncomment below to test the property
            //modelInstance.kratosCourierTemplatesVerificationCodeValidEmailSubject shouldBe ("TODO")
        }

        // to test the property `kratosCourierTemplatesVerificationCodeValidSmsBodyPlaintext` - Configures the Ory Kratos Valid Verification via Code SMS Body Plaintext  This governs the \"courier.smtp.templates.verification_code.valid.sms.body.plaintext\" setting.
        should("test kratosCourierTemplatesVerificationCodeValidSmsBodyPlaintext") {
            // uncomment below to test the property
            //modelInstance.kratosCourierTemplatesVerificationCodeValidSmsBodyPlaintext shouldBe ("TODO")
        }

        // to test the property `kratosCourierTemplatesVerificationInvalidEmailBodyHtml` - Configures the Ory Kratos Invalid Verification Email Body HTML Template  This governs the \"courier.smtp.templates.verification.invalid.email.body.html\" setting.
        should("test kratosCourierTemplatesVerificationInvalidEmailBodyHtml") {
            // uncomment below to test the property
            //modelInstance.kratosCourierTemplatesVerificationInvalidEmailBodyHtml shouldBe ("TODO")
        }

        // to test the property `kratosCourierTemplatesVerificationInvalidEmailBodyPlaintext` - Configures the Ory Kratos Invalid Verification Email Body Plaintext Template  This governs the \"courier.smtp.templates.verification.invalid.email.body.plaintext\" setting.
        should("test kratosCourierTemplatesVerificationInvalidEmailBodyPlaintext") {
            // uncomment below to test the property
            //modelInstance.kratosCourierTemplatesVerificationInvalidEmailBodyPlaintext shouldBe ("TODO")
        }

        // to test the property `kratosCourierTemplatesVerificationInvalidEmailSubject` - Configures the Ory Kratos Invalid Verification Email Subject Template  This governs the \"courier.smtp.templates.verification.invalid.email.subject\" setting.
        should("test kratosCourierTemplatesVerificationInvalidEmailSubject") {
            // uncomment below to test the property
            //modelInstance.kratosCourierTemplatesVerificationInvalidEmailSubject shouldBe ("TODO")
        }

        // to test the property `kratosCourierTemplatesVerificationValidEmailBodyHtml` - Configures the Ory Kratos Valid Verification Email Body HTML Template  This governs the \"courier.smtp.templates.verification.valid.email.body.html\" setting.
        should("test kratosCourierTemplatesVerificationValidEmailBodyHtml") {
            // uncomment below to test the property
            //modelInstance.kratosCourierTemplatesVerificationValidEmailBodyHtml shouldBe ("TODO")
        }

        // to test the property `kratosCourierTemplatesVerificationValidEmailBodyPlaintext` - Configures the Ory Kratos Valid Verification Email Body Plaintext Template  This governs the \"courier.smtp.templates.verification.valid.email.body.plaintext\" setting.
        should("test kratosCourierTemplatesVerificationValidEmailBodyPlaintext") {
            // uncomment below to test the property
            //modelInstance.kratosCourierTemplatesVerificationValidEmailBodyPlaintext shouldBe ("TODO")
        }

        // to test the property `kratosCourierTemplatesVerificationValidEmailSubject` - Configures the Ory Kratos Valid Verification Email Subject Template  This governs the \"courier.smtp.templates.verification.valid.email.subject\" setting.
        should("test kratosCourierTemplatesVerificationValidEmailSubject") {
            // uncomment below to test the property
            //modelInstance.kratosCourierTemplatesVerificationValidEmailSubject shouldBe ("TODO")
        }

        // to test the property `kratosFeatureFlagsCacheableSessions` - Configures the Ory Kratos Session caching feature flag  This governs the \"feature_flags.cacheable_sessions\" setting.
        should("test kratosFeatureFlagsCacheableSessions") {
            // uncomment below to test the property
            //modelInstance.kratosFeatureFlagsCacheableSessions shouldBe ("TODO")
        }

        // to test the property `kratosFeatureFlagsCacheableSessionsMaxAge` - Configures the Ory Kratos Session caching max-age feature flag  This governs the \"feature_flags.cacheable_sessions_max_age\" setting.
        should("test kratosFeatureFlagsCacheableSessionsMaxAge") {
            // uncomment below to test the property
            //modelInstance.kratosFeatureFlagsCacheableSessionsMaxAge shouldBe ("TODO")
        }

        // to test the property `kratosFeatureFlagsFasterSessionExtend` - Configures the Ory Kratos Faster Session Extend setting  If enabled allows faster session extension by skipping the session lookup and returning 201 instead of 200. Disabling this feature will be deprecated in the future.  This governs the \"feature_flags.faster_session_extend\" setting.
        should("test kratosFeatureFlagsFasterSessionExtend") {
            // uncomment below to test the property
            //modelInstance.kratosFeatureFlagsFasterSessionExtend shouldBe ("TODO")
        }

        // to test the property `kratosFeatureFlagsUseContinueWithTransitions` - Configures the Ory Kratos Session use_continue_with_transitions flag  This governs the \"feature_flags.use_continue_with_transitions\" setting.
        should("test kratosFeatureFlagsUseContinueWithTransitions") {
            // uncomment below to test the property
            //modelInstance.kratosFeatureFlagsUseContinueWithTransitions shouldBe ("TODO")
        }

        // to test the property `kratosIdentitySchemas`
        should("test kratosIdentitySchemas") {
            // uncomment below to test the property
            //modelInstance.kratosIdentitySchemas shouldBe ("TODO")
        }

        // to test the property `kratosOauth2ProviderHeaders` - NullJSONRawMessage represents a json.RawMessage that works well with JSON, SQL, and Swagger and is NULLable-
        should("test kratosOauth2ProviderHeaders") {
            // uncomment below to test the property
            //modelInstance.kratosOauth2ProviderHeaders shouldBe ("TODO")
        }

        // to test the property `kratosOauth2ProviderOverrideReturnTo` - Kratos OAuth2 Provider Override Return To  Enabling this allows Kratos to set the return_to parameter automatically to the OAuth2 request URL on the login flow, allowing complex flows such as recovery to continue to the initial OAuth2 flow.
        should("test kratosOauth2ProviderOverrideReturnTo") {
            // uncomment below to test the property
            //modelInstance.kratosOauth2ProviderOverrideReturnTo shouldBe ("TODO")
        }

        // to test the property `kratosOauth2ProviderUrl` - The Revisions' OAuth2 Provider Integration URL  This governs the \"oauth2_provider.url\" setting.
        should("test kratosOauth2ProviderUrl") {
            // uncomment below to test the property
            //modelInstance.kratosOauth2ProviderUrl shouldBe ("TODO")
        }

        // to test the property `kratosPreviewDefaultReadConsistencyLevel` - Configures the default read consistency level for identity APIs  This governs the `preview.default_read_consistency_level` setting.  The read consistency level determines the consistency guarantee for reads:  strong (slow): The read is guaranteed to return the most recent data committed at the start of the read. eventual (very fast): The result will return data that is about 4.8 seconds old.  Setting the default consistency level to `eventual` may cause regressions in the future as we add consistency controls to more APIs. Currently, the following APIs will be affected by this setting:  `GET /admin/identities`  Defaults to \"strong\" for new and existing projects. This feature is in preview. Use with caution.
        should("test kratosPreviewDefaultReadConsistencyLevel") {
            // uncomment below to test the property
            //modelInstance.kratosPreviewDefaultReadConsistencyLevel shouldBe ("TODO")
        }

        // to test the property `kratosSecretsCipher`
        should("test kratosSecretsCipher") {
            // uncomment below to test the property
            //modelInstance.kratosSecretsCipher shouldBe ("TODO")
        }

        // to test the property `kratosSecretsCookie`
        should("test kratosSecretsCookie") {
            // uncomment below to test the property
            //modelInstance.kratosSecretsCookie shouldBe ("TODO")
        }

        // to test the property `kratosSecretsDefault`
        should("test kratosSecretsDefault") {
            // uncomment below to test the property
            //modelInstance.kratosSecretsDefault shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceAllowedReturnUrls`
        should("test kratosSelfserviceAllowedReturnUrls") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceAllowedReturnUrls shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceDefaultBrowserReturnUrl` - Configures the Ory Kratos Default Return URL  This governs the \"selfservice.allowed_return_urls\" setting.
        should("test kratosSelfserviceDefaultBrowserReturnUrl") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceDefaultBrowserReturnUrl shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceFlowsErrorUiUrl` - Configures the Ory Kratos Error UI URL  This governs the \"selfservice.flows.error.ui_url\" setting.
        should("test kratosSelfserviceFlowsErrorUiUrl") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceFlowsErrorUiUrl shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceFlowsLoginAfterCodeDefaultBrowserReturnUrl` - Configures the Ory Kratos Login After Password Default Return URL  This governs the \"selfservice.flows.code.after.password.default_browser_return_url\" setting.
        should("test kratosSelfserviceFlowsLoginAfterCodeDefaultBrowserReturnUrl") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceFlowsLoginAfterCodeDefaultBrowserReturnUrl shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceFlowsLoginAfterDefaultBrowserReturnUrl` - Configures the Ory Kratos Login Default Return URL  This governs the \"selfservice.flows.login.after.default_browser_return_url\" setting.
        should("test kratosSelfserviceFlowsLoginAfterDefaultBrowserReturnUrl") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceFlowsLoginAfterDefaultBrowserReturnUrl shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceFlowsLoginAfterLookupSecretDefaultBrowserReturnUrl` - Configures the Ory Kratos Login After Password Default Return URL  This governs the \"selfservice.flows.lookup_secret.after.password.default_browser_return_url\" setting.
        should("test kratosSelfserviceFlowsLoginAfterLookupSecretDefaultBrowserReturnUrl") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceFlowsLoginAfterLookupSecretDefaultBrowserReturnUrl shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceFlowsLoginAfterOidcDefaultBrowserReturnUrl` - Configures the Ory Kratos Login After OIDC Default Return URL  This governs the \"selfservice.flows.login.after.oidc.default_browser_return_url\" setting.
        should("test kratosSelfserviceFlowsLoginAfterOidcDefaultBrowserReturnUrl") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceFlowsLoginAfterOidcDefaultBrowserReturnUrl shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceFlowsLoginAfterPasskeyDefaultBrowserReturnUrl` - Configures the Ory Kratos Login After Passkey Default Return URL  This governs the \"selfservice.flows.login.after.passkey.default_browser_return_url\" setting.
        should("test kratosSelfserviceFlowsLoginAfterPasskeyDefaultBrowserReturnUrl") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceFlowsLoginAfterPasskeyDefaultBrowserReturnUrl shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceFlowsLoginAfterPasswordDefaultBrowserReturnUrl` - Configures the Ory Kratos Login After Password Default Return URL  This governs the \"selfservice.flows.login.after.password.default_browser_return_url\" setting.
        should("test kratosSelfserviceFlowsLoginAfterPasswordDefaultBrowserReturnUrl") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceFlowsLoginAfterPasswordDefaultBrowserReturnUrl shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceFlowsLoginAfterTotpDefaultBrowserReturnUrl` - Configures the Ory Kratos Login After Password Default Return URL  This governs the \"selfservice.flows.totp.after.password.default_browser_return_url\" setting.
        should("test kratosSelfserviceFlowsLoginAfterTotpDefaultBrowserReturnUrl") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceFlowsLoginAfterTotpDefaultBrowserReturnUrl shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceFlowsLoginAfterWebauthnDefaultBrowserReturnUrl` - Configures the Ory Kratos Login After WebAuthn Default Return URL  This governs the \"selfservice.flows.login.after.webauthn.default_browser_return_url\" setting.
        should("test kratosSelfserviceFlowsLoginAfterWebauthnDefaultBrowserReturnUrl") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceFlowsLoginAfterWebauthnDefaultBrowserReturnUrl shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceFlowsLoginLifespan` - Configures the Ory Kratos Login Lifespan  This governs the \"selfservice.flows.login.lifespan\" setting.
        should("test kratosSelfserviceFlowsLoginLifespan") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceFlowsLoginLifespan shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceFlowsLoginUiUrl` - Configures the Ory Kratos Login UI URL  This governs the \"selfservice.flows.login.ui_url\" setting.
        should("test kratosSelfserviceFlowsLoginUiUrl") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceFlowsLoginUiUrl shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceFlowsLogoutAfterDefaultBrowserReturnUrl` - Configures the Ory Kratos Logout Default Return URL  This governs the \"selfservice.flows.logout.after.default_browser_return_url\" setting.
        should("test kratosSelfserviceFlowsLogoutAfterDefaultBrowserReturnUrl") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceFlowsLogoutAfterDefaultBrowserReturnUrl shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceFlowsRecoveryAfterDefaultBrowserReturnUrl` - Configures the Ory Kratos Recovery Default Return URL  This governs the \"selfservice.flows.recovery.after.default_browser_return_url\" setting.
        should("test kratosSelfserviceFlowsRecoveryAfterDefaultBrowserReturnUrl") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceFlowsRecoveryAfterDefaultBrowserReturnUrl shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceFlowsRecoveryEnabled` - Configures the Ory Kratos Recovery Enabled Setting  This governs the \"selfservice.flows.recovery.enabled\" setting.
        should("test kratosSelfserviceFlowsRecoveryEnabled") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceFlowsRecoveryEnabled shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceFlowsRecoveryLifespan` - Configures the Ory Kratos Recovery Lifespan  This governs the \"selfservice.flows.recovery.lifespan\" setting.
        should("test kratosSelfserviceFlowsRecoveryLifespan") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceFlowsRecoveryLifespan shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceFlowsRecoveryNotifyUnknownRecipients` - Configures whether to notify unknown recipients of a Ory Kratos recovery flow  This governs the \"selfservice.flows.recovery.notify_unknown_recipients\" setting.
        should("test kratosSelfserviceFlowsRecoveryNotifyUnknownRecipients") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceFlowsRecoveryNotifyUnknownRecipients shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceFlowsRecoveryUiUrl` - Configures the Ory Kratos Recovery UI URL  This governs the \"selfservice.flows.recovery.ui_url\" setting.
        should("test kratosSelfserviceFlowsRecoveryUiUrl") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceFlowsRecoveryUiUrl shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceFlowsRecoveryUse` - Configures the Ory Kratos Recovery strategy to use (\"link\" or \"code\")  This governs the \"selfservice.flows.recovery.use\" setting. link SelfServiceMessageVerificationStrategyLink code SelfServiceMessageVerificationStrategyCode
        should("test kratosSelfserviceFlowsRecoveryUse") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceFlowsRecoveryUse shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceFlowsRegistrationAfterCodeDefaultBrowserReturnUrl` - Configures the Ory Kratos Registration After Code Default Return URL  This governs the \"selfservice.flows.registration.after.code.default_browser_return_url\" setting.
        should("test kratosSelfserviceFlowsRegistrationAfterCodeDefaultBrowserReturnUrl") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceFlowsRegistrationAfterCodeDefaultBrowserReturnUrl shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceFlowsRegistrationAfterDefaultBrowserReturnUrl` - Configures the Ory Kratos Registration Default Return URL  This governs the \"selfservice.flows.registration.after.default_browser_return_url\" setting.
        should("test kratosSelfserviceFlowsRegistrationAfterDefaultBrowserReturnUrl") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceFlowsRegistrationAfterDefaultBrowserReturnUrl shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceFlowsRegistrationAfterOidcDefaultBrowserReturnUrl` - Configures the Ory Kratos Registration After OIDC Default Return URL  This governs the \"selfservice.flows.registration.after.oidc.default_browser_return_url\" setting.
        should("test kratosSelfserviceFlowsRegistrationAfterOidcDefaultBrowserReturnUrl") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceFlowsRegistrationAfterOidcDefaultBrowserReturnUrl shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceFlowsRegistrationAfterPasskeyDefaultBrowserReturnUrl` - Configures the Ory Kratos Registration After Passkey Default Return URL  This governs the \"selfservice.flows.registration.after.password.default_browser_return_url\" setting.
        should("test kratosSelfserviceFlowsRegistrationAfterPasskeyDefaultBrowserReturnUrl") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceFlowsRegistrationAfterPasskeyDefaultBrowserReturnUrl shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceFlowsRegistrationAfterPasswordDefaultBrowserReturnUrl` - Configures the Ory Kratos Registration After Password Default Return URL  This governs the \"selfservice.flows.registration.after.password.default_browser_return_url\" setting.
        should("test kratosSelfserviceFlowsRegistrationAfterPasswordDefaultBrowserReturnUrl") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceFlowsRegistrationAfterPasswordDefaultBrowserReturnUrl shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceFlowsRegistrationAfterWebauthnDefaultBrowserReturnUrl` - Configures the Ory Kratos Registration After Webauthn Default Return URL  This governs the \"selfservice.flows.registration.after.webauthn.default_browser_return_url\" setting.
        should("test kratosSelfserviceFlowsRegistrationAfterWebauthnDefaultBrowserReturnUrl") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceFlowsRegistrationAfterWebauthnDefaultBrowserReturnUrl shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceFlowsRegistrationEnableLegacyOneStep` - Disable two-step registration  Two-step registration is a significantly improved sign up flow and recommended when using more than one sign up methods. To revert to one-step registration, set this to `true`.  This governs the \"selfservice.flows.registration.enable_legacy_one_step\" setting.
        should("test kratosSelfserviceFlowsRegistrationEnableLegacyOneStep") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceFlowsRegistrationEnableLegacyOneStep shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceFlowsRegistrationEnabled` - Configures the Whether Ory Kratos Registration is Enabled  This governs the \"selfservice.flows.registration.enabled\" setting.0
        should("test kratosSelfserviceFlowsRegistrationEnabled") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceFlowsRegistrationEnabled shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceFlowsRegistrationLifespan` - Configures the Ory Kratos Registration Lifespan  This governs the \"selfservice.flows.registration.lifespan\" setting.
        should("test kratosSelfserviceFlowsRegistrationLifespan") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceFlowsRegistrationLifespan shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceFlowsRegistrationLoginHints` - Configures the Ory Kratos Registration Login Hints  Shows helpful information when a user tries to sign up with a duplicate account.  This governs the \"selfservice.flows.registration.login_hints\" setting.
        should("test kratosSelfserviceFlowsRegistrationLoginHints") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceFlowsRegistrationLoginHints shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceFlowsRegistrationUiUrl` - Configures the Ory Kratos Registration UI URL  This governs the \"selfservice.flows.registration.ui_url\" setting.
        should("test kratosSelfserviceFlowsRegistrationUiUrl") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceFlowsRegistrationUiUrl shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceFlowsSettingsAfterDefaultBrowserReturnUrl` - Configures the Ory Kratos Settings Default Return URL  This governs the \"selfservice.flows.settings.after.default_browser_return_url\" setting.
        should("test kratosSelfserviceFlowsSettingsAfterDefaultBrowserReturnUrl") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceFlowsSettingsAfterDefaultBrowserReturnUrl shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceFlowsSettingsAfterLookupSecretDefaultBrowserReturnUrl` - Configures the Ory Kratos Settings Default Return URL After Updating Lookup Secrets  This governs the \"selfservice.flows.settings.after.lookup_secret.default_browser_return_url\" setting.
        should("test kratosSelfserviceFlowsSettingsAfterLookupSecretDefaultBrowserReturnUrl") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceFlowsSettingsAfterLookupSecretDefaultBrowserReturnUrl shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceFlowsSettingsAfterOidcDefaultBrowserReturnUrl` - Configures the Ory Kratos Settings Default Return URL After Updating Social Sign In  This governs the \"selfservice.flows.settings.after.oidc.default_browser_return_url\" setting.
        should("test kratosSelfserviceFlowsSettingsAfterOidcDefaultBrowserReturnUrl") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceFlowsSettingsAfterOidcDefaultBrowserReturnUrl shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceFlowsSettingsAfterPasskeyDefaultBrowserReturnUrl` - Configures the Ory Kratos Settings Default Return URL After Updating Passkey  This governs the \"selfservice.flows.settings.after.passkey.default_browser_return_url\" setting.
        should("test kratosSelfserviceFlowsSettingsAfterPasskeyDefaultBrowserReturnUrl") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceFlowsSettingsAfterPasskeyDefaultBrowserReturnUrl shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceFlowsSettingsAfterPasswordDefaultBrowserReturnUrl` - Configures the Ory Kratos Settings Default Return URL After Updating Passwords  This governs the \"selfservice.flows.settings.after.password.default_browser_return_url\" setting.
        should("test kratosSelfserviceFlowsSettingsAfterPasswordDefaultBrowserReturnUrl") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceFlowsSettingsAfterPasswordDefaultBrowserReturnUrl shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceFlowsSettingsAfterProfileDefaultBrowserReturnUrl` - Configures the Ory Kratos Settings Default Return URL After Updating Profiles  This governs the \"selfservice.flows.settings.after.profile.default_browser_return_url\" setting.
        should("test kratosSelfserviceFlowsSettingsAfterProfileDefaultBrowserReturnUrl") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceFlowsSettingsAfterProfileDefaultBrowserReturnUrl shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceFlowsSettingsAfterTotpDefaultBrowserReturnUrl` - Configures the Ory Kratos Settings Default Return URL After Updating TOTP  This governs the \"selfservice.flows.settings.after.totp.default_browser_return_url\" setting.
        should("test kratosSelfserviceFlowsSettingsAfterTotpDefaultBrowserReturnUrl") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceFlowsSettingsAfterTotpDefaultBrowserReturnUrl shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceFlowsSettingsAfterWebauthnDefaultBrowserReturnUrl` - Configures the Ory Kratos Settings Default Return URL After Updating WebAuthn  This governs the \"selfservice.flows.settings.after.webauthn.default_browser_return_url\" setting.
        should("test kratosSelfserviceFlowsSettingsAfterWebauthnDefaultBrowserReturnUrl") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceFlowsSettingsAfterWebauthnDefaultBrowserReturnUrl shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceFlowsSettingsLifespan` - Configures the Ory Kratos Settings Lifespan  This governs the \"selfservice.flows.settings.lifespan\" setting.
        should("test kratosSelfserviceFlowsSettingsLifespan") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceFlowsSettingsLifespan shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceFlowsSettingsPrivilegedSessionMaxAge` - Configures the Ory Kratos Settings Privileged Session Max Age  This governs the \"selfservice.flows.settings.privileged_session_max_age\" setting.
        should("test kratosSelfserviceFlowsSettingsPrivilegedSessionMaxAge") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceFlowsSettingsPrivilegedSessionMaxAge shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceFlowsSettingsRequiredAal` - Configures the Ory Kratos Settings Required AAL  This governs the \"selfservice.flows.settings.required_aal\" setting.
        should("test kratosSelfserviceFlowsSettingsRequiredAal") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceFlowsSettingsRequiredAal shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceFlowsSettingsUiUrl` - Configures the Ory Kratos Settings UI URL  This governs the \"selfservice.flows.settings.ui_url\" setting.
        should("test kratosSelfserviceFlowsSettingsUiUrl") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceFlowsSettingsUiUrl shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceFlowsVerificationAfterDefaultBrowserReturnUrl` - Configures the Ory Kratos Verification Default Return URL  This governs the \"selfservice.flows.verification.after.default_browser_return_url\" setting.
        should("test kratosSelfserviceFlowsVerificationAfterDefaultBrowserReturnUrl") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceFlowsVerificationAfterDefaultBrowserReturnUrl shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceFlowsVerificationEnabled` - Configures the Ory Kratos Verification Enabled Setting  This governs the \"selfservice.flows.verification.enabled\" setting.
        should("test kratosSelfserviceFlowsVerificationEnabled") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceFlowsVerificationEnabled shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceFlowsVerificationLifespan` - Configures the Ory Kratos Verification Lifespan  This governs the \"selfservice.flows.verification.lifespan\" setting.
        should("test kratosSelfserviceFlowsVerificationLifespan") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceFlowsVerificationLifespan shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceFlowsVerificationNotifyUnknownRecipients` - Configures whether to notify unknown recipients of a Ory Kratos verification flow  This governs the \"selfservice.flows.verification.notify_unknown_recipients\" setting.
        should("test kratosSelfserviceFlowsVerificationNotifyUnknownRecipients") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceFlowsVerificationNotifyUnknownRecipients shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceFlowsVerificationUiUrl` - Configures the Ory Kratos Verification UI URL  This governs the \"selfservice.flows.verification.ui_url\" setting.
        should("test kratosSelfserviceFlowsVerificationUiUrl") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceFlowsVerificationUiUrl shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceFlowsVerificationUse` - Configures the Ory Kratos Strategy to use for Verification  This governs the \"selfservice.flows.verification.use\" setting. link SelfServiceMessageVerificationStrategyLink code SelfServiceMessageVerificationStrategyCode
        should("test kratosSelfserviceFlowsVerificationUse") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceFlowsVerificationUse shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceMethodsCodeConfigLifespan` - Configures the Ory Kratos Code Method's lifespan  This governs the \"selfservice.methods.code.config.lifespan\" setting.
        should("test kratosSelfserviceMethodsCodeConfigLifespan") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceMethodsCodeConfigLifespan shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceMethodsCodeConfigMissingCredentialFallbackEnabled` - Enables a fallback method required in certain legacy use cases.  This governs the \"selfservice.methods.code.config.missing_credential_fallback_enabled\" setting.
        should("test kratosSelfserviceMethodsCodeConfigMissingCredentialFallbackEnabled") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceMethodsCodeConfigMissingCredentialFallbackEnabled shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceMethodsCodeEnabled` - Configures whether Ory Kratos Code Method is enabled  This governs the \"selfservice.methods.code.enabled\" setting.
        should("test kratosSelfserviceMethodsCodeEnabled") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceMethodsCodeEnabled shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceMethodsCodeMfaEnabled` - Configures whether the code method can be used to fulfil MFA flows  This governs the \"selfservice.methods.code.mfa_enabled\" setting.
        should("test kratosSelfserviceMethodsCodeMfaEnabled") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceMethodsCodeMfaEnabled shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceMethodsCodePasswordlessEnabled` - Configures whether Ory Kratos Passwordless should use the Code Method  This governs the \"selfservice.methods.code.passwordless_enabled\" setting.
        should("test kratosSelfserviceMethodsCodePasswordlessEnabled") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceMethodsCodePasswordlessEnabled shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceMethodsCodePasswordlessLoginFallbackEnabled` - This setting allows the code method to always login a user with code if they have registered with another authentication method such as password or social sign in.  This governs the \"selfservice.methods.code.passwordless_login_fallback_enabled\" setting.
        should("test kratosSelfserviceMethodsCodePasswordlessLoginFallbackEnabled") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceMethodsCodePasswordlessLoginFallbackEnabled shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceMethodsLinkConfigBaseUrl` - Configures the Base URL which Recovery, Verification, and Login Links Point to  It is recommended to leave this value empty. It will be appropriately configured to the best matching domain (e.g. when using custom domains) automatically.  This governs the \"selfservice.methods.link.config.base_url\" setting.
        should("test kratosSelfserviceMethodsLinkConfigBaseUrl") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceMethodsLinkConfigBaseUrl shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceMethodsLinkConfigLifespan` - Configures the Ory Kratos Link Method's lifespan  This governs the \"selfservice.methods.link.config.lifespan\" setting.
        should("test kratosSelfserviceMethodsLinkConfigLifespan") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceMethodsLinkConfigLifespan shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceMethodsLinkEnabled` - Configures whether Ory Kratos Link Method is enabled  This governs the \"selfservice.methods.link.enabled\" setting.
        should("test kratosSelfserviceMethodsLinkEnabled") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceMethodsLinkEnabled shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceMethodsLookupSecretEnabled` - Configures whether Ory Kratos TOTP Lookup Secret is enabled  This governs the \"selfservice.methods.lookup_secret.enabled\" setting.
        should("test kratosSelfserviceMethodsLookupSecretEnabled") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceMethodsLookupSecretEnabled shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceMethodsOidcConfigBaseRedirectUri` - Configures the Ory Kratos Third Party / OpenID Connect base redirect URI  This governs the \"selfservice.methods.oidc.config.base_redirect_uri\" setting.
        should("test kratosSelfserviceMethodsOidcConfigBaseRedirectUri") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceMethodsOidcConfigBaseRedirectUri shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceMethodsOidcConfigProviders`
        should("test kratosSelfserviceMethodsOidcConfigProviders") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceMethodsOidcConfigProviders shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceMethodsOidcEnabled` - Configures whether Ory Kratos Third Party / OpenID Connect Login is enabled  This governs the \"selfservice.methods.oidc.enabled\" setting.
        should("test kratosSelfserviceMethodsOidcEnabled") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceMethodsOidcEnabled shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceMethodsPasskeyConfigRpDisplayName` - Configures the Ory Kratos Passkey RP Display Name  This governs the \"selfservice.methods.passkey.config.rp.display_name\" setting.
        should("test kratosSelfserviceMethodsPasskeyConfigRpDisplayName") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceMethodsPasskeyConfigRpDisplayName shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceMethodsPasskeyConfigRpId` - Configures the Ory Kratos Passkey RP ID  This governs the \"selfservice.methods.passkey.config.rp.id\" setting.
        should("test kratosSelfserviceMethodsPasskeyConfigRpId") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceMethodsPasskeyConfigRpId shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceMethodsPasskeyConfigRpOrigins`
        should("test kratosSelfserviceMethodsPasskeyConfigRpOrigins") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceMethodsPasskeyConfigRpOrigins shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceMethodsPasskeyEnabled` - Configures whether Ory Kratos Passkey authentication is enabled  This governs the \"selfservice.methods.passkey.enabled\" setting.
        should("test kratosSelfserviceMethodsPasskeyEnabled") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceMethodsPasskeyEnabled shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceMethodsPasswordConfigHaveibeenpwnedEnabled` - Configures whether Ory Kratos Password HIBP Checks is enabled  This governs the \"selfservice.methods.password.config.haveibeenpwned_enabled\" setting.
        should("test kratosSelfserviceMethodsPasswordConfigHaveibeenpwnedEnabled") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceMethodsPasswordConfigHaveibeenpwnedEnabled shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceMethodsPasswordConfigIdentifierSimilarityCheckEnabled` - Configures whether Ory Kratos Password should disable the similarity policy.  This governs the \"selfservice.methods.password.config.identifier_similarity_check_enabled\" setting.
        should("test kratosSelfserviceMethodsPasswordConfigIdentifierSimilarityCheckEnabled") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceMethodsPasswordConfigIdentifierSimilarityCheckEnabled shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceMethodsPasswordConfigIgnoreNetworkErrors` - Configures whether Ory Kratos Password Should ignore HIBPWND Network Errors  This governs the \"selfservice.methods.password.config.ignore_network_errors\" setting.
        should("test kratosSelfserviceMethodsPasswordConfigIgnoreNetworkErrors") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceMethodsPasswordConfigIgnoreNetworkErrors shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceMethodsPasswordConfigMaxBreaches` - Configures Ory Kratos Password Max Breaches Detection  This governs the \"selfservice.methods.password.config.max_breaches\" setting.
        should("test kratosSelfserviceMethodsPasswordConfigMaxBreaches") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceMethodsPasswordConfigMaxBreaches shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceMethodsPasswordConfigMinPasswordLength` - Configures the minimum length of passwords.  This governs the \"selfservice.methods.password.config.min_password_length\" setting.
        should("test kratosSelfserviceMethodsPasswordConfigMinPasswordLength") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceMethodsPasswordConfigMinPasswordLength shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceMethodsPasswordEnabled` - Configures whether Ory Kratos Password Method is enabled  This governs the \"selfservice.methods.password.enabled\" setting.
        should("test kratosSelfserviceMethodsPasswordEnabled") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceMethodsPasswordEnabled shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceMethodsProfileEnabled` - Configures whether Ory Kratos Profile Method is enabled  This governs the \"selfservice.methods.profile.enabled\" setting.
        should("test kratosSelfserviceMethodsProfileEnabled") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceMethodsProfileEnabled shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceMethodsTotpConfigIssuer` - Configures Ory Kratos TOTP Issuer  This governs the \"selfservice.methods.totp.config.issuer\" setting.
        should("test kratosSelfserviceMethodsTotpConfigIssuer") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceMethodsTotpConfigIssuer shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceMethodsTotpEnabled` - Configures whether Ory Kratos TOTP Method is enabled  This governs the \"selfservice.methods.totp.enabled\" setting.
        should("test kratosSelfserviceMethodsTotpEnabled") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceMethodsTotpEnabled shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceMethodsWebauthnConfigPasswordless` - Configures whether Ory Kratos Webauthn is used for passwordless flows  This governs the \"selfservice.methods.webauthn.config.passwordless\" setting.
        should("test kratosSelfserviceMethodsWebauthnConfigPasswordless") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceMethodsWebauthnConfigPasswordless shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceMethodsWebauthnConfigRpDisplayName` - Configures the Ory Kratos Webauthn RP Display Name  This governs the \"selfservice.methods.webauthn.config.rp.display_name\" setting.
        should("test kratosSelfserviceMethodsWebauthnConfigRpDisplayName") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceMethodsWebauthnConfigRpDisplayName shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceMethodsWebauthnConfigRpIcon` - Configures the Ory Kratos Webauthn RP Icon  This governs the \"selfservice.methods.webauthn.config.rp.icon\" setting. Deprecated: This value will be ignored due to security considerations.
        should("test kratosSelfserviceMethodsWebauthnConfigRpIcon") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceMethodsWebauthnConfigRpIcon shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceMethodsWebauthnConfigRpId` - Configures the Ory Kratos Webauthn RP ID  This governs the \"selfservice.methods.webauthn.config.rp.id\" setting.
        should("test kratosSelfserviceMethodsWebauthnConfigRpId") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceMethodsWebauthnConfigRpId shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceMethodsWebauthnConfigRpOrigins`
        should("test kratosSelfserviceMethodsWebauthnConfigRpOrigins") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceMethodsWebauthnConfigRpOrigins shouldBe ("TODO")
        }

        // to test the property `kratosSelfserviceMethodsWebauthnEnabled` - Configures whether Ory Kratos Webauthn is enabled  This governs the \"selfservice.methods.webauthn.enabled\" setting.
        should("test kratosSelfserviceMethodsWebauthnEnabled") {
            // uncomment below to test the property
            //modelInstance.kratosSelfserviceMethodsWebauthnEnabled shouldBe ("TODO")
        }

        // to test the property `kratosSessionCookiePersistent` - Configures the Ory Kratos Session Cookie Persistent Attribute  This governs the \"session.cookie.persistent\" setting.
        should("test kratosSessionCookiePersistent") {
            // uncomment below to test the property
            //modelInstance.kratosSessionCookiePersistent shouldBe ("TODO")
        }

        // to test the property `kratosSessionCookieSameSite` - Configures the Ory Kratos Session Cookie SameSite Attribute  This governs the \"session.cookie.same_site\" setting.
        should("test kratosSessionCookieSameSite") {
            // uncomment below to test the property
            //modelInstance.kratosSessionCookieSameSite shouldBe ("TODO")
        }

        // to test the property `kratosSessionLifespan` - Configures the Ory Kratos Session Lifespan  This governs the \"session.lifespan\" setting.
        should("test kratosSessionLifespan") {
            // uncomment below to test the property
            //modelInstance.kratosSessionLifespan shouldBe ("TODO")
        }

        // to test the property `kratosSessionWhoamiRequiredAal` - Configures the Ory Kratos Session Whoami AAL requirement  This governs the \"session.whoami.required_aal\" setting.
        should("test kratosSessionWhoamiRequiredAal") {
            // uncomment below to test the property
            //modelInstance.kratosSessionWhoamiRequiredAal shouldBe ("TODO")
        }

        // to test the property `kratosSessionWhoamiTokenizerTemplates`
        should("test kratosSessionWhoamiTokenizerTemplates") {
            // uncomment below to test the property
            //modelInstance.kratosSessionWhoamiTokenizerTemplates shouldBe ("TODO")
        }

        // to test the property `projectId` - The Revision's Project ID
        should("test projectId") {
            // uncomment below to test the property
            //modelInstance.projectId shouldBe ("TODO")
        }

        // to test the property `projectRevisionHooks`
        should("test projectRevisionHooks") {
            // uncomment below to test the property
            //modelInstance.projectRevisionHooks shouldBe ("TODO")
        }

        // to test the property `serveAdminCorsAllowedOrigins`
        should("test serveAdminCorsAllowedOrigins") {
            // uncomment below to test the property
            //modelInstance.serveAdminCorsAllowedOrigins shouldBe ("TODO")
        }

        // to test the property `serveAdminCorsEnabled` - Enable CORS headers on all admin APIs  This governs the \"serve.admin.cors.enabled\" setting.
        should("test serveAdminCorsEnabled") {
            // uncomment below to test the property
            //modelInstance.serveAdminCorsEnabled shouldBe ("TODO")
        }

        // to test the property `servePublicCorsAllowedOrigins`
        should("test servePublicCorsAllowedOrigins") {
            // uncomment below to test the property
            //modelInstance.servePublicCorsAllowedOrigins shouldBe ("TODO")
        }

        // to test the property `servePublicCorsEnabled` - Enable CORS headers on all public APIs  This governs the \"serve.public.cors.enabled\" setting.
        should("test servePublicCorsEnabled") {
            // uncomment below to test the property
            //modelInstance.servePublicCorsEnabled shouldBe ("TODO")
        }

        // to test the property `strictSecurity` - Whether the project should employ strict security measures. Setting this to true is recommended for going into production.
        should("test strictSecurity") {
            // uncomment below to test the property
            //modelInstance.strictSecurity shouldBe ("TODO")
        }

        // to test the property `updatedAt` - Last Time Project's Revision was Updated
        should("test updatedAt") {
            // uncomment below to test the property
            //modelInstance.updatedAt shouldBe ("TODO")
        }

        // to test the property `workspaceId`
        should("test workspaceId") {
            // uncomment below to test the property
            //modelInstance.workspaceId shouldBe ("TODO")
        }

    }
}
