/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package sh.ory.client-kotlin-multiplatform.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import sh.ory.client-kotlin-multiplatform.models.ManagedIdentitySchema

class ManagedIdentitySchemaTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of ManagedIdentitySchema
        //val modelInstance = ManagedIdentitySchema()

        // to test the property `blobName` - The gcs file name  This is a randomly generated name which is used to uniquely identify the file on the blob storage
        should("test blobName") {
            // uncomment below to test the property
            //modelInstance.blobName shouldBe ("TODO")
        }

        // to test the property `blobUrl` - The publicly accessible url of the schema
        should("test blobUrl") {
            // uncomment below to test the property
            //modelInstance.blobUrl shouldBe ("TODO")
        }

        // to test the property `createdAt` - The Schema's Creation Date
        should("test createdAt") {
            // uncomment below to test the property
            //modelInstance.createdAt shouldBe ("TODO")
        }

        // to test the property `id` - The schema's ID.
        should("test id") {
            // uncomment below to test the property
            //modelInstance.id shouldBe ("TODO")
        }

        // to test the property `name` - The schema name  This is set by the user and is for them to easily recognise their schema
        should("test name") {
            // uncomment below to test the property
            //modelInstance.name shouldBe ("TODO")
        }

        // to test the property `updatedAt` - Last Time Schema was Updated
        should("test updatedAt") {
            // uncomment below to test the property
            //modelInstance.updatedAt shouldBe ("TODO")
        }

        // to test the property `contentHash` - The Content Hash  Contains a hash of the schema's content.
        should("test contentHash") {
            // uncomment below to test the property
            //modelInstance.contentHash shouldBe ("TODO")
        }

    }
}
