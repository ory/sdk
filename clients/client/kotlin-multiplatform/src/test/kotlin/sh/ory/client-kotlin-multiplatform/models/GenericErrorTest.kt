/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package sh.ory.client-kotlin-multiplatform.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import sh.ory.client-kotlin-multiplatform.models.GenericError
import sh.ory.client-kotlin-multiplatform.models.GenericErrorContent

class GenericErrorTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of GenericError
        //val modelInstance = GenericError()

        // to test the property `message` - Error message  The error's message.
        should("test message") {
            // uncomment below to test the property
            //modelInstance.message shouldBe ("TODO")
        }

        // to test the property `code` - The status code
        should("test code") {
            // uncomment below to test the property
            //modelInstance.code shouldBe ("TODO")
        }

        // to test the property `debug` - Debug information  This field is often not exposed to protect against leaking sensitive information.
        should("test debug") {
            // uncomment below to test the property
            //modelInstance.debug shouldBe ("TODO")
        }

        // to test the property `details` - Further error details
        should("test details") {
            // uncomment below to test the property
            //modelInstance.details shouldBe ("TODO")
        }

        // to test the property `error`
        should("test error") {
            // uncomment below to test the property
            //modelInstance.error shouldBe ("TODO")
        }

        // to test the property `id` - The error ID  Useful when trying to identify various errors in application logic.
        should("test id") {
            // uncomment below to test the property
            //modelInstance.id shouldBe ("TODO")
        }

        // to test the property `reason` - A human-readable reason for the error
        should("test reason") {
            // uncomment below to test the property
            //modelInstance.reason shouldBe ("TODO")
        }

        // to test the property `request` - The request ID  The request ID is often exposed internally in order to trace errors across service architectures. This is often a UUID.
        should("test request") {
            // uncomment below to test the property
            //modelInstance.request shouldBe ("TODO")
        }

        // to test the property `status` - The status description
        should("test status") {
            // uncomment below to test the property
            //modelInstance.status shouldBe ("TODO")
        }

    }
}
