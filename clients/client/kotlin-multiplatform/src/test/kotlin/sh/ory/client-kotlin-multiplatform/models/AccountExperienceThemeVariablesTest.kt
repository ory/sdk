/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package sh.ory.client-kotlin-multiplatform.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import sh.ory.client-kotlin-multiplatform.models.AccountExperienceThemeVariables

class AccountExperienceThemeVariablesTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of AccountExperienceThemeVariables
        //val modelInstance = AccountExperienceThemeVariables()

        // to test the property `accent`
        should("test accent") {
            // uncomment below to test the property
            //modelInstance.accent shouldBe ("TODO")
        }

        // to test the property `bgDefault`
        should("test bgDefault") {
            // uncomment below to test the property
            //modelInstance.bgDefault shouldBe ("TODO")
        }

        // to test the property `borderRadiusBranding`
        should("test borderRadiusBranding") {
            // uncomment below to test the property
            //modelInstance.borderRadiusBranding shouldBe ("TODO")
        }

        // to test the property `borderRadiusButtons`
        should("test borderRadiusButtons") {
            // uncomment below to test the property
            //modelInstance.borderRadiusButtons shouldBe ("TODO")
        }

        // to test the property `borderRadiusCards`
        should("test borderRadiusCards") {
            // uncomment below to test the property
            //modelInstance.borderRadiusCards shouldBe ("TODO")
        }

        // to test the property `borderRadiusForms`
        should("test borderRadiusForms") {
            // uncomment below to test the property
            //modelInstance.borderRadiusForms shouldBe ("TODO")
        }

        // to test the property `borderRadiusGeneral`
        should("test borderRadiusGeneral") {
            // uncomment below to test the property
            //modelInstance.borderRadiusGeneral shouldBe ("TODO")
        }

        // to test the property `buttonPrimaryBgDefault`
        should("test buttonPrimaryBgDefault") {
            // uncomment below to test the property
            //modelInstance.buttonPrimaryBgDefault shouldBe ("TODO")
        }

        // to test the property `buttonPrimaryBgDisabled`
        should("test buttonPrimaryBgDisabled") {
            // uncomment below to test the property
            //modelInstance.buttonPrimaryBgDisabled shouldBe ("TODO")
        }

        // to test the property `buttonPrimaryBgHover`
        should("test buttonPrimaryBgHover") {
            // uncomment below to test the property
            //modelInstance.buttonPrimaryBgHover shouldBe ("TODO")
        }

        // to test the property `buttonPrimaryBorderDefault`
        should("test buttonPrimaryBorderDefault") {
            // uncomment below to test the property
            //modelInstance.buttonPrimaryBorderDefault shouldBe ("TODO")
        }

        // to test the property `buttonPrimaryBorderDisabled`
        should("test buttonPrimaryBorderDisabled") {
            // uncomment below to test the property
            //modelInstance.buttonPrimaryBorderDisabled shouldBe ("TODO")
        }

        // to test the property `buttonPrimaryBorderHover`
        should("test buttonPrimaryBorderHover") {
            // uncomment below to test the property
            //modelInstance.buttonPrimaryBorderHover shouldBe ("TODO")
        }

        // to test the property `buttonPrimaryFgDefault`
        should("test buttonPrimaryFgDefault") {
            // uncomment below to test the property
            //modelInstance.buttonPrimaryFgDefault shouldBe ("TODO")
        }

        // to test the property `buttonPrimaryFgDisabled`
        should("test buttonPrimaryFgDisabled") {
            // uncomment below to test the property
            //modelInstance.buttonPrimaryFgDisabled shouldBe ("TODO")
        }

        // to test the property `buttonPrimaryFgHover`
        should("test buttonPrimaryFgHover") {
            // uncomment below to test the property
            //modelInstance.buttonPrimaryFgHover shouldBe ("TODO")
        }

        // to test the property `buttonSecondaryBgDefault`
        should("test buttonSecondaryBgDefault") {
            // uncomment below to test the property
            //modelInstance.buttonSecondaryBgDefault shouldBe ("TODO")
        }

        // to test the property `buttonSecondaryBgDisabled`
        should("test buttonSecondaryBgDisabled") {
            // uncomment below to test the property
            //modelInstance.buttonSecondaryBgDisabled shouldBe ("TODO")
        }

        // to test the property `buttonSecondaryBgHover`
        should("test buttonSecondaryBgHover") {
            // uncomment below to test the property
            //modelInstance.buttonSecondaryBgHover shouldBe ("TODO")
        }

        // to test the property `buttonSecondaryBorderDefault`
        should("test buttonSecondaryBorderDefault") {
            // uncomment below to test the property
            //modelInstance.buttonSecondaryBorderDefault shouldBe ("TODO")
        }

        // to test the property `buttonSecondaryBorderDisabled`
        should("test buttonSecondaryBorderDisabled") {
            // uncomment below to test the property
            //modelInstance.buttonSecondaryBorderDisabled shouldBe ("TODO")
        }

        // to test the property `buttonSecondaryBorderHover`
        should("test buttonSecondaryBorderHover") {
            // uncomment below to test the property
            //modelInstance.buttonSecondaryBorderHover shouldBe ("TODO")
        }

        // to test the property `buttonSecondaryFgDefault`
        should("test buttonSecondaryFgDefault") {
            // uncomment below to test the property
            //modelInstance.buttonSecondaryFgDefault shouldBe ("TODO")
        }

        // to test the property `buttonSecondaryFgDisabled`
        should("test buttonSecondaryFgDisabled") {
            // uncomment below to test the property
            //modelInstance.buttonSecondaryFgDisabled shouldBe ("TODO")
        }

        // to test the property `buttonSecondaryFgHover`
        should("test buttonSecondaryFgHover") {
            // uncomment below to test the property
            //modelInstance.buttonSecondaryFgHover shouldBe ("TODO")
        }

        // to test the property `buttonSocialBgDefault`
        should("test buttonSocialBgDefault") {
            // uncomment below to test the property
            //modelInstance.buttonSocialBgDefault shouldBe ("TODO")
        }

        // to test the property `buttonSocialBgDisabled`
        should("test buttonSocialBgDisabled") {
            // uncomment below to test the property
            //modelInstance.buttonSocialBgDisabled shouldBe ("TODO")
        }

        // to test the property `buttonSocialBgHover`
        should("test buttonSocialBgHover") {
            // uncomment below to test the property
            //modelInstance.buttonSocialBgHover shouldBe ("TODO")
        }

        // to test the property `buttonSocialBgProvider`
        should("test buttonSocialBgProvider") {
            // uncomment below to test the property
            //modelInstance.buttonSocialBgProvider shouldBe ("TODO")
        }

        // to test the property `buttonSocialBorderDefault`
        should("test buttonSocialBorderDefault") {
            // uncomment below to test the property
            //modelInstance.buttonSocialBorderDefault shouldBe ("TODO")
        }

        // to test the property `buttonSocialBorderDisabled`
        should("test buttonSocialBorderDisabled") {
            // uncomment below to test the property
            //modelInstance.buttonSocialBorderDisabled shouldBe ("TODO")
        }

        // to test the property `buttonSocialBorderHover`
        should("test buttonSocialBorderHover") {
            // uncomment below to test the property
            //modelInstance.buttonSocialBorderHover shouldBe ("TODO")
        }

        // to test the property `buttonSocialBorderProvider`
        should("test buttonSocialBorderProvider") {
            // uncomment below to test the property
            //modelInstance.buttonSocialBorderProvider shouldBe ("TODO")
        }

        // to test the property `buttonSocialFgDefault`
        should("test buttonSocialFgDefault") {
            // uncomment below to test the property
            //modelInstance.buttonSocialFgDefault shouldBe ("TODO")
        }

        // to test the property `buttonSocialFgDisabled`
        should("test buttonSocialFgDisabled") {
            // uncomment below to test the property
            //modelInstance.buttonSocialFgDisabled shouldBe ("TODO")
        }

        // to test the property `buttonSocialFgHover`
        should("test buttonSocialFgHover") {
            // uncomment below to test the property
            //modelInstance.buttonSocialFgHover shouldBe ("TODO")
        }

        // to test the property `buttonSocialFgProvider`
        should("test buttonSocialFgProvider") {
            // uncomment below to test the property
            //modelInstance.buttonSocialFgProvider shouldBe ("TODO")
        }

        // to test the property `createdAt`
        should("test createdAt") {
            // uncomment below to test the property
            //modelInstance.createdAt shouldBe ("TODO")
        }

        // to test the property `dialogBgDefault`
        should("test dialogBgDefault") {
            // uncomment below to test the property
            //modelInstance.dialogBgDefault shouldBe ("TODO")
        }

        // to test the property `dialogBgSubtle`
        should("test dialogBgSubtle") {
            // uncomment below to test the property
            //modelInstance.dialogBgSubtle shouldBe ("TODO")
        }

        // to test the property `dialogBorderDefault`
        should("test dialogBorderDefault") {
            // uncomment below to test the property
            //modelInstance.dialogBorderDefault shouldBe ("TODO")
        }

        // to test the property `dialogFgDefault`
        should("test dialogFgDefault") {
            // uncomment below to test the property
            //modelInstance.dialogFgDefault shouldBe ("TODO")
        }

        // to test the property `dialogFgMute`
        should("test dialogFgMute") {
            // uncomment below to test the property
            //modelInstance.dialogFgMute shouldBe ("TODO")
        }

        // to test the property `dialogFgSubtle`
        should("test dialogFgSubtle") {
            // uncomment below to test the property
            //modelInstance.dialogFgSubtle shouldBe ("TODO")
        }

        // to test the property `formsBgDefault`
        should("test formsBgDefault") {
            // uncomment below to test the property
            //modelInstance.formsBgDefault shouldBe ("TODO")
        }

        // to test the property `formsBgDisabled`
        should("test formsBgDisabled") {
            // uncomment below to test the property
            //modelInstance.formsBgDisabled shouldBe ("TODO")
        }

        // to test the property `formsBgHover`
        should("test formsBgHover") {
            // uncomment below to test the property
            //modelInstance.formsBgHover shouldBe ("TODO")
        }

        // to test the property `formsBorderDefault`
        should("test formsBorderDefault") {
            // uncomment below to test the property
            //modelInstance.formsBorderDefault shouldBe ("TODO")
        }

        // to test the property `formsBorderDisabled`
        should("test formsBorderDisabled") {
            // uncomment below to test the property
            //modelInstance.formsBorderDisabled shouldBe ("TODO")
        }

        // to test the property `formsBorderError`
        should("test formsBorderError") {
            // uncomment below to test the property
            //modelInstance.formsBorderError shouldBe ("TODO")
        }

        // to test the property `formsBorderFocus`
        should("test formsBorderFocus") {
            // uncomment below to test the property
            //modelInstance.formsBorderFocus shouldBe ("TODO")
        }

        // to test the property `formsBorderHover`
        should("test formsBorderHover") {
            // uncomment below to test the property
            //modelInstance.formsBorderHover shouldBe ("TODO")
        }

        // to test the property `formsBorderSuccess`
        should("test formsBorderSuccess") {
            // uncomment below to test the property
            //modelInstance.formsBorderSuccess shouldBe ("TODO")
        }

        // to test the property `formsBorderWarn`
        should("test formsBorderWarn") {
            // uncomment below to test the property
            //modelInstance.formsBorderWarn shouldBe ("TODO")
        }

        // to test the property `formsCheckboxBgChecked`
        should("test formsCheckboxBgChecked") {
            // uncomment below to test the property
            //modelInstance.formsCheckboxBgChecked shouldBe ("TODO")
        }

        // to test the property `formsCheckboxBgDefault`
        should("test formsCheckboxBgDefault") {
            // uncomment below to test the property
            //modelInstance.formsCheckboxBgDefault shouldBe ("TODO")
        }

        // to test the property `formsCheckboxBorderChecked`
        should("test formsCheckboxBorderChecked") {
            // uncomment below to test the property
            //modelInstance.formsCheckboxBorderChecked shouldBe ("TODO")
        }

        // to test the property `formsCheckboxBorderDefault`
        should("test formsCheckboxBorderDefault") {
            // uncomment below to test the property
            //modelInstance.formsCheckboxBorderDefault shouldBe ("TODO")
        }

        // to test the property `formsCheckboxFgChecked`
        should("test formsCheckboxFgChecked") {
            // uncomment below to test the property
            //modelInstance.formsCheckboxFgChecked shouldBe ("TODO")
        }

        // to test the property `formsCheckboxFgDefault`
        should("test formsCheckboxFgDefault") {
            // uncomment below to test the property
            //modelInstance.formsCheckboxFgDefault shouldBe ("TODO")
        }

        // to test the property `formsFgDefault`
        should("test formsFgDefault") {
            // uncomment below to test the property
            //modelInstance.formsFgDefault shouldBe ("TODO")
        }

        // to test the property `formsFgError`
        should("test formsFgError") {
            // uncomment below to test the property
            //modelInstance.formsFgError shouldBe ("TODO")
        }

        // to test the property `formsFgMute`
        should("test formsFgMute") {
            // uncomment below to test the property
            //modelInstance.formsFgMute shouldBe ("TODO")
        }

        // to test the property `formsFgSubtle`
        should("test formsFgSubtle") {
            // uncomment below to test the property
            //modelInstance.formsFgSubtle shouldBe ("TODO")
        }

        // to test the property `formsFgSuccess`
        should("test formsFgSuccess") {
            // uncomment below to test the property
            //modelInstance.formsFgSuccess shouldBe ("TODO")
        }

        // to test the property `formsFgWarn`
        should("test formsFgWarn") {
            // uncomment below to test the property
            //modelInstance.formsFgWarn shouldBe ("TODO")
        }

        // to test the property `formsRadioBgChecked`
        should("test formsRadioBgChecked") {
            // uncomment below to test the property
            //modelInstance.formsRadioBgChecked shouldBe ("TODO")
        }

        // to test the property `formsRadioBgDefault`
        should("test formsRadioBgDefault") {
            // uncomment below to test the property
            //modelInstance.formsRadioBgDefault shouldBe ("TODO")
        }

        // to test the property `formsRadioBorderChecked`
        should("test formsRadioBorderChecked") {
            // uncomment below to test the property
            //modelInstance.formsRadioBorderChecked shouldBe ("TODO")
        }

        // to test the property `formsRadioBorderDefault`
        should("test formsRadioBorderDefault") {
            // uncomment below to test the property
            //modelInstance.formsRadioBorderDefault shouldBe ("TODO")
        }

        // to test the property `formsRadioFgChecked`
        should("test formsRadioFgChecked") {
            // uncomment below to test the property
            //modelInstance.formsRadioFgChecked shouldBe ("TODO")
        }

        // to test the property `formsRadioFgDefault`
        should("test formsRadioFgDefault") {
            // uncomment below to test the property
            //modelInstance.formsRadioFgDefault shouldBe ("TODO")
        }

        // to test the property `formsToggleBgChecked`
        should("test formsToggleBgChecked") {
            // uncomment below to test the property
            //modelInstance.formsToggleBgChecked shouldBe ("TODO")
        }

        // to test the property `formsToggleBgDefault`
        should("test formsToggleBgDefault") {
            // uncomment below to test the property
            //modelInstance.formsToggleBgDefault shouldBe ("TODO")
        }

        // to test the property `formsToggleBorderChecked`
        should("test formsToggleBorderChecked") {
            // uncomment below to test the property
            //modelInstance.formsToggleBorderChecked shouldBe ("TODO")
        }

        // to test the property `formsToggleBorderDefault`
        should("test formsToggleBorderDefault") {
            // uncomment below to test the property
            //modelInstance.formsToggleBorderDefault shouldBe ("TODO")
        }

        // to test the property `formsToggleFgChecked`
        should("test formsToggleFgChecked") {
            // uncomment below to test the property
            //modelInstance.formsToggleFgChecked shouldBe ("TODO")
        }

        // to test the property `formsToggleFgDefault`
        should("test formsToggleFgDefault") {
            // uncomment below to test the property
            //modelInstance.formsToggleFgDefault shouldBe ("TODO")
        }

        // to test the property `id`
        should("test id") {
            // uncomment below to test the property
            //modelInstance.id shouldBe ("TODO")
        }

        // to test the property `linksLinkDefault`
        should("test linksLinkDefault") {
            // uncomment below to test the property
            //modelInstance.linksLinkDefault shouldBe ("TODO")
        }

        // to test the property `linksLinkDisabled`
        should("test linksLinkDisabled") {
            // uncomment below to test the property
            //modelInstance.linksLinkDisabled shouldBe ("TODO")
        }

        // to test the property `linksLinkHover`
        should("test linksLinkHover") {
            // uncomment below to test the property
            //modelInstance.linksLinkHover shouldBe ("TODO")
        }

        // to test the property `linksLinkInvertedDefault`
        should("test linksLinkInvertedDefault") {
            // uncomment below to test the property
            //modelInstance.linksLinkInvertedDefault shouldBe ("TODO")
        }

        // to test the property `linksLinkInvertedHover`
        should("test linksLinkInvertedHover") {
            // uncomment below to test the property
            //modelInstance.linksLinkInvertedHover shouldBe ("TODO")
        }

        // to test the property `linksLinkMuteDefault`
        should("test linksLinkMuteDefault") {
            // uncomment below to test the property
            //modelInstance.linksLinkMuteDefault shouldBe ("TODO")
        }

        // to test the property `linksLinkMuteHover`
        should("test linksLinkMuteHover") {
            // uncomment below to test the property
            //modelInstance.linksLinkMuteHover shouldBe ("TODO")
        }

        // to test the property `syntaxSyntax`
        should("test syntaxSyntax") {
            // uncomment below to test the property
            //modelInstance.syntaxSyntax shouldBe ("TODO")
        }

        // to test the property `syntaxSyntaxKey`
        should("test syntaxSyntaxKey") {
            // uncomment below to test the property
            //modelInstance.syntaxSyntaxKey shouldBe ("TODO")
        }

        // to test the property `syntaxSyntaxNum`
        should("test syntaxSyntaxNum") {
            // uncomment below to test the property
            //modelInstance.syntaxSyntaxNum shouldBe ("TODO")
        }

        // to test the property `syntaxSyntaxValue`
        should("test syntaxSyntaxValue") {
            // uncomment below to test the property
            //modelInstance.syntaxSyntaxValue shouldBe ("TODO")
        }

        // to test the property `updatedAt`
        should("test updatedAt") {
            // uncomment below to test the property
            //modelInstance.updatedAt shouldBe ("TODO")
        }

    }
}
