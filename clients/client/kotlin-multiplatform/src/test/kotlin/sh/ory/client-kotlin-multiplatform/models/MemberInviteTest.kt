/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package sh.ory.client-kotlin-multiplatform.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import sh.ory.client-kotlin-multiplatform.models.MemberInvite

class MemberInviteTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of MemberInvite
        //val modelInstance = MemberInvite()

        // to test the property `createdAt` - The Project's Revision Creation Date
        should("test createdAt") {
            // uncomment below to test the property
            //modelInstance.createdAt shouldBe ("TODO")
        }

        // to test the property `id` - The invite's ID.
        should("test id") {
            // uncomment below to test the property
            //modelInstance.id shouldBe ("TODO")
        }

        // to test the property `inviteeEmail` - The invitee's email
        should("test inviteeEmail") {
            // uncomment below to test the property
            //modelInstance.inviteeEmail shouldBe ("TODO")
        }

        // to test the property `ownerEmail` - The invite owner's email Usually the project's owner email
        should("test ownerEmail") {
            // uncomment below to test the property
            //modelInstance.ownerEmail shouldBe ("TODO")
        }

        // to test the property `ownerId` - The invite owner's ID Usually the project's owner
        should("test ownerId") {
            // uncomment below to test the property
            //modelInstance.ownerId shouldBe ("TODO")
        }

        // to test the property `status` - The invite's status Keeps track of the invites status such as pending, accepted, declined, expired pending PENDING accepted ACCEPTED declined DECLINED expired EXPIRED cancelled CANCELLED removed REMOVED
        should("test status") {
            // uncomment below to test the property
            //modelInstance.status shouldBe ("TODO")
        }

        // to test the property `updatedAt` - Last Time Project's Revision was Updated
        should("test updatedAt") {
            // uncomment below to test the property
            //modelInstance.updatedAt shouldBe ("TODO")
        }

        // to test the property `inviteeId`
        should("test inviteeId") {
            // uncomment below to test the property
            //modelInstance.inviteeId shouldBe ("TODO")
        }

        // to test the property `projectId`
        should("test projectId") {
            // uncomment below to test the property
            //modelInstance.projectId shouldBe ("TODO")
        }

        // to test the property `role`
        should("test role") {
            // uncomment below to test the property
            //modelInstance.role shouldBe ("TODO")
        }

        // to test the property `workspaceId`
        should("test workspaceId") {
            // uncomment below to test the property
            //modelInstance.workspaceId shouldBe ("TODO")
        }

    }
}
