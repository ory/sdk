/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package sh.ory.client-kotlin-multiplatform.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import sh.ory.client-kotlin-multiplatform.models.Project
import sh.ory.client-kotlin-multiplatform.models.ProjectCors
import sh.ory.client-kotlin-multiplatform.models.ProjectServices

class ProjectTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of Project
        //val modelInstance = Project()

        // to test the property `environment` - The environment of the project. prod Production stage Staging dev Development
        should("test environment") {
            // uncomment below to test the property
            //modelInstance.environment shouldBe ("TODO")
        }

        // to test the property `homeRegion` - The project home region.  This is used to set where the project data is stored and where the project's endpoints are located. eu-central EUCentral asia-northeast AsiaNorthEast us-east USEast us-west USWest us US global Global
        should("test homeRegion") {
            // uncomment below to test the property
            //modelInstance.homeRegion shouldBe ("TODO")
        }

        // to test the property `id` - The project's ID.
        should("test id") {
            // uncomment below to test the property
            //modelInstance.id shouldBe ("TODO")
        }

        // to test the property `name` - The name of the project.
        should("test name") {
            // uncomment below to test the property
            //modelInstance.name shouldBe ("TODO")
        }

        // to test the property `revisionId` - The configuration revision ID.
        should("test revisionId") {
            // uncomment below to test the property
            //modelInstance.revisionId shouldBe ("TODO")
        }

        // to test the property `services`
        should("test services") {
            // uncomment below to test the property
            //modelInstance.services shouldBe ("TODO")
        }

        // to test the property `slug` - The project's slug
        should("test slug") {
            // uncomment below to test the property
            //modelInstance.slug shouldBe ("TODO")
        }

        // to test the property `state` - The state of the project. running Running halted Halted deleted Deleted
        should("test state") {
            // uncomment below to test the property
            //modelInstance.state shouldBe ("TODO")
        }

        // to test the property `corsAdmin`
        should("test corsAdmin") {
            // uncomment below to test the property
            //modelInstance.corsAdmin shouldBe ("TODO")
        }

        // to test the property `corsPublic`
        should("test corsPublic") {
            // uncomment below to test the property
            //modelInstance.corsPublic shouldBe ("TODO")
        }

        // to test the property `workspaceId`
        should("test workspaceId") {
            // uncomment below to test the property
            //modelInstance.workspaceId shouldBe ("TODO")
        }

    }
}
