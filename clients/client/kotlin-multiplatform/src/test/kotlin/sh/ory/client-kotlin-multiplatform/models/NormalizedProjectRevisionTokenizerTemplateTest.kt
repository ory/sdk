/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package sh.ory.client-kotlin-multiplatform.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import sh.ory.client-kotlin-multiplatform.models.NormalizedProjectRevisionTokenizerTemplate

class NormalizedProjectRevisionTokenizerTemplateTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of NormalizedProjectRevisionTokenizerTemplate
        //val modelInstance = NormalizedProjectRevisionTokenizerTemplate()

        // to test the property `claimsMapperUrl` - Claims mapper URL
        should("test claimsMapperUrl") {
            // uncomment below to test the property
            //modelInstance.claimsMapperUrl shouldBe ("TODO")
        }

        // to test the property `createdAt` - The Project's Revision Creation Date
        should("test createdAt") {
            // uncomment below to test the property
            //modelInstance.createdAt shouldBe ("TODO")
        }

        // to test the property `id` - The revision ID.
        should("test id") {
            // uncomment below to test the property
            //modelInstance.id shouldBe ("TODO")
        }

        // to test the property `jwksUrl` - JSON Web Key URL
        should("test jwksUrl") {
            // uncomment below to test the property
            //modelInstance.jwksUrl shouldBe ("TODO")
        }

        // to test the property `key` - The unique key of the template
        should("test key") {
            // uncomment below to test the property
            //modelInstance.key shouldBe ("TODO")
        }

        // to test the property `projectRevisionId` - The Revision's ID this schema belongs to
        should("test projectRevisionId") {
            // uncomment below to test the property
            //modelInstance.projectRevisionId shouldBe ("TODO")
        }

        // to test the property `ttl` - Token time to live
        should("test ttl") {
            // uncomment below to test the property
            //modelInstance.ttl shouldBe ("TODO")
        }

        // to test the property `updatedAt` - Last Time Project's Revision was Updated
        should("test updatedAt") {
            // uncomment below to test the property
            //modelInstance.updatedAt shouldBe ("TODO")
        }

    }
}
