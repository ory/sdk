/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package sh.ory.client-kotlin-multiplatform.models

import sh.ory.client-kotlin-multiplatform.models.GenericUsage

import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * 
 *
 * @param baseFeeMonthly BaseFeeMonthly is the monthly base fee for the plan.
 * @param baseFeeYearly BaseFeeYearly is the yearly base fee for the plan.
 * @param custom Custom is true if the plan is custom. This means it will be hidden from the pricing page.
 * @param description Description is the description of the plan.
 * @param features 
 * @param name Name is the name of the plan.
 * @param version Version is the version of the plan. The combination of `name@version` must be unique.
 * @param latest Latest is true if the plan is the latest version of a plan and should be available for self-service usage.
 */
@Serializable

data class PlanDetails (

    /* BaseFeeMonthly is the monthly base fee for the plan. */
    @SerialName(value = "base_fee_monthly") @Required val baseFeeMonthly: kotlin.Long,

    /* BaseFeeYearly is the yearly base fee for the plan. */
    @SerialName(value = "base_fee_yearly") @Required val baseFeeYearly: kotlin.Long,

    /* Custom is true if the plan is custom. This means it will be hidden from the pricing page. */
    @SerialName(value = "custom") @Required val custom: kotlin.Boolean,

    /* Description is the description of the plan. */
    @SerialName(value = "description") @Required val description: kotlin.String,

    @SerialName(value = "features") @Required val features: kotlin.collections.Map<kotlin.String, GenericUsage>,

    /* Name is the name of the plan. */
    @SerialName(value = "name") @Required val name: kotlin.String,

    /* Version is the version of the plan. The combination of `name@version` must be unique. */
    @SerialName(value = "version") @Required val version: kotlin.Long,

    /* Latest is true if the plan is the latest version of a plan and should be available for self-service usage. */
    @SerialName(value = "latest") val latest: kotlin.Boolean? = null

) {


}

