/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package sh.ory.client-kotlin-multiplatform.models


import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * Update Settings Flow with OpenID Connect Method
 *
 * @param method Method  Should be set to profile when trying to update a profile.
 * @param flow Flow ID is the flow's ID.  in: query
 * @param link Link this provider  Either this or `unlink` must be set.  type: string in: body
 * @param traits The identity's traits  in: body
 * @param transientPayload Transient data to pass along to any webhooks
 * @param unlink Unlink this provider  Either this or `link` must be set.  type: string in: body
 * @param upstreamParameters UpstreamParameters are the parameters that are passed to the upstream identity provider.  These parameters are optional and depend on what the upstream identity provider supports. Supported parameters are: `login_hint` (string): The `login_hint` parameter suppresses the account chooser and either pre-fills the email box on the sign-in form, or selects the proper session. `hd` (string): The `hd` parameter limits the login/registration process to a Google Organization, e.g. `mycollege.edu`. `prompt` (string): The `prompt` specifies whether the Authorization Server prompts the End-User for reauthentication and consent, e.g. `select_account`.
 */
@Serializable

data class UpdateSettingsFlowWithOidcMethod (

    /* Method  Should be set to profile when trying to update a profile. */
    @SerialName(value = "method") @Required val method: kotlin.String,

    /* Flow ID is the flow's ID.  in: query */
    @SerialName(value = "flow") val flow: kotlin.String? = null,

    /* Link this provider  Either this or `unlink` must be set.  type: string in: body */
    @SerialName(value = "link") val link: kotlin.String? = null,

    /* The identity's traits  in: body */
    @SerialName(value = "traits") val traits: kotlin.String? = null,

    /* Transient data to pass along to any webhooks */
    @SerialName(value = "transient_payload") val transientPayload: kotlin.String? = null,

    /* Unlink this provider  Either this or `link` must be set.  type: string in: body */
    @SerialName(value = "unlink") val unlink: kotlin.String? = null,

    /* UpstreamParameters are the parameters that are passed to the upstream identity provider.  These parameters are optional and depend on what the upstream identity provider supports. Supported parameters are: `login_hint` (string): The `login_hint` parameter suppresses the account chooser and either pre-fills the email box on the sign-in form, or selects the proper session. `hd` (string): The `hd` parameter limits the login/registration process to a Google Organization, e.g. `mycollege.edu`. `prompt` (string): The `prompt` specifies whether the Authorization Server prompts the End-User for reauthentication and consent, e.g. `select_account`. */
    @SerialName(value = "upstream_parameters") val upstreamParameters: kotlin.String? = null

) {


}

