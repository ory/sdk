/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package sh.ory.client-kotlin-multiplatform.models

import sh.ory.client-kotlin-multiplatform.models.TrustedOAuth2JwtGrantJsonWebKey

import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * OAuth2 JWT Bearer Grant Type Issuer Trust Relationship
 *
 * @param allowAnySubject The \"allow_any_subject\" indicates that the issuer is allowed to have any principal as the subject of the JWT.
 * @param createdAt The \"created_at\" indicates, when grant was created.
 * @param expiresAt The \"expires_at\" indicates, when grant will expire, so we will reject assertion from \"issuer\" targeting \"subject\".
 * @param id 
 * @param issuer The \"issuer\" identifies the principal that issued the JWT assertion (same as \"iss\" claim in JWT).
 * @param publicKey 
 * @param scope The \"scope\" contains list of scope values (as described in Section 3.3 of OAuth 2.0 [RFC6749])
 * @param subject The \"subject\" identifies the principal that is the subject of the JWT.
 */
@Serializable

data class TrustedOAuth2JwtGrantIssuer (

    /* The \"allow_any_subject\" indicates that the issuer is allowed to have any principal as the subject of the JWT. */
    @SerialName(value = "allow_any_subject") val allowAnySubject: kotlin.Boolean? = null,

    /* The \"created_at\" indicates, when grant was created. */
    @SerialName(value = "created_at") val createdAt: kotlinx.datetime.Instant? = null,

    /* The \"expires_at\" indicates, when grant will expire, so we will reject assertion from \"issuer\" targeting \"subject\". */
    @SerialName(value = "expires_at") val expiresAt: kotlinx.datetime.Instant? = null,

    @SerialName(value = "id") val id: kotlin.String? = null,

    /* The \"issuer\" identifies the principal that issued the JWT assertion (same as \"iss\" claim in JWT). */
    @SerialName(value = "issuer") val issuer: kotlin.String? = null,

    @SerialName(value = "public_key") val publicKey: TrustedOAuth2JwtGrantJsonWebKey? = null,

    /* The \"scope\" contains list of scope values (as described in Section 3.3 of OAuth 2.0 [RFC6749]) */
    @SerialName(value = "scope") val scope: kotlin.collections.List<kotlin.String>? = null,

    /* The \"subject\" identifies the principal that is the subject of the JWT. */
    @SerialName(value = "subject") val subject: kotlin.String? = null

) {


}

