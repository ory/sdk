/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package sh.ory.client-kotlin-multiplatform.models

import sh.ory.client-kotlin-multiplatform.models.AcceptOAuth2ConsentRequestSession
import sh.ory.client-kotlin-multiplatform.models.OAuth2ConsentRequest
import sh.ory.client-kotlin-multiplatform.models.OAuth2ConsentSessionExpiresAt

import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * A completed OAuth 2.0 Consent Session.
 *
 * @param consentRequest 
 * @param context 
 * @param expiresAt 
 * @param grantAccessTokenAudience 
 * @param grantScope 
 * @param handledAt 
 * @param remember Remember Consent  Remember, if set to true, tells ORY Hydra to remember this consent authorization and reuse it if the same client asks the same user for the same, or a subset of, scope.
 * @param rememberFor Remember Consent For  RememberFor sets how long the consent authorization should be remembered for in seconds. If set to `0`, the authorization will be remembered indefinitely.
 * @param session 
 */
@Serializable

data class OAuth2ConsentSession (

    @SerialName(value = "consent_request") val consentRequest: OAuth2ConsentRequest? = null,

    @SerialName(value = "context") val context: kotlin.String? = null,

    @SerialName(value = "expires_at") val expiresAt: OAuth2ConsentSessionExpiresAt? = null,

    @SerialName(value = "grant_access_token_audience") val grantAccessTokenAudience: kotlin.collections.List<kotlin.String>? = null,

    @SerialName(value = "grant_scope") val grantScope: kotlin.collections.List<kotlin.String>? = null,

    @SerialName(value = "handled_at") val handledAt: kotlinx.datetime.Instant? = null,

    /* Remember Consent  Remember, if set to true, tells ORY Hydra to remember this consent authorization and reuse it if the same client asks the same user for the same, or a subset of, scope. */
    @SerialName(value = "remember") val remember: kotlin.Boolean? = null,

    /* Remember Consent For  RememberFor sets how long the consent authorization should be remembered for in seconds. If set to `0`, the authorization will be remembered indefinitely. */
    @SerialName(value = "remember_for") val rememberFor: kotlin.Long? = null,

    @SerialName(value = "session") val session: AcceptOAuth2ConsentRequestSession? = null

) {


}

