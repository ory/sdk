/* tslint:disable */
/* eslint-disable */
/**
 * Ory APIs
 * Documentation for all public and administrative Ory APIs. Administrative APIs can only be accessed with a valid Personal Access Token. Public APIs are mostly used in browsers. 
 *
 * The version of the OpenAPI document: v1.12.1
 * Contact: support@ory.sh
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { UiNodeAnchorAttributes } from './UiNodeAnchorAttributes';
import {
    instanceOfUiNodeAnchorAttributes,
    UiNodeAnchorAttributesFromJSON,
    UiNodeAnchorAttributesFromJSONTyped,
    UiNodeAnchorAttributesToJSON,
} from './UiNodeAnchorAttributes';
import type { UiNodeImageAttributes } from './UiNodeImageAttributes';
import {
    instanceOfUiNodeImageAttributes,
    UiNodeImageAttributesFromJSON,
    UiNodeImageAttributesFromJSONTyped,
    UiNodeImageAttributesToJSON,
} from './UiNodeImageAttributes';
import type { UiNodeInputAttributes } from './UiNodeInputAttributes';
import {
    instanceOfUiNodeInputAttributes,
    UiNodeInputAttributesFromJSON,
    UiNodeInputAttributesFromJSONTyped,
    UiNodeInputAttributesToJSON,
} from './UiNodeInputAttributes';
import type { UiNodeScriptAttributes } from './UiNodeScriptAttributes';
import {
    instanceOfUiNodeScriptAttributes,
    UiNodeScriptAttributesFromJSON,
    UiNodeScriptAttributesFromJSONTyped,
    UiNodeScriptAttributesToJSON,
} from './UiNodeScriptAttributes';
import type { UiNodeTextAttributes } from './UiNodeTextAttributes';
import {
    instanceOfUiNodeTextAttributes,
    UiNodeTextAttributesFromJSON,
    UiNodeTextAttributesFromJSONTyped,
    UiNodeTextAttributesToJSON,
} from './UiNodeTextAttributes';

/**
 * @type UiNodeAttributes
 * 
 * @export
 */
export type UiNodeAttributes = { node_type: 'a' } & UiNodeAnchorAttributes | { node_type: 'img' } & UiNodeImageAttributes | { node_type: 'input' } & UiNodeInputAttributes | { node_type: 'script' } & UiNodeScriptAttributes | { node_type: 'text' } & UiNodeTextAttributes;

export function UiNodeAttributesFromJSON(json: any): UiNodeAttributes {
    return UiNodeAttributesFromJSONTyped(json, false);
}

export function UiNodeAttributesFromJSONTyped(json: any, ignoreDiscriminator: boolean): UiNodeAttributes {
    if (json == null) {
        return json;
    }
    switch (json['node_type']) {
        case 'a':
            return {...UiNodeAnchorAttributesFromJSONTyped(json, true), node_type: 'a'};
        case 'img':
            return {...UiNodeImageAttributesFromJSONTyped(json, true), node_type: 'img'};
        case 'input':
            return {...UiNodeInputAttributesFromJSONTyped(json, true), node_type: 'input'};
        case 'script':
            return {...UiNodeScriptAttributesFromJSONTyped(json, true), node_type: 'script'};
        case 'text':
            return {...UiNodeTextAttributesFromJSONTyped(json, true), node_type: 'text'};
        default:
            throw new Error(`No variant of UiNodeAttributes exists with 'node_type=${json['node_type']}'`);
    }
}

export function UiNodeAttributesToJSON(value?: UiNodeAttributes | null): any {
    if (value == null) {
        return value;
    }
    switch (value['node_type']) {
        case 'a':
            return UiNodeAnchorAttributesToJSON(value);
        case 'img':
            return UiNodeImageAttributesToJSON(value);
        case 'input':
            return UiNodeInputAttributesToJSON(value);
        case 'script':
            return UiNodeScriptAttributesToJSON(value);
        case 'text':
            return UiNodeTextAttributesToJSON(value);
        default:
            throw new Error(`No variant of UiNodeAttributes exists with 'node_type=${value['node_type']}'`);
    }

}

