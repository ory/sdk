/*
 * Ory APIs
 *
 * # Introduction Documentation for all public and administrative Ory APIs. Administrative APIs can only be accessed with a valid Personal Access Token. Public APIs are mostly used in browsers.  ## SDKs This document describes the APIs available in the Ory Network. The APIs are available as SDKs for the following languages:  | Language       | Download SDK                                                     | Documentation                                                                        | | - -- -- -- -- -- -- - | - -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- - | - -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- - | | Dart           | [pub.dev](https://pub.dev/packages/ory_client)                   | [README](https://github.com/ory/sdk/blob/master/clients/client/dart/README.md)       | | .NET           | [nuget.org](https://www.nuget.org/packages/Ory.Client/)          | [README](https://github.com/ory/sdk/blob/master/clients/client/dotnet/README.md)     | | Elixir         | [hex.pm](https://hex.pm/packages/ory_client)                     | [README](https://github.com/ory/sdk/blob/master/clients/client/elixir/README.md)     | | Go             | [github.com](https://github.com/ory/client-go)                   | [README](https://github.com/ory/sdk/blob/master/clients/client/go/README.md)         | | Java           | [maven.org](https://search.maven.org/artifact/sh.ory/ory-client) | [README](https://github.com/ory/sdk/blob/master/clients/client/java/README.md)       | | JavaScript     | [npmjs.com](https://www.npmjs.com/package/@ory/client)           | [README](https://github.com/ory/sdk/blob/master/clients/client/typescript/README.md) | | JavaScript (With fetch) | [npmjs.com](https://www.npmjs.com/package/@ory/client-fetch)           | [README](https://github.com/ory/sdk/blob/master/clients/client/typescript-fetch/README.md) |  | PHP            | [packagist.org](https://packagist.org/packages/ory/client)       | [README](https://github.com/ory/sdk/blob/master/clients/client/php/README.md)        | | Python         | [pypi.org](https://pypi.org/project/ory-client/)                 | [README](https://github.com/ory/sdk/blob/master/clients/client/python/README.md)     | | Ruby           | [rubygems.org](https://rubygems.org/gems/ory-client)             | [README](https://github.com/ory/sdk/blob/master/clients/client/ruby/README.md)       | | Rust           | [crates.io](https://crates.io/crates/ory-client)                 | [README](https://github.com/ory/sdk/blob/master/clients/client/rust/README.md)       | 
 *
 * The version of the OpenAPI document: v1.20.9
 * Contact: support@ory.sh
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Ory.Client.Client.OpenAPIDateConverter;

namespace Ory.Client.Model
{
    /// <summary>
    /// ClientAccountExperienceColors
    /// </summary>
    [DataContract(Name = "AccountExperienceColors")]
    public partial class ClientAccountExperienceColors : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ClientAccountExperienceColors" /> class.
        /// </summary>
        /// <param name="brand100">brand100.</param>
        /// <param name="brand200">brand200.</param>
        /// <param name="brand300">brand300.</param>
        /// <param name="brand400">brand400.</param>
        /// <param name="brand50">brand50.</param>
        /// <param name="brand500">brand500.</param>
        /// <param name="brand600">brand600.</param>
        /// <param name="brand700">brand700.</param>
        /// <param name="brand800">brand800.</param>
        /// <param name="brand900">brand900.</param>
        /// <param name="brand950">brand950.</param>
        /// <param name="buttonIdentifierBackgroundDefault">buttonIdentifierBackgroundDefault.</param>
        /// <param name="buttonIdentifierBackgroundHover">buttonIdentifierBackgroundHover.</param>
        /// <param name="buttonIdentifierBorderBorderDefault">buttonIdentifierBorderBorderDefault.</param>
        /// <param name="buttonIdentifierBorderBorderHover">buttonIdentifierBorderBorderHover.</param>
        /// <param name="buttonIdentifierForegroundDefault">buttonIdentifierForegroundDefault.</param>
        /// <param name="buttonIdentifierForegroundHover">buttonIdentifierForegroundHover.</param>
        /// <param name="buttonLinkBrandBrand">buttonLinkBrandBrand.</param>
        /// <param name="buttonLinkBrandBrandHover">buttonLinkBrandBrandHover.</param>
        /// <param name="buttonLinkDefaultPrimary">buttonLinkDefaultPrimary.</param>
        /// <param name="buttonLinkDefaultPrimaryHover">buttonLinkDefaultPrimaryHover.</param>
        /// <param name="buttonLinkDefaultSecondary">buttonLinkDefaultSecondary.</param>
        /// <param name="buttonLinkDefaultSecondaryHover">buttonLinkDefaultSecondaryHover.</param>
        /// <param name="buttonLinkDisabledDisabled">buttonLinkDisabledDisabled.</param>
        /// <param name="buttonPrimaryBackgroundDefault">buttonPrimaryBackgroundDefault.</param>
        /// <param name="buttonPrimaryBackgroundDisabled">buttonPrimaryBackgroundDisabled.</param>
        /// <param name="buttonPrimaryBackgroundHover">buttonPrimaryBackgroundHover.</param>
        /// <param name="buttonPrimaryBorderDefault">buttonPrimaryBorderDefault.</param>
        /// <param name="buttonPrimaryBorderDisabled">buttonPrimaryBorderDisabled.</param>
        /// <param name="buttonPrimaryBorderHover">buttonPrimaryBorderHover.</param>
        /// <param name="buttonPrimaryForegroundDefault">buttonPrimaryForegroundDefault.</param>
        /// <param name="buttonPrimaryForegroundDisabled">buttonPrimaryForegroundDisabled.</param>
        /// <param name="buttonPrimaryForegroundHover">buttonPrimaryForegroundHover.</param>
        /// <param name="buttonSecondaryBackgroundDefault">buttonSecondaryBackgroundDefault.</param>
        /// <param name="buttonSecondaryBackgroundDisabled">buttonSecondaryBackgroundDisabled.</param>
        /// <param name="buttonSecondaryBackgroundHover">buttonSecondaryBackgroundHover.</param>
        /// <param name="buttonSecondaryBorderDefault">buttonSecondaryBorderDefault.</param>
        /// <param name="buttonSecondaryBorderDisabled">buttonSecondaryBorderDisabled.</param>
        /// <param name="buttonSecondaryBorderHover">buttonSecondaryBorderHover.</param>
        /// <param name="buttonSecondaryForegroundDefault">buttonSecondaryForegroundDefault.</param>
        /// <param name="buttonSecondaryForegroundDisabled">buttonSecondaryForegroundDisabled.</param>
        /// <param name="buttonSecondaryForegroundHover">buttonSecondaryForegroundHover.</param>
        /// <param name="buttonSocialBackgroundDefault">buttonSocialBackgroundDefault.</param>
        /// <param name="buttonSocialBackgroundDisabled">buttonSocialBackgroundDisabled.</param>
        /// <param name="buttonSocialBackgroundGenericProvider">buttonSocialBackgroundGenericProvider.</param>
        /// <param name="buttonSocialBackgroundHover">buttonSocialBackgroundHover.</param>
        /// <param name="buttonSocialBorderDefault">buttonSocialBorderDefault.</param>
        /// <param name="buttonSocialBorderDisabled">buttonSocialBorderDisabled.</param>
        /// <param name="buttonSocialBorderGenericProvider">buttonSocialBorderGenericProvider.</param>
        /// <param name="buttonSocialBorderHover">buttonSocialBorderHover.</param>
        /// <param name="buttonSocialForegroundDefault">buttonSocialForegroundDefault.</param>
        /// <param name="buttonSocialForegroundDisabled">buttonSocialForegroundDisabled.</param>
        /// <param name="buttonSocialForegroundGenericProvider">buttonSocialForegroundGenericProvider.</param>
        /// <param name="buttonSocialForegroundHover">buttonSocialForegroundHover.</param>
        /// <param name="checkboxBackgroundChecked">checkboxBackgroundChecked.</param>
        /// <param name="checkboxBackgroundDefault">checkboxBackgroundDefault.</param>
        /// <param name="checkboxBorderCheckboxBorderChecked">checkboxBorderCheckboxBorderChecked.</param>
        /// <param name="checkboxBorderCheckboxBorderDefault">checkboxBorderCheckboxBorderDefault.</param>
        /// <param name="checkboxForegroundChecked">checkboxForegroundChecked.</param>
        /// <param name="checkboxForegroundDefault">checkboxForegroundDefault.</param>
        /// <param name="formBackgroundDefault">formBackgroundDefault.</param>
        /// <param name="formBorderDefault">formBorderDefault.</param>
        /// <param name="inputBackgroundDefault">inputBackgroundDefault.</param>
        /// <param name="inputBackgroundDisabled">inputBackgroundDisabled.</param>
        /// <param name="inputBackgroundHover">inputBackgroundHover.</param>
        /// <param name="inputBorderDefault">inputBorderDefault.</param>
        /// <param name="inputBorderDisabled">inputBorderDisabled.</param>
        /// <param name="inputBorderFocus">inputBorderFocus.</param>
        /// <param name="inputBorderHover">inputBorderHover.</param>
        /// <param name="inputForegroundDisabled">inputForegroundDisabled.</param>
        /// <param name="inputForegroundPrimary">inputForegroundPrimary.</param>
        /// <param name="inputForegroundSecondary">inputForegroundSecondary.</param>
        /// <param name="inputForegroundTertiary">inputForegroundTertiary.</param>
        /// <param name="interfaceBackgroundBrandPrimary">interfaceBackgroundBrandPrimary.</param>
        /// <param name="interfaceBackgroundBrandPrimaryHover">interfaceBackgroundBrandPrimaryHover.</param>
        /// <param name="interfaceBackgroundBrandSecondary">interfaceBackgroundBrandSecondary.</param>
        /// <param name="interfaceBackgroundBrandSecondaryHover">interfaceBackgroundBrandSecondaryHover.</param>
        /// <param name="interfaceBackgroundDefaultInverted">interfaceBackgroundDefaultInverted.</param>
        /// <param name="interfaceBackgroundDefaultInvertedHover">interfaceBackgroundDefaultInvertedHover.</param>
        /// <param name="interfaceBackgroundDefaultNone">interfaceBackgroundDefaultNone.</param>
        /// <param name="interfaceBackgroundDefaultPrimary">interfaceBackgroundDefaultPrimary.</param>
        /// <param name="interfaceBackgroundDefaultPrimaryHover">interfaceBackgroundDefaultPrimaryHover.</param>
        /// <param name="interfaceBackgroundDefaultSecondary">interfaceBackgroundDefaultSecondary.</param>
        /// <param name="interfaceBackgroundDefaultSecondaryHover">interfaceBackgroundDefaultSecondaryHover.</param>
        /// <param name="interfaceBackgroundDefaultTertiary">interfaceBackgroundDefaultTertiary.</param>
        /// <param name="interfaceBackgroundDefaultTertiaryHover">interfaceBackgroundDefaultTertiaryHover.</param>
        /// <param name="interfaceBackgroundDisabledDisabled">interfaceBackgroundDisabledDisabled.</param>
        /// <param name="interfaceBackgroundValidationDanger">interfaceBackgroundValidationDanger.</param>
        /// <param name="interfaceBackgroundValidationSuccess">interfaceBackgroundValidationSuccess.</param>
        /// <param name="interfaceBackgroundValidationWarning">interfaceBackgroundValidationWarning.</param>
        /// <param name="interfaceBorderBrandBrand">interfaceBorderBrandBrand.</param>
        /// <param name="interfaceBorderDefaultInverted">interfaceBorderDefaultInverted.</param>
        /// <param name="interfaceBorderDefaultNone">interfaceBorderDefaultNone.</param>
        /// <param name="interfaceBorderDefaultPrimary">interfaceBorderDefaultPrimary.</param>
        /// <param name="interfaceBorderDisabledDisabled">interfaceBorderDisabledDisabled.</param>
        /// <param name="interfaceBorderValidationDanger">interfaceBorderValidationDanger.</param>
        /// <param name="interfaceBorderValidationSuccess">interfaceBorderValidationSuccess.</param>
        /// <param name="interfaceBorderValidationWarning">interfaceBorderValidationWarning.</param>
        /// <param name="interfaceForegroundBrandOnPrimary">interfaceForegroundBrandOnPrimary.</param>
        /// <param name="interfaceForegroundBrandOnSecondary">interfaceForegroundBrandOnSecondary.</param>
        /// <param name="interfaceForegroundBrandPrimary">interfaceForegroundBrandPrimary.</param>
        /// <param name="interfaceForegroundBrandSecondary">interfaceForegroundBrandSecondary.</param>
        /// <param name="interfaceForegroundDefaultInverted">interfaceForegroundDefaultInverted.</param>
        /// <param name="interfaceForegroundDefaultPrimary">interfaceForegroundDefaultPrimary.</param>
        /// <param name="interfaceForegroundDefaultSecondary">interfaceForegroundDefaultSecondary.</param>
        /// <param name="interfaceForegroundDefaultTertiary">interfaceForegroundDefaultTertiary.</param>
        /// <param name="interfaceForegroundDisabledDisabled">interfaceForegroundDisabledDisabled.</param>
        /// <param name="interfaceForegroundDisabledOnDisabled">interfaceForegroundDisabledOnDisabled.</param>
        /// <param name="interfaceForegroundValidationDanger">interfaceForegroundValidationDanger.</param>
        /// <param name="interfaceForegroundValidationSuccess">interfaceForegroundValidationSuccess.</param>
        /// <param name="interfaceForegroundValidationWarning">interfaceForegroundValidationWarning.</param>
        /// <param name="oryBackgroundDefault">oryBackgroundDefault.</param>
        /// <param name="oryBorderDefault">oryBorderDefault.</param>
        /// <param name="oryForegroundDefault">oryForegroundDefault.</param>
        /// <param name="radioBackgroundChecked">radioBackgroundChecked.</param>
        /// <param name="radioBackgroundDefault">radioBackgroundDefault.</param>
        /// <param name="radioBorderChecked">radioBorderChecked.</param>
        /// <param name="radioBorderDefault">radioBorderDefault.</param>
        /// <param name="radioForegroundChecked">radioForegroundChecked.</param>
        /// <param name="radioForegroundDefault">radioForegroundDefault.</param>
        /// <param name="toggleBackgroundChecked">toggleBackgroundChecked.</param>
        /// <param name="toggleBackgroundDefault">toggleBackgroundDefault.</param>
        /// <param name="toggleBorderChecked">toggleBorderChecked.</param>
        /// <param name="toggleBorderDefault">toggleBorderDefault.</param>
        /// <param name="toggleForegroundChecked">toggleForegroundChecked.</param>
        /// <param name="toggleForegroundDefault">toggleForegroundDefault.</param>
        /// <param name="ui100">ui100.</param>
        /// <param name="ui200">ui200.</param>
        /// <param name="ui300">ui300.</param>
        /// <param name="ui400">ui400.</param>
        /// <param name="ui50">ui50.</param>
        /// <param name="ui500">ui500.</param>
        /// <param name="ui600">ui600.</param>
        /// <param name="ui700">ui700.</param>
        /// <param name="ui800">ui800.</param>
        /// <param name="ui900">ui900.</param>
        /// <param name="ui950">ui950.</param>
        /// <param name="uiBlack">uiBlack.</param>
        /// <param name="uiDanger">uiDanger.</param>
        /// <param name="uiSuccess">uiSuccess.</param>
        /// <param name="uiTransparent">uiTransparent.</param>
        /// <param name="uiWarning">uiWarning.</param>
        /// <param name="uiWhite">uiWhite.</param>
        public ClientAccountExperienceColors(string brand100 = default(string), string brand200 = default(string), string brand300 = default(string), string brand400 = default(string), string brand50 = default(string), string brand500 = default(string), string brand600 = default(string), string brand700 = default(string), string brand800 = default(string), string brand900 = default(string), string brand950 = default(string), string buttonIdentifierBackgroundDefault = default(string), string buttonIdentifierBackgroundHover = default(string), string buttonIdentifierBorderBorderDefault = default(string), string buttonIdentifierBorderBorderHover = default(string), string buttonIdentifierForegroundDefault = default(string), string buttonIdentifierForegroundHover = default(string), string buttonLinkBrandBrand = default(string), string buttonLinkBrandBrandHover = default(string), string buttonLinkDefaultPrimary = default(string), string buttonLinkDefaultPrimaryHover = default(string), string buttonLinkDefaultSecondary = default(string), string buttonLinkDefaultSecondaryHover = default(string), string buttonLinkDisabledDisabled = default(string), string buttonPrimaryBackgroundDefault = default(string), string buttonPrimaryBackgroundDisabled = default(string), string buttonPrimaryBackgroundHover = default(string), string buttonPrimaryBorderDefault = default(string), string buttonPrimaryBorderDisabled = default(string), string buttonPrimaryBorderHover = default(string), string buttonPrimaryForegroundDefault = default(string), string buttonPrimaryForegroundDisabled = default(string), string buttonPrimaryForegroundHover = default(string), string buttonSecondaryBackgroundDefault = default(string), string buttonSecondaryBackgroundDisabled = default(string), string buttonSecondaryBackgroundHover = default(string), string buttonSecondaryBorderDefault = default(string), string buttonSecondaryBorderDisabled = default(string), string buttonSecondaryBorderHover = default(string), string buttonSecondaryForegroundDefault = default(string), string buttonSecondaryForegroundDisabled = default(string), string buttonSecondaryForegroundHover = default(string), string buttonSocialBackgroundDefault = default(string), string buttonSocialBackgroundDisabled = default(string), string buttonSocialBackgroundGenericProvider = default(string), string buttonSocialBackgroundHover = default(string), string buttonSocialBorderDefault = default(string), string buttonSocialBorderDisabled = default(string), string buttonSocialBorderGenericProvider = default(string), string buttonSocialBorderHover = default(string), string buttonSocialForegroundDefault = default(string), string buttonSocialForegroundDisabled = default(string), string buttonSocialForegroundGenericProvider = default(string), string buttonSocialForegroundHover = default(string), string checkboxBackgroundChecked = default(string), string checkboxBackgroundDefault = default(string), string checkboxBorderCheckboxBorderChecked = default(string), string checkboxBorderCheckboxBorderDefault = default(string), string checkboxForegroundChecked = default(string), string checkboxForegroundDefault = default(string), string formBackgroundDefault = default(string), string formBorderDefault = default(string), string inputBackgroundDefault = default(string), string inputBackgroundDisabled = default(string), string inputBackgroundHover = default(string), string inputBorderDefault = default(string), string inputBorderDisabled = default(string), string inputBorderFocus = default(string), string inputBorderHover = default(string), string inputForegroundDisabled = default(string), string inputForegroundPrimary = default(string), string inputForegroundSecondary = default(string), string inputForegroundTertiary = default(string), string interfaceBackgroundBrandPrimary = default(string), string interfaceBackgroundBrandPrimaryHover = default(string), string interfaceBackgroundBrandSecondary = default(string), string interfaceBackgroundBrandSecondaryHover = default(string), string interfaceBackgroundDefaultInverted = default(string), string interfaceBackgroundDefaultInvertedHover = default(string), string interfaceBackgroundDefaultNone = default(string), string interfaceBackgroundDefaultPrimary = default(string), string interfaceBackgroundDefaultPrimaryHover = default(string), string interfaceBackgroundDefaultSecondary = default(string), string interfaceBackgroundDefaultSecondaryHover = default(string), string interfaceBackgroundDefaultTertiary = default(string), string interfaceBackgroundDefaultTertiaryHover = default(string), string interfaceBackgroundDisabledDisabled = default(string), string interfaceBackgroundValidationDanger = default(string), string interfaceBackgroundValidationSuccess = default(string), string interfaceBackgroundValidationWarning = default(string), string interfaceBorderBrandBrand = default(string), string interfaceBorderDefaultInverted = default(string), string interfaceBorderDefaultNone = default(string), string interfaceBorderDefaultPrimary = default(string), string interfaceBorderDisabledDisabled = default(string), string interfaceBorderValidationDanger = default(string), string interfaceBorderValidationSuccess = default(string), string interfaceBorderValidationWarning = default(string), string interfaceForegroundBrandOnPrimary = default(string), string interfaceForegroundBrandOnSecondary = default(string), string interfaceForegroundBrandPrimary = default(string), string interfaceForegroundBrandSecondary = default(string), string interfaceForegroundDefaultInverted = default(string), string interfaceForegroundDefaultPrimary = default(string), string interfaceForegroundDefaultSecondary = default(string), string interfaceForegroundDefaultTertiary = default(string), string interfaceForegroundDisabledDisabled = default(string), string interfaceForegroundDisabledOnDisabled = default(string), string interfaceForegroundValidationDanger = default(string), string interfaceForegroundValidationSuccess = default(string), string interfaceForegroundValidationWarning = default(string), string oryBackgroundDefault = default(string), string oryBorderDefault = default(string), string oryForegroundDefault = default(string), string radioBackgroundChecked = default(string), string radioBackgroundDefault = default(string), string radioBorderChecked = default(string), string radioBorderDefault = default(string), string radioForegroundChecked = default(string), string radioForegroundDefault = default(string), string toggleBackgroundChecked = default(string), string toggleBackgroundDefault = default(string), string toggleBorderChecked = default(string), string toggleBorderDefault = default(string), string toggleForegroundChecked = default(string), string toggleForegroundDefault = default(string), string ui100 = default(string), string ui200 = default(string), string ui300 = default(string), string ui400 = default(string), string ui50 = default(string), string ui500 = default(string), string ui600 = default(string), string ui700 = default(string), string ui800 = default(string), string ui900 = default(string), string ui950 = default(string), string uiBlack = default(string), string uiDanger = default(string), string uiSuccess = default(string), string uiTransparent = default(string), string uiWarning = default(string), string uiWhite = default(string))
        {
            this.Brand100 = brand100;
            this.Brand200 = brand200;
            this.Brand300 = brand300;
            this.Brand400 = brand400;
            this.Brand50 = brand50;
            this.Brand500 = brand500;
            this.Brand600 = brand600;
            this.Brand700 = brand700;
            this.Brand800 = brand800;
            this.Brand900 = brand900;
            this.Brand950 = brand950;
            this.ButtonIdentifierBackgroundDefault = buttonIdentifierBackgroundDefault;
            this.ButtonIdentifierBackgroundHover = buttonIdentifierBackgroundHover;
            this.ButtonIdentifierBorderBorderDefault = buttonIdentifierBorderBorderDefault;
            this.ButtonIdentifierBorderBorderHover = buttonIdentifierBorderBorderHover;
            this.ButtonIdentifierForegroundDefault = buttonIdentifierForegroundDefault;
            this.ButtonIdentifierForegroundHover = buttonIdentifierForegroundHover;
            this.ButtonLinkBrandBrand = buttonLinkBrandBrand;
            this.ButtonLinkBrandBrandHover = buttonLinkBrandBrandHover;
            this.ButtonLinkDefaultPrimary = buttonLinkDefaultPrimary;
            this.ButtonLinkDefaultPrimaryHover = buttonLinkDefaultPrimaryHover;
            this.ButtonLinkDefaultSecondary = buttonLinkDefaultSecondary;
            this.ButtonLinkDefaultSecondaryHover = buttonLinkDefaultSecondaryHover;
            this.ButtonLinkDisabledDisabled = buttonLinkDisabledDisabled;
            this.ButtonPrimaryBackgroundDefault = buttonPrimaryBackgroundDefault;
            this.ButtonPrimaryBackgroundDisabled = buttonPrimaryBackgroundDisabled;
            this.ButtonPrimaryBackgroundHover = buttonPrimaryBackgroundHover;
            this.ButtonPrimaryBorderDefault = buttonPrimaryBorderDefault;
            this.ButtonPrimaryBorderDisabled = buttonPrimaryBorderDisabled;
            this.ButtonPrimaryBorderHover = buttonPrimaryBorderHover;
            this.ButtonPrimaryForegroundDefault = buttonPrimaryForegroundDefault;
            this.ButtonPrimaryForegroundDisabled = buttonPrimaryForegroundDisabled;
            this.ButtonPrimaryForegroundHover = buttonPrimaryForegroundHover;
            this.ButtonSecondaryBackgroundDefault = buttonSecondaryBackgroundDefault;
            this.ButtonSecondaryBackgroundDisabled = buttonSecondaryBackgroundDisabled;
            this.ButtonSecondaryBackgroundHover = buttonSecondaryBackgroundHover;
            this.ButtonSecondaryBorderDefault = buttonSecondaryBorderDefault;
            this.ButtonSecondaryBorderDisabled = buttonSecondaryBorderDisabled;
            this.ButtonSecondaryBorderHover = buttonSecondaryBorderHover;
            this.ButtonSecondaryForegroundDefault = buttonSecondaryForegroundDefault;
            this.ButtonSecondaryForegroundDisabled = buttonSecondaryForegroundDisabled;
            this.ButtonSecondaryForegroundHover = buttonSecondaryForegroundHover;
            this.ButtonSocialBackgroundDefault = buttonSocialBackgroundDefault;
            this.ButtonSocialBackgroundDisabled = buttonSocialBackgroundDisabled;
            this.ButtonSocialBackgroundGenericProvider = buttonSocialBackgroundGenericProvider;
            this.ButtonSocialBackgroundHover = buttonSocialBackgroundHover;
            this.ButtonSocialBorderDefault = buttonSocialBorderDefault;
            this.ButtonSocialBorderDisabled = buttonSocialBorderDisabled;
            this.ButtonSocialBorderGenericProvider = buttonSocialBorderGenericProvider;
            this.ButtonSocialBorderHover = buttonSocialBorderHover;
            this.ButtonSocialForegroundDefault = buttonSocialForegroundDefault;
            this.ButtonSocialForegroundDisabled = buttonSocialForegroundDisabled;
            this.ButtonSocialForegroundGenericProvider = buttonSocialForegroundGenericProvider;
            this.ButtonSocialForegroundHover = buttonSocialForegroundHover;
            this.CheckboxBackgroundChecked = checkboxBackgroundChecked;
            this.CheckboxBackgroundDefault = checkboxBackgroundDefault;
            this.CheckboxBorderCheckboxBorderChecked = checkboxBorderCheckboxBorderChecked;
            this.CheckboxBorderCheckboxBorderDefault = checkboxBorderCheckboxBorderDefault;
            this.CheckboxForegroundChecked = checkboxForegroundChecked;
            this.CheckboxForegroundDefault = checkboxForegroundDefault;
            this.FormBackgroundDefault = formBackgroundDefault;
            this.FormBorderDefault = formBorderDefault;
            this.InputBackgroundDefault = inputBackgroundDefault;
            this.InputBackgroundDisabled = inputBackgroundDisabled;
            this.InputBackgroundHover = inputBackgroundHover;
            this.InputBorderDefault = inputBorderDefault;
            this.InputBorderDisabled = inputBorderDisabled;
            this.InputBorderFocus = inputBorderFocus;
            this.InputBorderHover = inputBorderHover;
            this.InputForegroundDisabled = inputForegroundDisabled;
            this.InputForegroundPrimary = inputForegroundPrimary;
            this.InputForegroundSecondary = inputForegroundSecondary;
            this.InputForegroundTertiary = inputForegroundTertiary;
            this.InterfaceBackgroundBrandPrimary = interfaceBackgroundBrandPrimary;
            this.InterfaceBackgroundBrandPrimaryHover = interfaceBackgroundBrandPrimaryHover;
            this.InterfaceBackgroundBrandSecondary = interfaceBackgroundBrandSecondary;
            this.InterfaceBackgroundBrandSecondaryHover = interfaceBackgroundBrandSecondaryHover;
            this.InterfaceBackgroundDefaultInverted = interfaceBackgroundDefaultInverted;
            this.InterfaceBackgroundDefaultInvertedHover = interfaceBackgroundDefaultInvertedHover;
            this.InterfaceBackgroundDefaultNone = interfaceBackgroundDefaultNone;
            this.InterfaceBackgroundDefaultPrimary = interfaceBackgroundDefaultPrimary;
            this.InterfaceBackgroundDefaultPrimaryHover = interfaceBackgroundDefaultPrimaryHover;
            this.InterfaceBackgroundDefaultSecondary = interfaceBackgroundDefaultSecondary;
            this.InterfaceBackgroundDefaultSecondaryHover = interfaceBackgroundDefaultSecondaryHover;
            this.InterfaceBackgroundDefaultTertiary = interfaceBackgroundDefaultTertiary;
            this.InterfaceBackgroundDefaultTertiaryHover = interfaceBackgroundDefaultTertiaryHover;
            this.InterfaceBackgroundDisabledDisabled = interfaceBackgroundDisabledDisabled;
            this.InterfaceBackgroundValidationDanger = interfaceBackgroundValidationDanger;
            this.InterfaceBackgroundValidationSuccess = interfaceBackgroundValidationSuccess;
            this.InterfaceBackgroundValidationWarning = interfaceBackgroundValidationWarning;
            this.InterfaceBorderBrandBrand = interfaceBorderBrandBrand;
            this.InterfaceBorderDefaultInverted = interfaceBorderDefaultInverted;
            this.InterfaceBorderDefaultNone = interfaceBorderDefaultNone;
            this.InterfaceBorderDefaultPrimary = interfaceBorderDefaultPrimary;
            this.InterfaceBorderDisabledDisabled = interfaceBorderDisabledDisabled;
            this.InterfaceBorderValidationDanger = interfaceBorderValidationDanger;
            this.InterfaceBorderValidationSuccess = interfaceBorderValidationSuccess;
            this.InterfaceBorderValidationWarning = interfaceBorderValidationWarning;
            this.InterfaceForegroundBrandOnPrimary = interfaceForegroundBrandOnPrimary;
            this.InterfaceForegroundBrandOnSecondary = interfaceForegroundBrandOnSecondary;
            this.InterfaceForegroundBrandPrimary = interfaceForegroundBrandPrimary;
            this.InterfaceForegroundBrandSecondary = interfaceForegroundBrandSecondary;
            this.InterfaceForegroundDefaultInverted = interfaceForegroundDefaultInverted;
            this.InterfaceForegroundDefaultPrimary = interfaceForegroundDefaultPrimary;
            this.InterfaceForegroundDefaultSecondary = interfaceForegroundDefaultSecondary;
            this.InterfaceForegroundDefaultTertiary = interfaceForegroundDefaultTertiary;
            this.InterfaceForegroundDisabledDisabled = interfaceForegroundDisabledDisabled;
            this.InterfaceForegroundDisabledOnDisabled = interfaceForegroundDisabledOnDisabled;
            this.InterfaceForegroundValidationDanger = interfaceForegroundValidationDanger;
            this.InterfaceForegroundValidationSuccess = interfaceForegroundValidationSuccess;
            this.InterfaceForegroundValidationWarning = interfaceForegroundValidationWarning;
            this.OryBackgroundDefault = oryBackgroundDefault;
            this.OryBorderDefault = oryBorderDefault;
            this.OryForegroundDefault = oryForegroundDefault;
            this.RadioBackgroundChecked = radioBackgroundChecked;
            this.RadioBackgroundDefault = radioBackgroundDefault;
            this.RadioBorderChecked = radioBorderChecked;
            this.RadioBorderDefault = radioBorderDefault;
            this.RadioForegroundChecked = radioForegroundChecked;
            this.RadioForegroundDefault = radioForegroundDefault;
            this.ToggleBackgroundChecked = toggleBackgroundChecked;
            this.ToggleBackgroundDefault = toggleBackgroundDefault;
            this.ToggleBorderChecked = toggleBorderChecked;
            this.ToggleBorderDefault = toggleBorderDefault;
            this.ToggleForegroundChecked = toggleForegroundChecked;
            this.ToggleForegroundDefault = toggleForegroundDefault;
            this.Ui100 = ui100;
            this.Ui200 = ui200;
            this.Ui300 = ui300;
            this.Ui400 = ui400;
            this.Ui50 = ui50;
            this.Ui500 = ui500;
            this.Ui600 = ui600;
            this.Ui700 = ui700;
            this.Ui800 = ui800;
            this.Ui900 = ui900;
            this.Ui950 = ui950;
            this.UiBlack = uiBlack;
            this.UiDanger = uiDanger;
            this.UiSuccess = uiSuccess;
            this.UiTransparent = uiTransparent;
            this.UiWarning = uiWarning;
            this.UiWhite = uiWhite;
            this.AdditionalProperties = new Dictionary<string, object>();
        }

        /// <summary>
        /// Gets or Sets Brand100
        /// </summary>
        [DataMember(Name = "brand-100", EmitDefaultValue = false)]
        public string Brand100 { get; set; }

        /// <summary>
        /// Gets or Sets Brand200
        /// </summary>
        [DataMember(Name = "brand-200", EmitDefaultValue = false)]
        public string Brand200 { get; set; }

        /// <summary>
        /// Gets or Sets Brand300
        /// </summary>
        [DataMember(Name = "brand-300", EmitDefaultValue = false)]
        public string Brand300 { get; set; }

        /// <summary>
        /// Gets or Sets Brand400
        /// </summary>
        [DataMember(Name = "brand-400", EmitDefaultValue = false)]
        public string Brand400 { get; set; }

        /// <summary>
        /// Gets or Sets Brand50
        /// </summary>
        [DataMember(Name = "brand-50", EmitDefaultValue = false)]
        public string Brand50 { get; set; }

        /// <summary>
        /// Gets or Sets Brand500
        /// </summary>
        [DataMember(Name = "brand-500", EmitDefaultValue = false)]
        public string Brand500 { get; set; }

        /// <summary>
        /// Gets or Sets Brand600
        /// </summary>
        [DataMember(Name = "brand-600", EmitDefaultValue = false)]
        public string Brand600 { get; set; }

        /// <summary>
        /// Gets or Sets Brand700
        /// </summary>
        [DataMember(Name = "brand-700", EmitDefaultValue = false)]
        public string Brand700 { get; set; }

        /// <summary>
        /// Gets or Sets Brand800
        /// </summary>
        [DataMember(Name = "brand-800", EmitDefaultValue = false)]
        public string Brand800 { get; set; }

        /// <summary>
        /// Gets or Sets Brand900
        /// </summary>
        [DataMember(Name = "brand-900", EmitDefaultValue = false)]
        public string Brand900 { get; set; }

        /// <summary>
        /// Gets or Sets Brand950
        /// </summary>
        [DataMember(Name = "brand-950", EmitDefaultValue = false)]
        public string Brand950 { get; set; }

        /// <summary>
        /// Gets or Sets ButtonIdentifierBackgroundDefault
        /// </summary>
        [DataMember(Name = "button-identifier-background-default", EmitDefaultValue = false)]
        public string ButtonIdentifierBackgroundDefault { get; set; }

        /// <summary>
        /// Gets or Sets ButtonIdentifierBackgroundHover
        /// </summary>
        [DataMember(Name = "button-identifier-background-hover", EmitDefaultValue = false)]
        public string ButtonIdentifierBackgroundHover { get; set; }

        /// <summary>
        /// Gets or Sets ButtonIdentifierBorderBorderDefault
        /// </summary>
        [DataMember(Name = "button-identifier-border-border-default", EmitDefaultValue = false)]
        public string ButtonIdentifierBorderBorderDefault { get; set; }

        /// <summary>
        /// Gets or Sets ButtonIdentifierBorderBorderHover
        /// </summary>
        [DataMember(Name = "button-identifier-border-border-hover", EmitDefaultValue = false)]
        public string ButtonIdentifierBorderBorderHover { get; set; }

        /// <summary>
        /// Gets or Sets ButtonIdentifierForegroundDefault
        /// </summary>
        [DataMember(Name = "button-identifier-foreground-default", EmitDefaultValue = false)]
        public string ButtonIdentifierForegroundDefault { get; set; }

        /// <summary>
        /// Gets or Sets ButtonIdentifierForegroundHover
        /// </summary>
        [DataMember(Name = "button-identifier-foreground-hover", EmitDefaultValue = false)]
        public string ButtonIdentifierForegroundHover { get; set; }

        /// <summary>
        /// Gets or Sets ButtonLinkBrandBrand
        /// </summary>
        [DataMember(Name = "button-link-brand-brand", EmitDefaultValue = false)]
        public string ButtonLinkBrandBrand { get; set; }

        /// <summary>
        /// Gets or Sets ButtonLinkBrandBrandHover
        /// </summary>
        [DataMember(Name = "button-link-brand-brand-hover", EmitDefaultValue = false)]
        public string ButtonLinkBrandBrandHover { get; set; }

        /// <summary>
        /// Gets or Sets ButtonLinkDefaultPrimary
        /// </summary>
        [DataMember(Name = "button-link-default-primary", EmitDefaultValue = false)]
        public string ButtonLinkDefaultPrimary { get; set; }

        /// <summary>
        /// Gets or Sets ButtonLinkDefaultPrimaryHover
        /// </summary>
        [DataMember(Name = "button-link-default-primary-hover", EmitDefaultValue = false)]
        public string ButtonLinkDefaultPrimaryHover { get; set; }

        /// <summary>
        /// Gets or Sets ButtonLinkDefaultSecondary
        /// </summary>
        [DataMember(Name = "button-link-default-secondary", EmitDefaultValue = false)]
        public string ButtonLinkDefaultSecondary { get; set; }

        /// <summary>
        /// Gets or Sets ButtonLinkDefaultSecondaryHover
        /// </summary>
        [DataMember(Name = "button-link-default-secondary-hover", EmitDefaultValue = false)]
        public string ButtonLinkDefaultSecondaryHover { get; set; }

        /// <summary>
        /// Gets or Sets ButtonLinkDisabledDisabled
        /// </summary>
        [DataMember(Name = "button-link-disabled-disabled", EmitDefaultValue = false)]
        public string ButtonLinkDisabledDisabled { get; set; }

        /// <summary>
        /// Gets or Sets ButtonPrimaryBackgroundDefault
        /// </summary>
        [DataMember(Name = "button-primary-background-default", EmitDefaultValue = false)]
        public string ButtonPrimaryBackgroundDefault { get; set; }

        /// <summary>
        /// Gets or Sets ButtonPrimaryBackgroundDisabled
        /// </summary>
        [DataMember(Name = "button-primary-background-disabled", EmitDefaultValue = false)]
        public string ButtonPrimaryBackgroundDisabled { get; set; }

        /// <summary>
        /// Gets or Sets ButtonPrimaryBackgroundHover
        /// </summary>
        [DataMember(Name = "button-primary-background-hover", EmitDefaultValue = false)]
        public string ButtonPrimaryBackgroundHover { get; set; }

        /// <summary>
        /// Gets or Sets ButtonPrimaryBorderDefault
        /// </summary>
        [DataMember(Name = "button-primary-border-default", EmitDefaultValue = false)]
        public string ButtonPrimaryBorderDefault { get; set; }

        /// <summary>
        /// Gets or Sets ButtonPrimaryBorderDisabled
        /// </summary>
        [DataMember(Name = "button-primary-border-disabled", EmitDefaultValue = false)]
        public string ButtonPrimaryBorderDisabled { get; set; }

        /// <summary>
        /// Gets or Sets ButtonPrimaryBorderHover
        /// </summary>
        [DataMember(Name = "button-primary-border-hover", EmitDefaultValue = false)]
        public string ButtonPrimaryBorderHover { get; set; }

        /// <summary>
        /// Gets or Sets ButtonPrimaryForegroundDefault
        /// </summary>
        [DataMember(Name = "button-primary-foreground-default", EmitDefaultValue = false)]
        public string ButtonPrimaryForegroundDefault { get; set; }

        /// <summary>
        /// Gets or Sets ButtonPrimaryForegroundDisabled
        /// </summary>
        [DataMember(Name = "button-primary-foreground-disabled", EmitDefaultValue = false)]
        public string ButtonPrimaryForegroundDisabled { get; set; }

        /// <summary>
        /// Gets or Sets ButtonPrimaryForegroundHover
        /// </summary>
        [DataMember(Name = "button-primary-foreground-hover", EmitDefaultValue = false)]
        public string ButtonPrimaryForegroundHover { get; set; }

        /// <summary>
        /// Gets or Sets ButtonSecondaryBackgroundDefault
        /// </summary>
        [DataMember(Name = "button-secondary-background-default", EmitDefaultValue = false)]
        public string ButtonSecondaryBackgroundDefault { get; set; }

        /// <summary>
        /// Gets or Sets ButtonSecondaryBackgroundDisabled
        /// </summary>
        [DataMember(Name = "button-secondary-background-disabled", EmitDefaultValue = false)]
        public string ButtonSecondaryBackgroundDisabled { get; set; }

        /// <summary>
        /// Gets or Sets ButtonSecondaryBackgroundHover
        /// </summary>
        [DataMember(Name = "button-secondary-background-hover", EmitDefaultValue = false)]
        public string ButtonSecondaryBackgroundHover { get; set; }

        /// <summary>
        /// Gets or Sets ButtonSecondaryBorderDefault
        /// </summary>
        [DataMember(Name = "button-secondary-border-default", EmitDefaultValue = false)]
        public string ButtonSecondaryBorderDefault { get; set; }

        /// <summary>
        /// Gets or Sets ButtonSecondaryBorderDisabled
        /// </summary>
        [DataMember(Name = "button-secondary-border-disabled", EmitDefaultValue = false)]
        public string ButtonSecondaryBorderDisabled { get; set; }

        /// <summary>
        /// Gets or Sets ButtonSecondaryBorderHover
        /// </summary>
        [DataMember(Name = "button-secondary-border-hover", EmitDefaultValue = false)]
        public string ButtonSecondaryBorderHover { get; set; }

        /// <summary>
        /// Gets or Sets ButtonSecondaryForegroundDefault
        /// </summary>
        [DataMember(Name = "button-secondary-foreground-default", EmitDefaultValue = false)]
        public string ButtonSecondaryForegroundDefault { get; set; }

        /// <summary>
        /// Gets or Sets ButtonSecondaryForegroundDisabled
        /// </summary>
        [DataMember(Name = "button-secondary-foreground-disabled", EmitDefaultValue = false)]
        public string ButtonSecondaryForegroundDisabled { get; set; }

        /// <summary>
        /// Gets or Sets ButtonSecondaryForegroundHover
        /// </summary>
        [DataMember(Name = "button-secondary-foreground-hover", EmitDefaultValue = false)]
        public string ButtonSecondaryForegroundHover { get; set; }

        /// <summary>
        /// Gets or Sets ButtonSocialBackgroundDefault
        /// </summary>
        [DataMember(Name = "button-social-background-default", EmitDefaultValue = false)]
        public string ButtonSocialBackgroundDefault { get; set; }

        /// <summary>
        /// Gets or Sets ButtonSocialBackgroundDisabled
        /// </summary>
        [DataMember(Name = "button-social-background-disabled", EmitDefaultValue = false)]
        public string ButtonSocialBackgroundDisabled { get; set; }

        /// <summary>
        /// Gets or Sets ButtonSocialBackgroundGenericProvider
        /// </summary>
        [DataMember(Name = "button-social-background-generic-provider", EmitDefaultValue = false)]
        public string ButtonSocialBackgroundGenericProvider { get; set; }

        /// <summary>
        /// Gets or Sets ButtonSocialBackgroundHover
        /// </summary>
        [DataMember(Name = "button-social-background-hover", EmitDefaultValue = false)]
        public string ButtonSocialBackgroundHover { get; set; }

        /// <summary>
        /// Gets or Sets ButtonSocialBorderDefault
        /// </summary>
        [DataMember(Name = "button-social-border-default", EmitDefaultValue = false)]
        public string ButtonSocialBorderDefault { get; set; }

        /// <summary>
        /// Gets or Sets ButtonSocialBorderDisabled
        /// </summary>
        [DataMember(Name = "button-social-border-disabled", EmitDefaultValue = false)]
        public string ButtonSocialBorderDisabled { get; set; }

        /// <summary>
        /// Gets or Sets ButtonSocialBorderGenericProvider
        /// </summary>
        [DataMember(Name = "button-social-border-generic-provider", EmitDefaultValue = false)]
        public string ButtonSocialBorderGenericProvider { get; set; }

        /// <summary>
        /// Gets or Sets ButtonSocialBorderHover
        /// </summary>
        [DataMember(Name = "button-social-border-hover", EmitDefaultValue = false)]
        public string ButtonSocialBorderHover { get; set; }

        /// <summary>
        /// Gets or Sets ButtonSocialForegroundDefault
        /// </summary>
        [DataMember(Name = "button-social-foreground-default", EmitDefaultValue = false)]
        public string ButtonSocialForegroundDefault { get; set; }

        /// <summary>
        /// Gets or Sets ButtonSocialForegroundDisabled
        /// </summary>
        [DataMember(Name = "button-social-foreground-disabled", EmitDefaultValue = false)]
        public string ButtonSocialForegroundDisabled { get; set; }

        /// <summary>
        /// Gets or Sets ButtonSocialForegroundGenericProvider
        /// </summary>
        [DataMember(Name = "button-social-foreground-generic-provider", EmitDefaultValue = false)]
        public string ButtonSocialForegroundGenericProvider { get; set; }

        /// <summary>
        /// Gets or Sets ButtonSocialForegroundHover
        /// </summary>
        [DataMember(Name = "button-social-foreground-hover", EmitDefaultValue = false)]
        public string ButtonSocialForegroundHover { get; set; }

        /// <summary>
        /// Gets or Sets CheckboxBackgroundChecked
        /// </summary>
        [DataMember(Name = "checkbox-background-checked", EmitDefaultValue = false)]
        public string CheckboxBackgroundChecked { get; set; }

        /// <summary>
        /// Gets or Sets CheckboxBackgroundDefault
        /// </summary>
        [DataMember(Name = "checkbox-background-default", EmitDefaultValue = false)]
        public string CheckboxBackgroundDefault { get; set; }

        /// <summary>
        /// Gets or Sets CheckboxBorderCheckboxBorderChecked
        /// </summary>
        [DataMember(Name = "checkbox-border-checkbox-border-checked", EmitDefaultValue = false)]
        public string CheckboxBorderCheckboxBorderChecked { get; set; }

        /// <summary>
        /// Gets or Sets CheckboxBorderCheckboxBorderDefault
        /// </summary>
        [DataMember(Name = "checkbox-border-checkbox-border-default", EmitDefaultValue = false)]
        public string CheckboxBorderCheckboxBorderDefault { get; set; }

        /// <summary>
        /// Gets or Sets CheckboxForegroundChecked
        /// </summary>
        [DataMember(Name = "checkbox-foreground-checked", EmitDefaultValue = false)]
        public string CheckboxForegroundChecked { get; set; }

        /// <summary>
        /// Gets or Sets CheckboxForegroundDefault
        /// </summary>
        [DataMember(Name = "checkbox-foreground-default", EmitDefaultValue = false)]
        public string CheckboxForegroundDefault { get; set; }

        /// <summary>
        /// Gets or Sets FormBackgroundDefault
        /// </summary>
        [DataMember(Name = "form-background-default", EmitDefaultValue = false)]
        public string FormBackgroundDefault { get; set; }

        /// <summary>
        /// Gets or Sets FormBorderDefault
        /// </summary>
        [DataMember(Name = "form-border-default", EmitDefaultValue = false)]
        public string FormBorderDefault { get; set; }

        /// <summary>
        /// Gets or Sets InputBackgroundDefault
        /// </summary>
        [DataMember(Name = "input-background-default", EmitDefaultValue = false)]
        public string InputBackgroundDefault { get; set; }

        /// <summary>
        /// Gets or Sets InputBackgroundDisabled
        /// </summary>
        [DataMember(Name = "input-background-disabled", EmitDefaultValue = false)]
        public string InputBackgroundDisabled { get; set; }

        /// <summary>
        /// Gets or Sets InputBackgroundHover
        /// </summary>
        [DataMember(Name = "input-background-hover", EmitDefaultValue = false)]
        public string InputBackgroundHover { get; set; }

        /// <summary>
        /// Gets or Sets InputBorderDefault
        /// </summary>
        [DataMember(Name = "input-border-default", EmitDefaultValue = false)]
        public string InputBorderDefault { get; set; }

        /// <summary>
        /// Gets or Sets InputBorderDisabled
        /// </summary>
        [DataMember(Name = "input-border-disabled", EmitDefaultValue = false)]
        public string InputBorderDisabled { get; set; }

        /// <summary>
        /// Gets or Sets InputBorderFocus
        /// </summary>
        [DataMember(Name = "input-border-focus", EmitDefaultValue = false)]
        public string InputBorderFocus { get; set; }

        /// <summary>
        /// Gets or Sets InputBorderHover
        /// </summary>
        [DataMember(Name = "input-border-hover", EmitDefaultValue = false)]
        public string InputBorderHover { get; set; }

        /// <summary>
        /// Gets or Sets InputForegroundDisabled
        /// </summary>
        [DataMember(Name = "input-foreground-disabled", EmitDefaultValue = false)]
        public string InputForegroundDisabled { get; set; }

        /// <summary>
        /// Gets or Sets InputForegroundPrimary
        /// </summary>
        [DataMember(Name = "input-foreground-primary", EmitDefaultValue = false)]
        public string InputForegroundPrimary { get; set; }

        /// <summary>
        /// Gets or Sets InputForegroundSecondary
        /// </summary>
        [DataMember(Name = "input-foreground-secondary", EmitDefaultValue = false)]
        public string InputForegroundSecondary { get; set; }

        /// <summary>
        /// Gets or Sets InputForegroundTertiary
        /// </summary>
        [DataMember(Name = "input-foreground-tertiary", EmitDefaultValue = false)]
        public string InputForegroundTertiary { get; set; }

        /// <summary>
        /// Gets or Sets InterfaceBackgroundBrandPrimary
        /// </summary>
        [DataMember(Name = "interface-background-brand-primary", EmitDefaultValue = false)]
        public string InterfaceBackgroundBrandPrimary { get; set; }

        /// <summary>
        /// Gets or Sets InterfaceBackgroundBrandPrimaryHover
        /// </summary>
        [DataMember(Name = "interface-background-brand-primary-hover", EmitDefaultValue = false)]
        public string InterfaceBackgroundBrandPrimaryHover { get; set; }

        /// <summary>
        /// Gets or Sets InterfaceBackgroundBrandSecondary
        /// </summary>
        [DataMember(Name = "interface-background-brand-secondary", EmitDefaultValue = false)]
        public string InterfaceBackgroundBrandSecondary { get; set; }

        /// <summary>
        /// Gets or Sets InterfaceBackgroundBrandSecondaryHover
        /// </summary>
        [DataMember(Name = "interface-background-brand-secondary-hover", EmitDefaultValue = false)]
        public string InterfaceBackgroundBrandSecondaryHover { get; set; }

        /// <summary>
        /// Gets or Sets InterfaceBackgroundDefaultInverted
        /// </summary>
        [DataMember(Name = "interface-background-default-inverted", EmitDefaultValue = false)]
        public string InterfaceBackgroundDefaultInverted { get; set; }

        /// <summary>
        /// Gets or Sets InterfaceBackgroundDefaultInvertedHover
        /// </summary>
        [DataMember(Name = "interface-background-default-inverted-hover", EmitDefaultValue = false)]
        public string InterfaceBackgroundDefaultInvertedHover { get; set; }

        /// <summary>
        /// Gets or Sets InterfaceBackgroundDefaultNone
        /// </summary>
        [DataMember(Name = "interface-background-default-none", EmitDefaultValue = false)]
        public string InterfaceBackgroundDefaultNone { get; set; }

        /// <summary>
        /// Gets or Sets InterfaceBackgroundDefaultPrimary
        /// </summary>
        [DataMember(Name = "interface-background-default-primary", EmitDefaultValue = false)]
        public string InterfaceBackgroundDefaultPrimary { get; set; }

        /// <summary>
        /// Gets or Sets InterfaceBackgroundDefaultPrimaryHover
        /// </summary>
        [DataMember(Name = "interface-background-default-primary-hover", EmitDefaultValue = false)]
        public string InterfaceBackgroundDefaultPrimaryHover { get; set; }

        /// <summary>
        /// Gets or Sets InterfaceBackgroundDefaultSecondary
        /// </summary>
        [DataMember(Name = "interface-background-default-secondary", EmitDefaultValue = false)]
        public string InterfaceBackgroundDefaultSecondary { get; set; }

        /// <summary>
        /// Gets or Sets InterfaceBackgroundDefaultSecondaryHover
        /// </summary>
        [DataMember(Name = "interface-background-default-secondary-hover", EmitDefaultValue = false)]
        public string InterfaceBackgroundDefaultSecondaryHover { get; set; }

        /// <summary>
        /// Gets or Sets InterfaceBackgroundDefaultTertiary
        /// </summary>
        [DataMember(Name = "interface-background-default-tertiary", EmitDefaultValue = false)]
        public string InterfaceBackgroundDefaultTertiary { get; set; }

        /// <summary>
        /// Gets or Sets InterfaceBackgroundDefaultTertiaryHover
        /// </summary>
        [DataMember(Name = "interface-background-default-tertiary-hover", EmitDefaultValue = false)]
        public string InterfaceBackgroundDefaultTertiaryHover { get; set; }

        /// <summary>
        /// Gets or Sets InterfaceBackgroundDisabledDisabled
        /// </summary>
        [DataMember(Name = "interface-background-disabled-disabled", EmitDefaultValue = false)]
        public string InterfaceBackgroundDisabledDisabled { get; set; }

        /// <summary>
        /// Gets or Sets InterfaceBackgroundValidationDanger
        /// </summary>
        [DataMember(Name = "interface-background-validation-danger", EmitDefaultValue = false)]
        public string InterfaceBackgroundValidationDanger { get; set; }

        /// <summary>
        /// Gets or Sets InterfaceBackgroundValidationSuccess
        /// </summary>
        [DataMember(Name = "interface-background-validation-success", EmitDefaultValue = false)]
        public string InterfaceBackgroundValidationSuccess { get; set; }

        /// <summary>
        /// Gets or Sets InterfaceBackgroundValidationWarning
        /// </summary>
        [DataMember(Name = "interface-background-validation-warning", EmitDefaultValue = false)]
        public string InterfaceBackgroundValidationWarning { get; set; }

        /// <summary>
        /// Gets or Sets InterfaceBorderBrandBrand
        /// </summary>
        [DataMember(Name = "interface-border-brand-brand", EmitDefaultValue = false)]
        public string InterfaceBorderBrandBrand { get; set; }

        /// <summary>
        /// Gets or Sets InterfaceBorderDefaultInverted
        /// </summary>
        [DataMember(Name = "interface-border-default-inverted", EmitDefaultValue = false)]
        public string InterfaceBorderDefaultInverted { get; set; }

        /// <summary>
        /// Gets or Sets InterfaceBorderDefaultNone
        /// </summary>
        [DataMember(Name = "interface-border-default-none", EmitDefaultValue = false)]
        public string InterfaceBorderDefaultNone { get; set; }

        /// <summary>
        /// Gets or Sets InterfaceBorderDefaultPrimary
        /// </summary>
        [DataMember(Name = "interface-border-default-primary", EmitDefaultValue = false)]
        public string InterfaceBorderDefaultPrimary { get; set; }

        /// <summary>
        /// Gets or Sets InterfaceBorderDisabledDisabled
        /// </summary>
        [DataMember(Name = "interface-border-disabled-disabled", EmitDefaultValue = false)]
        public string InterfaceBorderDisabledDisabled { get; set; }

        /// <summary>
        /// Gets or Sets InterfaceBorderValidationDanger
        /// </summary>
        [DataMember(Name = "interface-border-validation-danger", EmitDefaultValue = false)]
        public string InterfaceBorderValidationDanger { get; set; }

        /// <summary>
        /// Gets or Sets InterfaceBorderValidationSuccess
        /// </summary>
        [DataMember(Name = "interface-border-validation-success", EmitDefaultValue = false)]
        public string InterfaceBorderValidationSuccess { get; set; }

        /// <summary>
        /// Gets or Sets InterfaceBorderValidationWarning
        /// </summary>
        [DataMember(Name = "interface-border-validation-warning", EmitDefaultValue = false)]
        public string InterfaceBorderValidationWarning { get; set; }

        /// <summary>
        /// Gets or Sets InterfaceForegroundBrandOnPrimary
        /// </summary>
        [DataMember(Name = "interface-foreground-brand-on-primary", EmitDefaultValue = false)]
        public string InterfaceForegroundBrandOnPrimary { get; set; }

        /// <summary>
        /// Gets or Sets InterfaceForegroundBrandOnSecondary
        /// </summary>
        [DataMember(Name = "interface-foreground-brand-on-secondary", EmitDefaultValue = false)]
        public string InterfaceForegroundBrandOnSecondary { get; set; }

        /// <summary>
        /// Gets or Sets InterfaceForegroundBrandPrimary
        /// </summary>
        [DataMember(Name = "interface-foreground-brand-primary", EmitDefaultValue = false)]
        public string InterfaceForegroundBrandPrimary { get; set; }

        /// <summary>
        /// Gets or Sets InterfaceForegroundBrandSecondary
        /// </summary>
        [DataMember(Name = "interface-foreground-brand-secondary", EmitDefaultValue = false)]
        public string InterfaceForegroundBrandSecondary { get; set; }

        /// <summary>
        /// Gets or Sets InterfaceForegroundDefaultInverted
        /// </summary>
        [DataMember(Name = "interface-foreground-default-inverted", EmitDefaultValue = false)]
        public string InterfaceForegroundDefaultInverted { get; set; }

        /// <summary>
        /// Gets or Sets InterfaceForegroundDefaultPrimary
        /// </summary>
        [DataMember(Name = "interface-foreground-default-primary", EmitDefaultValue = false)]
        public string InterfaceForegroundDefaultPrimary { get; set; }

        /// <summary>
        /// Gets or Sets InterfaceForegroundDefaultSecondary
        /// </summary>
        [DataMember(Name = "interface-foreground-default-secondary", EmitDefaultValue = false)]
        public string InterfaceForegroundDefaultSecondary { get; set; }

        /// <summary>
        /// Gets or Sets InterfaceForegroundDefaultTertiary
        /// </summary>
        [DataMember(Name = "interface-foreground-default-tertiary", EmitDefaultValue = false)]
        public string InterfaceForegroundDefaultTertiary { get; set; }

        /// <summary>
        /// Gets or Sets InterfaceForegroundDisabledDisabled
        /// </summary>
        [DataMember(Name = "interface-foreground-disabled-disabled", EmitDefaultValue = false)]
        public string InterfaceForegroundDisabledDisabled { get; set; }

        /// <summary>
        /// Gets or Sets InterfaceForegroundDisabledOnDisabled
        /// </summary>
        [DataMember(Name = "interface-foreground-disabled-on-disabled", EmitDefaultValue = false)]
        public string InterfaceForegroundDisabledOnDisabled { get; set; }

        /// <summary>
        /// Gets or Sets InterfaceForegroundValidationDanger
        /// </summary>
        [DataMember(Name = "interface-foreground-validation-danger", EmitDefaultValue = false)]
        public string InterfaceForegroundValidationDanger { get; set; }

        /// <summary>
        /// Gets or Sets InterfaceForegroundValidationSuccess
        /// </summary>
        [DataMember(Name = "interface-foreground-validation-success", EmitDefaultValue = false)]
        public string InterfaceForegroundValidationSuccess { get; set; }

        /// <summary>
        /// Gets or Sets InterfaceForegroundValidationWarning
        /// </summary>
        [DataMember(Name = "interface-foreground-validation-warning", EmitDefaultValue = false)]
        public string InterfaceForegroundValidationWarning { get; set; }

        /// <summary>
        /// Gets or Sets OryBackgroundDefault
        /// </summary>
        [DataMember(Name = "ory-background-default", EmitDefaultValue = false)]
        public string OryBackgroundDefault { get; set; }

        /// <summary>
        /// Gets or Sets OryBorderDefault
        /// </summary>
        [DataMember(Name = "ory-border-default", EmitDefaultValue = false)]
        public string OryBorderDefault { get; set; }

        /// <summary>
        /// Gets or Sets OryForegroundDefault
        /// </summary>
        [DataMember(Name = "ory-foreground-default", EmitDefaultValue = false)]
        public string OryForegroundDefault { get; set; }

        /// <summary>
        /// Gets or Sets RadioBackgroundChecked
        /// </summary>
        [DataMember(Name = "radio-background-checked", EmitDefaultValue = false)]
        public string RadioBackgroundChecked { get; set; }

        /// <summary>
        /// Gets or Sets RadioBackgroundDefault
        /// </summary>
        [DataMember(Name = "radio-background-default", EmitDefaultValue = false)]
        public string RadioBackgroundDefault { get; set; }

        /// <summary>
        /// Gets or Sets RadioBorderChecked
        /// </summary>
        [DataMember(Name = "radio-border-checked", EmitDefaultValue = false)]
        public string RadioBorderChecked { get; set; }

        /// <summary>
        /// Gets or Sets RadioBorderDefault
        /// </summary>
        [DataMember(Name = "radio-border-default", EmitDefaultValue = false)]
        public string RadioBorderDefault { get; set; }

        /// <summary>
        /// Gets or Sets RadioForegroundChecked
        /// </summary>
        [DataMember(Name = "radio-foreground-checked", EmitDefaultValue = false)]
        public string RadioForegroundChecked { get; set; }

        /// <summary>
        /// Gets or Sets RadioForegroundDefault
        /// </summary>
        [DataMember(Name = "radio-foreground-default", EmitDefaultValue = false)]
        public string RadioForegroundDefault { get; set; }

        /// <summary>
        /// Gets or Sets ToggleBackgroundChecked
        /// </summary>
        [DataMember(Name = "toggle-background-checked", EmitDefaultValue = false)]
        public string ToggleBackgroundChecked { get; set; }

        /// <summary>
        /// Gets or Sets ToggleBackgroundDefault
        /// </summary>
        [DataMember(Name = "toggle-background-default", EmitDefaultValue = false)]
        public string ToggleBackgroundDefault { get; set; }

        /// <summary>
        /// Gets or Sets ToggleBorderChecked
        /// </summary>
        [DataMember(Name = "toggle-border-checked", EmitDefaultValue = false)]
        public string ToggleBorderChecked { get; set; }

        /// <summary>
        /// Gets or Sets ToggleBorderDefault
        /// </summary>
        [DataMember(Name = "toggle-border-default", EmitDefaultValue = false)]
        public string ToggleBorderDefault { get; set; }

        /// <summary>
        /// Gets or Sets ToggleForegroundChecked
        /// </summary>
        [DataMember(Name = "toggle-foreground-checked", EmitDefaultValue = false)]
        public string ToggleForegroundChecked { get; set; }

        /// <summary>
        /// Gets or Sets ToggleForegroundDefault
        /// </summary>
        [DataMember(Name = "toggle-foreground-default", EmitDefaultValue = false)]
        public string ToggleForegroundDefault { get; set; }

        /// <summary>
        /// Gets or Sets Ui100
        /// </summary>
        [DataMember(Name = "ui-100", EmitDefaultValue = false)]
        public string Ui100 { get; set; }

        /// <summary>
        /// Gets or Sets Ui200
        /// </summary>
        [DataMember(Name = "ui-200", EmitDefaultValue = false)]
        public string Ui200 { get; set; }

        /// <summary>
        /// Gets or Sets Ui300
        /// </summary>
        [DataMember(Name = "ui-300", EmitDefaultValue = false)]
        public string Ui300 { get; set; }

        /// <summary>
        /// Gets or Sets Ui400
        /// </summary>
        [DataMember(Name = "ui-400", EmitDefaultValue = false)]
        public string Ui400 { get; set; }

        /// <summary>
        /// Gets or Sets Ui50
        /// </summary>
        [DataMember(Name = "ui-50", EmitDefaultValue = false)]
        public string Ui50 { get; set; }

        /// <summary>
        /// Gets or Sets Ui500
        /// </summary>
        [DataMember(Name = "ui-500", EmitDefaultValue = false)]
        public string Ui500 { get; set; }

        /// <summary>
        /// Gets or Sets Ui600
        /// </summary>
        [DataMember(Name = "ui-600", EmitDefaultValue = false)]
        public string Ui600 { get; set; }

        /// <summary>
        /// Gets or Sets Ui700
        /// </summary>
        [DataMember(Name = "ui-700", EmitDefaultValue = false)]
        public string Ui700 { get; set; }

        /// <summary>
        /// Gets or Sets Ui800
        /// </summary>
        [DataMember(Name = "ui-800", EmitDefaultValue = false)]
        public string Ui800 { get; set; }

        /// <summary>
        /// Gets or Sets Ui900
        /// </summary>
        [DataMember(Name = "ui-900", EmitDefaultValue = false)]
        public string Ui900 { get; set; }

        /// <summary>
        /// Gets or Sets Ui950
        /// </summary>
        [DataMember(Name = "ui-950", EmitDefaultValue = false)]
        public string Ui950 { get; set; }

        /// <summary>
        /// Gets or Sets UiBlack
        /// </summary>
        [DataMember(Name = "ui-black", EmitDefaultValue = false)]
        public string UiBlack { get; set; }

        /// <summary>
        /// Gets or Sets UiDanger
        /// </summary>
        [DataMember(Name = "ui-danger", EmitDefaultValue = false)]
        public string UiDanger { get; set; }

        /// <summary>
        /// Gets or Sets UiSuccess
        /// </summary>
        [DataMember(Name = "ui-success", EmitDefaultValue = false)]
        public string UiSuccess { get; set; }

        /// <summary>
        /// Gets or Sets UiTransparent
        /// </summary>
        [DataMember(Name = "ui-transparent", EmitDefaultValue = false)]
        public string UiTransparent { get; set; }

        /// <summary>
        /// Gets or Sets UiWarning
        /// </summary>
        [DataMember(Name = "ui-warning", EmitDefaultValue = false)]
        public string UiWarning { get; set; }

        /// <summary>
        /// Gets or Sets UiWhite
        /// </summary>
        [DataMember(Name = "ui-white", EmitDefaultValue = false)]
        public string UiWhite { get; set; }

        /// <summary>
        /// Gets or Sets additional properties
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ClientAccountExperienceColors {\n");
            sb.Append("  Brand100: ").Append(Brand100).Append("\n");
            sb.Append("  Brand200: ").Append(Brand200).Append("\n");
            sb.Append("  Brand300: ").Append(Brand300).Append("\n");
            sb.Append("  Brand400: ").Append(Brand400).Append("\n");
            sb.Append("  Brand50: ").Append(Brand50).Append("\n");
            sb.Append("  Brand500: ").Append(Brand500).Append("\n");
            sb.Append("  Brand600: ").Append(Brand600).Append("\n");
            sb.Append("  Brand700: ").Append(Brand700).Append("\n");
            sb.Append("  Brand800: ").Append(Brand800).Append("\n");
            sb.Append("  Brand900: ").Append(Brand900).Append("\n");
            sb.Append("  Brand950: ").Append(Brand950).Append("\n");
            sb.Append("  ButtonIdentifierBackgroundDefault: ").Append(ButtonIdentifierBackgroundDefault).Append("\n");
            sb.Append("  ButtonIdentifierBackgroundHover: ").Append(ButtonIdentifierBackgroundHover).Append("\n");
            sb.Append("  ButtonIdentifierBorderBorderDefault: ").Append(ButtonIdentifierBorderBorderDefault).Append("\n");
            sb.Append("  ButtonIdentifierBorderBorderHover: ").Append(ButtonIdentifierBorderBorderHover).Append("\n");
            sb.Append("  ButtonIdentifierForegroundDefault: ").Append(ButtonIdentifierForegroundDefault).Append("\n");
            sb.Append("  ButtonIdentifierForegroundHover: ").Append(ButtonIdentifierForegroundHover).Append("\n");
            sb.Append("  ButtonLinkBrandBrand: ").Append(ButtonLinkBrandBrand).Append("\n");
            sb.Append("  ButtonLinkBrandBrandHover: ").Append(ButtonLinkBrandBrandHover).Append("\n");
            sb.Append("  ButtonLinkDefaultPrimary: ").Append(ButtonLinkDefaultPrimary).Append("\n");
            sb.Append("  ButtonLinkDefaultPrimaryHover: ").Append(ButtonLinkDefaultPrimaryHover).Append("\n");
            sb.Append("  ButtonLinkDefaultSecondary: ").Append(ButtonLinkDefaultSecondary).Append("\n");
            sb.Append("  ButtonLinkDefaultSecondaryHover: ").Append(ButtonLinkDefaultSecondaryHover).Append("\n");
            sb.Append("  ButtonLinkDisabledDisabled: ").Append(ButtonLinkDisabledDisabled).Append("\n");
            sb.Append("  ButtonPrimaryBackgroundDefault: ").Append(ButtonPrimaryBackgroundDefault).Append("\n");
            sb.Append("  ButtonPrimaryBackgroundDisabled: ").Append(ButtonPrimaryBackgroundDisabled).Append("\n");
            sb.Append("  ButtonPrimaryBackgroundHover: ").Append(ButtonPrimaryBackgroundHover).Append("\n");
            sb.Append("  ButtonPrimaryBorderDefault: ").Append(ButtonPrimaryBorderDefault).Append("\n");
            sb.Append("  ButtonPrimaryBorderDisabled: ").Append(ButtonPrimaryBorderDisabled).Append("\n");
            sb.Append("  ButtonPrimaryBorderHover: ").Append(ButtonPrimaryBorderHover).Append("\n");
            sb.Append("  ButtonPrimaryForegroundDefault: ").Append(ButtonPrimaryForegroundDefault).Append("\n");
            sb.Append("  ButtonPrimaryForegroundDisabled: ").Append(ButtonPrimaryForegroundDisabled).Append("\n");
            sb.Append("  ButtonPrimaryForegroundHover: ").Append(ButtonPrimaryForegroundHover).Append("\n");
            sb.Append("  ButtonSecondaryBackgroundDefault: ").Append(ButtonSecondaryBackgroundDefault).Append("\n");
            sb.Append("  ButtonSecondaryBackgroundDisabled: ").Append(ButtonSecondaryBackgroundDisabled).Append("\n");
            sb.Append("  ButtonSecondaryBackgroundHover: ").Append(ButtonSecondaryBackgroundHover).Append("\n");
            sb.Append("  ButtonSecondaryBorderDefault: ").Append(ButtonSecondaryBorderDefault).Append("\n");
            sb.Append("  ButtonSecondaryBorderDisabled: ").Append(ButtonSecondaryBorderDisabled).Append("\n");
            sb.Append("  ButtonSecondaryBorderHover: ").Append(ButtonSecondaryBorderHover).Append("\n");
            sb.Append("  ButtonSecondaryForegroundDefault: ").Append(ButtonSecondaryForegroundDefault).Append("\n");
            sb.Append("  ButtonSecondaryForegroundDisabled: ").Append(ButtonSecondaryForegroundDisabled).Append("\n");
            sb.Append("  ButtonSecondaryForegroundHover: ").Append(ButtonSecondaryForegroundHover).Append("\n");
            sb.Append("  ButtonSocialBackgroundDefault: ").Append(ButtonSocialBackgroundDefault).Append("\n");
            sb.Append("  ButtonSocialBackgroundDisabled: ").Append(ButtonSocialBackgroundDisabled).Append("\n");
            sb.Append("  ButtonSocialBackgroundGenericProvider: ").Append(ButtonSocialBackgroundGenericProvider).Append("\n");
            sb.Append("  ButtonSocialBackgroundHover: ").Append(ButtonSocialBackgroundHover).Append("\n");
            sb.Append("  ButtonSocialBorderDefault: ").Append(ButtonSocialBorderDefault).Append("\n");
            sb.Append("  ButtonSocialBorderDisabled: ").Append(ButtonSocialBorderDisabled).Append("\n");
            sb.Append("  ButtonSocialBorderGenericProvider: ").Append(ButtonSocialBorderGenericProvider).Append("\n");
            sb.Append("  ButtonSocialBorderHover: ").Append(ButtonSocialBorderHover).Append("\n");
            sb.Append("  ButtonSocialForegroundDefault: ").Append(ButtonSocialForegroundDefault).Append("\n");
            sb.Append("  ButtonSocialForegroundDisabled: ").Append(ButtonSocialForegroundDisabled).Append("\n");
            sb.Append("  ButtonSocialForegroundGenericProvider: ").Append(ButtonSocialForegroundGenericProvider).Append("\n");
            sb.Append("  ButtonSocialForegroundHover: ").Append(ButtonSocialForegroundHover).Append("\n");
            sb.Append("  CheckboxBackgroundChecked: ").Append(CheckboxBackgroundChecked).Append("\n");
            sb.Append("  CheckboxBackgroundDefault: ").Append(CheckboxBackgroundDefault).Append("\n");
            sb.Append("  CheckboxBorderCheckboxBorderChecked: ").Append(CheckboxBorderCheckboxBorderChecked).Append("\n");
            sb.Append("  CheckboxBorderCheckboxBorderDefault: ").Append(CheckboxBorderCheckboxBorderDefault).Append("\n");
            sb.Append("  CheckboxForegroundChecked: ").Append(CheckboxForegroundChecked).Append("\n");
            sb.Append("  CheckboxForegroundDefault: ").Append(CheckboxForegroundDefault).Append("\n");
            sb.Append("  FormBackgroundDefault: ").Append(FormBackgroundDefault).Append("\n");
            sb.Append("  FormBorderDefault: ").Append(FormBorderDefault).Append("\n");
            sb.Append("  InputBackgroundDefault: ").Append(InputBackgroundDefault).Append("\n");
            sb.Append("  InputBackgroundDisabled: ").Append(InputBackgroundDisabled).Append("\n");
            sb.Append("  InputBackgroundHover: ").Append(InputBackgroundHover).Append("\n");
            sb.Append("  InputBorderDefault: ").Append(InputBorderDefault).Append("\n");
            sb.Append("  InputBorderDisabled: ").Append(InputBorderDisabled).Append("\n");
            sb.Append("  InputBorderFocus: ").Append(InputBorderFocus).Append("\n");
            sb.Append("  InputBorderHover: ").Append(InputBorderHover).Append("\n");
            sb.Append("  InputForegroundDisabled: ").Append(InputForegroundDisabled).Append("\n");
            sb.Append("  InputForegroundPrimary: ").Append(InputForegroundPrimary).Append("\n");
            sb.Append("  InputForegroundSecondary: ").Append(InputForegroundSecondary).Append("\n");
            sb.Append("  InputForegroundTertiary: ").Append(InputForegroundTertiary).Append("\n");
            sb.Append("  InterfaceBackgroundBrandPrimary: ").Append(InterfaceBackgroundBrandPrimary).Append("\n");
            sb.Append("  InterfaceBackgroundBrandPrimaryHover: ").Append(InterfaceBackgroundBrandPrimaryHover).Append("\n");
            sb.Append("  InterfaceBackgroundBrandSecondary: ").Append(InterfaceBackgroundBrandSecondary).Append("\n");
            sb.Append("  InterfaceBackgroundBrandSecondaryHover: ").Append(InterfaceBackgroundBrandSecondaryHover).Append("\n");
            sb.Append("  InterfaceBackgroundDefaultInverted: ").Append(InterfaceBackgroundDefaultInverted).Append("\n");
            sb.Append("  InterfaceBackgroundDefaultInvertedHover: ").Append(InterfaceBackgroundDefaultInvertedHover).Append("\n");
            sb.Append("  InterfaceBackgroundDefaultNone: ").Append(InterfaceBackgroundDefaultNone).Append("\n");
            sb.Append("  InterfaceBackgroundDefaultPrimary: ").Append(InterfaceBackgroundDefaultPrimary).Append("\n");
            sb.Append("  InterfaceBackgroundDefaultPrimaryHover: ").Append(InterfaceBackgroundDefaultPrimaryHover).Append("\n");
            sb.Append("  InterfaceBackgroundDefaultSecondary: ").Append(InterfaceBackgroundDefaultSecondary).Append("\n");
            sb.Append("  InterfaceBackgroundDefaultSecondaryHover: ").Append(InterfaceBackgroundDefaultSecondaryHover).Append("\n");
            sb.Append("  InterfaceBackgroundDefaultTertiary: ").Append(InterfaceBackgroundDefaultTertiary).Append("\n");
            sb.Append("  InterfaceBackgroundDefaultTertiaryHover: ").Append(InterfaceBackgroundDefaultTertiaryHover).Append("\n");
            sb.Append("  InterfaceBackgroundDisabledDisabled: ").Append(InterfaceBackgroundDisabledDisabled).Append("\n");
            sb.Append("  InterfaceBackgroundValidationDanger: ").Append(InterfaceBackgroundValidationDanger).Append("\n");
            sb.Append("  InterfaceBackgroundValidationSuccess: ").Append(InterfaceBackgroundValidationSuccess).Append("\n");
            sb.Append("  InterfaceBackgroundValidationWarning: ").Append(InterfaceBackgroundValidationWarning).Append("\n");
            sb.Append("  InterfaceBorderBrandBrand: ").Append(InterfaceBorderBrandBrand).Append("\n");
            sb.Append("  InterfaceBorderDefaultInverted: ").Append(InterfaceBorderDefaultInverted).Append("\n");
            sb.Append("  InterfaceBorderDefaultNone: ").Append(InterfaceBorderDefaultNone).Append("\n");
            sb.Append("  InterfaceBorderDefaultPrimary: ").Append(InterfaceBorderDefaultPrimary).Append("\n");
            sb.Append("  InterfaceBorderDisabledDisabled: ").Append(InterfaceBorderDisabledDisabled).Append("\n");
            sb.Append("  InterfaceBorderValidationDanger: ").Append(InterfaceBorderValidationDanger).Append("\n");
            sb.Append("  InterfaceBorderValidationSuccess: ").Append(InterfaceBorderValidationSuccess).Append("\n");
            sb.Append("  InterfaceBorderValidationWarning: ").Append(InterfaceBorderValidationWarning).Append("\n");
            sb.Append("  InterfaceForegroundBrandOnPrimary: ").Append(InterfaceForegroundBrandOnPrimary).Append("\n");
            sb.Append("  InterfaceForegroundBrandOnSecondary: ").Append(InterfaceForegroundBrandOnSecondary).Append("\n");
            sb.Append("  InterfaceForegroundBrandPrimary: ").Append(InterfaceForegroundBrandPrimary).Append("\n");
            sb.Append("  InterfaceForegroundBrandSecondary: ").Append(InterfaceForegroundBrandSecondary).Append("\n");
            sb.Append("  InterfaceForegroundDefaultInverted: ").Append(InterfaceForegroundDefaultInverted).Append("\n");
            sb.Append("  InterfaceForegroundDefaultPrimary: ").Append(InterfaceForegroundDefaultPrimary).Append("\n");
            sb.Append("  InterfaceForegroundDefaultSecondary: ").Append(InterfaceForegroundDefaultSecondary).Append("\n");
            sb.Append("  InterfaceForegroundDefaultTertiary: ").Append(InterfaceForegroundDefaultTertiary).Append("\n");
            sb.Append("  InterfaceForegroundDisabledDisabled: ").Append(InterfaceForegroundDisabledDisabled).Append("\n");
            sb.Append("  InterfaceForegroundDisabledOnDisabled: ").Append(InterfaceForegroundDisabledOnDisabled).Append("\n");
            sb.Append("  InterfaceForegroundValidationDanger: ").Append(InterfaceForegroundValidationDanger).Append("\n");
            sb.Append("  InterfaceForegroundValidationSuccess: ").Append(InterfaceForegroundValidationSuccess).Append("\n");
            sb.Append("  InterfaceForegroundValidationWarning: ").Append(InterfaceForegroundValidationWarning).Append("\n");
            sb.Append("  OryBackgroundDefault: ").Append(OryBackgroundDefault).Append("\n");
            sb.Append("  OryBorderDefault: ").Append(OryBorderDefault).Append("\n");
            sb.Append("  OryForegroundDefault: ").Append(OryForegroundDefault).Append("\n");
            sb.Append("  RadioBackgroundChecked: ").Append(RadioBackgroundChecked).Append("\n");
            sb.Append("  RadioBackgroundDefault: ").Append(RadioBackgroundDefault).Append("\n");
            sb.Append("  RadioBorderChecked: ").Append(RadioBorderChecked).Append("\n");
            sb.Append("  RadioBorderDefault: ").Append(RadioBorderDefault).Append("\n");
            sb.Append("  RadioForegroundChecked: ").Append(RadioForegroundChecked).Append("\n");
            sb.Append("  RadioForegroundDefault: ").Append(RadioForegroundDefault).Append("\n");
            sb.Append("  ToggleBackgroundChecked: ").Append(ToggleBackgroundChecked).Append("\n");
            sb.Append("  ToggleBackgroundDefault: ").Append(ToggleBackgroundDefault).Append("\n");
            sb.Append("  ToggleBorderChecked: ").Append(ToggleBorderChecked).Append("\n");
            sb.Append("  ToggleBorderDefault: ").Append(ToggleBorderDefault).Append("\n");
            sb.Append("  ToggleForegroundChecked: ").Append(ToggleForegroundChecked).Append("\n");
            sb.Append("  ToggleForegroundDefault: ").Append(ToggleForegroundDefault).Append("\n");
            sb.Append("  Ui100: ").Append(Ui100).Append("\n");
            sb.Append("  Ui200: ").Append(Ui200).Append("\n");
            sb.Append("  Ui300: ").Append(Ui300).Append("\n");
            sb.Append("  Ui400: ").Append(Ui400).Append("\n");
            sb.Append("  Ui50: ").Append(Ui50).Append("\n");
            sb.Append("  Ui500: ").Append(Ui500).Append("\n");
            sb.Append("  Ui600: ").Append(Ui600).Append("\n");
            sb.Append("  Ui700: ").Append(Ui700).Append("\n");
            sb.Append("  Ui800: ").Append(Ui800).Append("\n");
            sb.Append("  Ui900: ").Append(Ui900).Append("\n");
            sb.Append("  Ui950: ").Append(Ui950).Append("\n");
            sb.Append("  UiBlack: ").Append(UiBlack).Append("\n");
            sb.Append("  UiDanger: ").Append(UiDanger).Append("\n");
            sb.Append("  UiSuccess: ").Append(UiSuccess).Append("\n");
            sb.Append("  UiTransparent: ").Append(UiTransparent).Append("\n");
            sb.Append("  UiWarning: ").Append(UiWarning).Append("\n");
            sb.Append("  UiWhite: ").Append(UiWhite).Append("\n");
            sb.Append("  AdditionalProperties: ").Append(AdditionalProperties).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
