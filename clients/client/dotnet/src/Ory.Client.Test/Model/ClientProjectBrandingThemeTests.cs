/*
 * Ory APIs
 *
 * Documentation for all public and administrative Ory APIs. Administrative APIs can only be accessed with a valid Personal Access Token. Public APIs are mostly used in browsers. 
 *
 * The version of the OpenAPI document: v1.1.25
 * Contact: support@ory.sh
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Ory.Client.Api;
using Ory.Client.Model;
using Ory.Client.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Ory.Client.Test.Model
{
    /// <summary>
    ///  Class for testing ClientProjectBrandingTheme
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ClientProjectBrandingThemeTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ClientProjectBrandingTheme
        //private ClientProjectBrandingTheme instance;

        public ClientProjectBrandingThemeTests()
        {
            // TODO uncomment below to create an instance of ClientProjectBrandingTheme
            //instance = new ClientProjectBrandingTheme();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ClientProjectBrandingTheme
        /// </summary>
        [Fact]
        public void ClientProjectBrandingThemeInstanceTest()
        {
            // TODO uncomment below to test "IsType" ClientProjectBrandingTheme
            //Assert.IsType<ClientProjectBrandingTheme>(instance);
        }


        /// <summary>
        /// Test the property 'AccentDefaultColor'
        /// </summary>
        [Fact]
        public void AccentDefaultColorTest()
        {
            // TODO unit test for the property 'AccentDefaultColor'
        }
        /// <summary>
        /// Test the property 'AccentDisabledColor'
        /// </summary>
        [Fact]
        public void AccentDisabledColorTest()
        {
            // TODO unit test for the property 'AccentDisabledColor'
        }
        /// <summary>
        /// Test the property 'AccentEmphasisColor'
        /// </summary>
        [Fact]
        public void AccentEmphasisColorTest()
        {
            // TODO unit test for the property 'AccentEmphasisColor'
        }
        /// <summary>
        /// Test the property 'AccentMutedColor'
        /// </summary>
        [Fact]
        public void AccentMutedColorTest()
        {
            // TODO unit test for the property 'AccentMutedColor'
        }
        /// <summary>
        /// Test the property 'AccentSubtleColor'
        /// </summary>
        [Fact]
        public void AccentSubtleColorTest()
        {
            // TODO unit test for the property 'AccentSubtleColor'
        }
        /// <summary>
        /// Test the property 'BackgroundCanvasColor'
        /// </summary>
        [Fact]
        public void BackgroundCanvasColorTest()
        {
            // TODO unit test for the property 'BackgroundCanvasColor'
        }
        /// <summary>
        /// Test the property 'BackgroundSubtleColor'
        /// </summary>
        [Fact]
        public void BackgroundSubtleColorTest()
        {
            // TODO unit test for the property 'BackgroundSubtleColor'
        }
        /// <summary>
        /// Test the property 'BackgroundSurfaceColor'
        /// </summary>
        [Fact]
        public void BackgroundSurfaceColorTest()
        {
            // TODO unit test for the property 'BackgroundSurfaceColor'
        }
        /// <summary>
        /// Test the property 'BorderDefaultColor'
        /// </summary>
        [Fact]
        public void BorderDefaultColorTest()
        {
            // TODO unit test for the property 'BorderDefaultColor'
        }
        /// <summary>
        /// Test the property 'CreatedAt'
        /// </summary>
        [Fact]
        public void CreatedAtTest()
        {
            // TODO unit test for the property 'CreatedAt'
        }
        /// <summary>
        /// Test the property 'ErrorDefaultColor'
        /// </summary>
        [Fact]
        public void ErrorDefaultColorTest()
        {
            // TODO unit test for the property 'ErrorDefaultColor'
        }
        /// <summary>
        /// Test the property 'ErrorEmphasisColor'
        /// </summary>
        [Fact]
        public void ErrorEmphasisColorTest()
        {
            // TODO unit test for the property 'ErrorEmphasisColor'
        }
        /// <summary>
        /// Test the property 'ErrorMutedColor'
        /// </summary>
        [Fact]
        public void ErrorMutedColorTest()
        {
            // TODO unit test for the property 'ErrorMutedColor'
        }
        /// <summary>
        /// Test the property 'ErrorSubtleColor'
        /// </summary>
        [Fact]
        public void ErrorSubtleColorTest()
        {
            // TODO unit test for the property 'ErrorSubtleColor'
        }
        /// <summary>
        /// Test the property 'ForegroundDefaultColor'
        /// </summary>
        [Fact]
        public void ForegroundDefaultColorTest()
        {
            // TODO unit test for the property 'ForegroundDefaultColor'
        }
        /// <summary>
        /// Test the property 'ForegroundDisabledColor'
        /// </summary>
        [Fact]
        public void ForegroundDisabledColorTest()
        {
            // TODO unit test for the property 'ForegroundDisabledColor'
        }
        /// <summary>
        /// Test the property 'ForegroundMutedColor'
        /// </summary>
        [Fact]
        public void ForegroundMutedColorTest()
        {
            // TODO unit test for the property 'ForegroundMutedColor'
        }
        /// <summary>
        /// Test the property 'ForegroundOnAccentColor'
        /// </summary>
        [Fact]
        public void ForegroundOnAccentColorTest()
        {
            // TODO unit test for the property 'ForegroundOnAccentColor'
        }
        /// <summary>
        /// Test the property 'ForegroundOnDarkColor'
        /// </summary>
        [Fact]
        public void ForegroundOnDarkColorTest()
        {
            // TODO unit test for the property 'ForegroundOnDarkColor'
        }
        /// <summary>
        /// Test the property 'ForegroundOnDisabledColor'
        /// </summary>
        [Fact]
        public void ForegroundOnDisabledColorTest()
        {
            // TODO unit test for the property 'ForegroundOnDisabledColor'
        }
        /// <summary>
        /// Test the property 'ForegroundSubtleColor'
        /// </summary>
        [Fact]
        public void ForegroundSubtleColorTest()
        {
            // TODO unit test for the property 'ForegroundSubtleColor'
        }
        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'InputBackgroundColor'
        /// </summary>
        [Fact]
        public void InputBackgroundColorTest()
        {
            // TODO unit test for the property 'InputBackgroundColor'
        }
        /// <summary>
        /// Test the property 'InputDisabledColor'
        /// </summary>
        [Fact]
        public void InputDisabledColorTest()
        {
            // TODO unit test for the property 'InputDisabledColor'
        }
        /// <summary>
        /// Test the property 'InputPlaceholderColor'
        /// </summary>
        [Fact]
        public void InputPlaceholderColorTest()
        {
            // TODO unit test for the property 'InputPlaceholderColor'
        }
        /// <summary>
        /// Test the property 'InputTextColor'
        /// </summary>
        [Fact]
        public void InputTextColorTest()
        {
            // TODO unit test for the property 'InputTextColor'
        }
        /// <summary>
        /// Test the property 'LogoType'
        /// </summary>
        [Fact]
        public void LogoTypeTest()
        {
            // TODO unit test for the property 'LogoType'
        }
        /// <summary>
        /// Test the property 'LogoUrl'
        /// </summary>
        [Fact]
        public void LogoUrlTest()
        {
            // TODO unit test for the property 'LogoUrl'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'PrimaryColor'
        /// </summary>
        [Fact]
        public void PrimaryColorTest()
        {
            // TODO unit test for the property 'PrimaryColor'
        }
        /// <summary>
        /// Test the property 'ProjectBrandingId'
        /// </summary>
        [Fact]
        public void ProjectBrandingIdTest()
        {
            // TODO unit test for the property 'ProjectBrandingId'
        }
        /// <summary>
        /// Test the property 'SecondaryColor'
        /// </summary>
        [Fact]
        public void SecondaryColorTest()
        {
            // TODO unit test for the property 'SecondaryColor'
        }
        /// <summary>
        /// Test the property 'SuccessEmphasisColor'
        /// </summary>
        [Fact]
        public void SuccessEmphasisColorTest()
        {
            // TODO unit test for the property 'SuccessEmphasisColor'
        }
        /// <summary>
        /// Test the property 'TextDefaultColor'
        /// </summary>
        [Fact]
        public void TextDefaultColorTest()
        {
            // TODO unit test for the property 'TextDefaultColor'
        }
        /// <summary>
        /// Test the property 'TextDisabledColor'
        /// </summary>
        [Fact]
        public void TextDisabledColorTest()
        {
            // TODO unit test for the property 'TextDisabledColor'
        }
        /// <summary>
        /// Test the property 'UpdatedAt'
        /// </summary>
        [Fact]
        public void UpdatedAtTest()
        {
            // TODO unit test for the property 'UpdatedAt'
        }

    }

}
