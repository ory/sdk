/*
 * Ory APIs
 *
 * Documentation for all public and administrative Ory APIs. Administrative APIs can only be accessed with a valid Personal Access Token. Public APIs are mostly used in browsers. 
 *
 * The version of the OpenAPI document: v1.1.25
 * Contact: support@ory.sh
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Ory.Client.Api;
using Ory.Client.Model;
using Ory.Client.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Ory.Client.Test.Model
{
    /// <summary>
    ///  Class for testing ClientNormalizedProjectRevision
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ClientNormalizedProjectRevisionTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ClientNormalizedProjectRevision
        //private ClientNormalizedProjectRevision instance;

        public ClientNormalizedProjectRevisionTests()
        {
            // TODO uncomment below to create an instance of ClientNormalizedProjectRevision
            //instance = new ClientNormalizedProjectRevision();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ClientNormalizedProjectRevision
        /// </summary>
        [Fact]
        public void ClientNormalizedProjectRevisionInstanceTest()
        {
            // TODO uncomment below to test "IsType" ClientNormalizedProjectRevision
            //Assert.IsType<ClientNormalizedProjectRevision>(instance);
        }


        /// <summary>
        /// Test the property 'CreatedAt'
        /// </summary>
        [Fact]
        public void CreatedAtTest()
        {
            // TODO unit test for the property 'CreatedAt'
        }
        /// <summary>
        /// Test the property 'HydraOauth2AllowedTopLevelClaims'
        /// </summary>
        [Fact]
        public void HydraOauth2AllowedTopLevelClaimsTest()
        {
            // TODO unit test for the property 'HydraOauth2AllowedTopLevelClaims'
        }
        /// <summary>
        /// Test the property 'HydraOauth2ClientCredentialsDefaultGrantAllowedScope'
        /// </summary>
        [Fact]
        public void HydraOauth2ClientCredentialsDefaultGrantAllowedScopeTest()
        {
            // TODO unit test for the property 'HydraOauth2ClientCredentialsDefaultGrantAllowedScope'
        }
        /// <summary>
        /// Test the property 'HydraOauth2ExcludeNotBeforeClaim'
        /// </summary>
        [Fact]
        public void HydraOauth2ExcludeNotBeforeClaimTest()
        {
            // TODO unit test for the property 'HydraOauth2ExcludeNotBeforeClaim'
        }
        /// <summary>
        /// Test the property 'HydraOauth2GrantJwtIatOptional'
        /// </summary>
        [Fact]
        public void HydraOauth2GrantJwtIatOptionalTest()
        {
            // TODO unit test for the property 'HydraOauth2GrantJwtIatOptional'
        }
        /// <summary>
        /// Test the property 'HydraOauth2GrantJwtJtiOptional'
        /// </summary>
        [Fact]
        public void HydraOauth2GrantJwtJtiOptionalTest()
        {
            // TODO unit test for the property 'HydraOauth2GrantJwtJtiOptional'
        }
        /// <summary>
        /// Test the property 'HydraOauth2GrantJwtMaxTtl'
        /// </summary>
        [Fact]
        public void HydraOauth2GrantJwtMaxTtlTest()
        {
            // TODO unit test for the property 'HydraOauth2GrantJwtMaxTtl'
        }
        /// <summary>
        /// Test the property 'HydraOauth2PkceEnforced'
        /// </summary>
        [Fact]
        public void HydraOauth2PkceEnforcedTest()
        {
            // TODO unit test for the property 'HydraOauth2PkceEnforced'
        }
        /// <summary>
        /// Test the property 'HydraOauth2PkceEnforcedForPublicClients'
        /// </summary>
        [Fact]
        public void HydraOauth2PkceEnforcedForPublicClientsTest()
        {
            // TODO unit test for the property 'HydraOauth2PkceEnforcedForPublicClients'
        }
        /// <summary>
        /// Test the property 'HydraOauth2RefreshTokenHook'
        /// </summary>
        [Fact]
        public void HydraOauth2RefreshTokenHookTest()
        {
            // TODO unit test for the property 'HydraOauth2RefreshTokenHook'
        }
        /// <summary>
        /// Test the property 'HydraOidcDynamicClientRegistrationDefaultScope'
        /// </summary>
        [Fact]
        public void HydraOidcDynamicClientRegistrationDefaultScopeTest()
        {
            // TODO unit test for the property 'HydraOidcDynamicClientRegistrationDefaultScope'
        }
        /// <summary>
        /// Test the property 'HydraOidcDynamicClientRegistrationEnabled'
        /// </summary>
        [Fact]
        public void HydraOidcDynamicClientRegistrationEnabledTest()
        {
            // TODO unit test for the property 'HydraOidcDynamicClientRegistrationEnabled'
        }
        /// <summary>
        /// Test the property 'HydraOidcSubjectIdentifiersPairwiseSalt'
        /// </summary>
        [Fact]
        public void HydraOidcSubjectIdentifiersPairwiseSaltTest()
        {
            // TODO unit test for the property 'HydraOidcSubjectIdentifiersPairwiseSalt'
        }
        /// <summary>
        /// Test the property 'HydraOidcSubjectIdentifiersSupportedTypes'
        /// </summary>
        [Fact]
        public void HydraOidcSubjectIdentifiersSupportedTypesTest()
        {
            // TODO unit test for the property 'HydraOidcSubjectIdentifiersSupportedTypes'
        }
        /// <summary>
        /// Test the property 'HydraSecretsCookie'
        /// </summary>
        [Fact]
        public void HydraSecretsCookieTest()
        {
            // TODO unit test for the property 'HydraSecretsCookie'
        }
        /// <summary>
        /// Test the property 'HydraSecretsSystem'
        /// </summary>
        [Fact]
        public void HydraSecretsSystemTest()
        {
            // TODO unit test for the property 'HydraSecretsSystem'
        }
        /// <summary>
        /// Test the property 'HydraServeAdminCorsAllowedOrigins'
        /// </summary>
        [Fact]
        public void HydraServeAdminCorsAllowedOriginsTest()
        {
            // TODO unit test for the property 'HydraServeAdminCorsAllowedOrigins'
        }
        /// <summary>
        /// Test the property 'HydraServeAdminCorsEnabled'
        /// </summary>
        [Fact]
        public void HydraServeAdminCorsEnabledTest()
        {
            // TODO unit test for the property 'HydraServeAdminCorsEnabled'
        }
        /// <summary>
        /// Test the property 'HydraServeCookiesSameSiteLegacyWorkaround'
        /// </summary>
        [Fact]
        public void HydraServeCookiesSameSiteLegacyWorkaroundTest()
        {
            // TODO unit test for the property 'HydraServeCookiesSameSiteLegacyWorkaround'
        }
        /// <summary>
        /// Test the property 'HydraServeCookiesSameSiteMode'
        /// </summary>
        [Fact]
        public void HydraServeCookiesSameSiteModeTest()
        {
            // TODO unit test for the property 'HydraServeCookiesSameSiteMode'
        }
        /// <summary>
        /// Test the property 'HydraServePublicCorsAllowedOrigins'
        /// </summary>
        [Fact]
        public void HydraServePublicCorsAllowedOriginsTest()
        {
            // TODO unit test for the property 'HydraServePublicCorsAllowedOrigins'
        }
        /// <summary>
        /// Test the property 'HydraServePublicCorsEnabled'
        /// </summary>
        [Fact]
        public void HydraServePublicCorsEnabledTest()
        {
            // TODO unit test for the property 'HydraServePublicCorsEnabled'
        }
        /// <summary>
        /// Test the property 'HydraStrategiesAccessToken'
        /// </summary>
        [Fact]
        public void HydraStrategiesAccessTokenTest()
        {
            // TODO unit test for the property 'HydraStrategiesAccessToken'
        }
        /// <summary>
        /// Test the property 'HydraStrategiesScope'
        /// </summary>
        [Fact]
        public void HydraStrategiesScopeTest()
        {
            // TODO unit test for the property 'HydraStrategiesScope'
        }
        /// <summary>
        /// Test the property 'HydraTtlAccessToken'
        /// </summary>
        [Fact]
        public void HydraTtlAccessTokenTest()
        {
            // TODO unit test for the property 'HydraTtlAccessToken'
        }
        /// <summary>
        /// Test the property 'HydraTtlAuthCode'
        /// </summary>
        [Fact]
        public void HydraTtlAuthCodeTest()
        {
            // TODO unit test for the property 'HydraTtlAuthCode'
        }
        /// <summary>
        /// Test the property 'HydraTtlIdToken'
        /// </summary>
        [Fact]
        public void HydraTtlIdTokenTest()
        {
            // TODO unit test for the property 'HydraTtlIdToken'
        }
        /// <summary>
        /// Test the property 'HydraTtlLoginConsentRequest'
        /// </summary>
        [Fact]
        public void HydraTtlLoginConsentRequestTest()
        {
            // TODO unit test for the property 'HydraTtlLoginConsentRequest'
        }
        /// <summary>
        /// Test the property 'HydraTtlRefreshToken'
        /// </summary>
        [Fact]
        public void HydraTtlRefreshTokenTest()
        {
            // TODO unit test for the property 'HydraTtlRefreshToken'
        }
        /// <summary>
        /// Test the property 'HydraUrlsConsent'
        /// </summary>
        [Fact]
        public void HydraUrlsConsentTest()
        {
            // TODO unit test for the property 'HydraUrlsConsent'
        }
        /// <summary>
        /// Test the property 'HydraUrlsError'
        /// </summary>
        [Fact]
        public void HydraUrlsErrorTest()
        {
            // TODO unit test for the property 'HydraUrlsError'
        }
        /// <summary>
        /// Test the property 'HydraUrlsLogin'
        /// </summary>
        [Fact]
        public void HydraUrlsLoginTest()
        {
            // TODO unit test for the property 'HydraUrlsLogin'
        }
        /// <summary>
        /// Test the property 'HydraUrlsLogout'
        /// </summary>
        [Fact]
        public void HydraUrlsLogoutTest()
        {
            // TODO unit test for the property 'HydraUrlsLogout'
        }
        /// <summary>
        /// Test the property 'HydraUrlsPostLogoutRedirect'
        /// </summary>
        [Fact]
        public void HydraUrlsPostLogoutRedirectTest()
        {
            // TODO unit test for the property 'HydraUrlsPostLogoutRedirect'
        }
        /// <summary>
        /// Test the property 'HydraUrlsSelfIssuer'
        /// </summary>
        [Fact]
        public void HydraUrlsSelfIssuerTest()
        {
            // TODO unit test for the property 'HydraUrlsSelfIssuer'
        }
        /// <summary>
        /// Test the property 'HydraWebfingerJwksBroadcastKeys'
        /// </summary>
        [Fact]
        public void HydraWebfingerJwksBroadcastKeysTest()
        {
            // TODO unit test for the property 'HydraWebfingerJwksBroadcastKeys'
        }
        /// <summary>
        /// Test the property 'HydraWebfingerOidcDiscoveryAuthUrl'
        /// </summary>
        [Fact]
        public void HydraWebfingerOidcDiscoveryAuthUrlTest()
        {
            // TODO unit test for the property 'HydraWebfingerOidcDiscoveryAuthUrl'
        }
        /// <summary>
        /// Test the property 'HydraWebfingerOidcDiscoveryClientRegistrationUrl'
        /// </summary>
        [Fact]
        public void HydraWebfingerOidcDiscoveryClientRegistrationUrlTest()
        {
            // TODO unit test for the property 'HydraWebfingerOidcDiscoveryClientRegistrationUrl'
        }
        /// <summary>
        /// Test the property 'HydraWebfingerOidcDiscoveryJwksUrl'
        /// </summary>
        [Fact]
        public void HydraWebfingerOidcDiscoveryJwksUrlTest()
        {
            // TODO unit test for the property 'HydraWebfingerOidcDiscoveryJwksUrl'
        }
        /// <summary>
        /// Test the property 'HydraWebfingerOidcDiscoverySupportedClaims'
        /// </summary>
        [Fact]
        public void HydraWebfingerOidcDiscoverySupportedClaimsTest()
        {
            // TODO unit test for the property 'HydraWebfingerOidcDiscoverySupportedClaims'
        }
        /// <summary>
        /// Test the property 'HydraWebfingerOidcDiscoverySupportedScope'
        /// </summary>
        [Fact]
        public void HydraWebfingerOidcDiscoverySupportedScopeTest()
        {
            // TODO unit test for the property 'HydraWebfingerOidcDiscoverySupportedScope'
        }
        /// <summary>
        /// Test the property 'HydraWebfingerOidcDiscoveryTokenUrl'
        /// </summary>
        [Fact]
        public void HydraWebfingerOidcDiscoveryTokenUrlTest()
        {
            // TODO unit test for the property 'HydraWebfingerOidcDiscoveryTokenUrl'
        }
        /// <summary>
        /// Test the property 'HydraWebfingerOidcDiscoveryUserinfoUrl'
        /// </summary>
        [Fact]
        public void HydraWebfingerOidcDiscoveryUserinfoUrlTest()
        {
            // TODO unit test for the property 'HydraWebfingerOidcDiscoveryUserinfoUrl'
        }
        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'KetoNamespaceConfiguration'
        /// </summary>
        [Fact]
        public void KetoNamespaceConfigurationTest()
        {
            // TODO unit test for the property 'KetoNamespaceConfiguration'
        }
        /// <summary>
        /// Test the property 'KetoNamespaces'
        /// </summary>
        [Fact]
        public void KetoNamespacesTest()
        {
            // TODO unit test for the property 'KetoNamespaces'
        }
        /// <summary>
        /// Test the property 'KetoReadMaxDepth'
        /// </summary>
        [Fact]
        public void KetoReadMaxDepthTest()
        {
            // TODO unit test for the property 'KetoReadMaxDepth'
        }
        /// <summary>
        /// Test the property 'KratosCookiesSameSite'
        /// </summary>
        [Fact]
        public void KratosCookiesSameSiteTest()
        {
            // TODO unit test for the property 'KratosCookiesSameSite'
        }
        /// <summary>
        /// Test the property 'KratosCourierSmtpConnectionUri'
        /// </summary>
        [Fact]
        public void KratosCourierSmtpConnectionUriTest()
        {
            // TODO unit test for the property 'KratosCourierSmtpConnectionUri'
        }
        /// <summary>
        /// Test the property 'KratosCourierSmtpFromAddress'
        /// </summary>
        [Fact]
        public void KratosCourierSmtpFromAddressTest()
        {
            // TODO unit test for the property 'KratosCourierSmtpFromAddress'
        }
        /// <summary>
        /// Test the property 'KratosCourierSmtpFromName'
        /// </summary>
        [Fact]
        public void KratosCourierSmtpFromNameTest()
        {
            // TODO unit test for the property 'KratosCourierSmtpFromName'
        }
        /// <summary>
        /// Test the property 'KratosCourierSmtpHeaders'
        /// </summary>
        [Fact]
        public void KratosCourierSmtpHeadersTest()
        {
            // TODO unit test for the property 'KratosCourierSmtpHeaders'
        }
        /// <summary>
        /// Test the property 'KratosCourierTemplatesRecoveryCodeInvalidEmailBodyHtml'
        /// </summary>
        [Fact]
        public void KratosCourierTemplatesRecoveryCodeInvalidEmailBodyHtmlTest()
        {
            // TODO unit test for the property 'KratosCourierTemplatesRecoveryCodeInvalidEmailBodyHtml'
        }
        /// <summary>
        /// Test the property 'KratosCourierTemplatesRecoveryCodeInvalidEmailBodyPlaintext'
        /// </summary>
        [Fact]
        public void KratosCourierTemplatesRecoveryCodeInvalidEmailBodyPlaintextTest()
        {
            // TODO unit test for the property 'KratosCourierTemplatesRecoveryCodeInvalidEmailBodyPlaintext'
        }
        /// <summary>
        /// Test the property 'KratosCourierTemplatesRecoveryCodeInvalidEmailSubject'
        /// </summary>
        [Fact]
        public void KratosCourierTemplatesRecoveryCodeInvalidEmailSubjectTest()
        {
            // TODO unit test for the property 'KratosCourierTemplatesRecoveryCodeInvalidEmailSubject'
        }
        /// <summary>
        /// Test the property 'KratosCourierTemplatesRecoveryCodeValidEmailBodyHtml'
        /// </summary>
        [Fact]
        public void KratosCourierTemplatesRecoveryCodeValidEmailBodyHtmlTest()
        {
            // TODO unit test for the property 'KratosCourierTemplatesRecoveryCodeValidEmailBodyHtml'
        }
        /// <summary>
        /// Test the property 'KratosCourierTemplatesRecoveryCodeValidEmailBodyPlaintext'
        /// </summary>
        [Fact]
        public void KratosCourierTemplatesRecoveryCodeValidEmailBodyPlaintextTest()
        {
            // TODO unit test for the property 'KratosCourierTemplatesRecoveryCodeValidEmailBodyPlaintext'
        }
        /// <summary>
        /// Test the property 'KratosCourierTemplatesRecoveryCodeValidEmailSubject'
        /// </summary>
        [Fact]
        public void KratosCourierTemplatesRecoveryCodeValidEmailSubjectTest()
        {
            // TODO unit test for the property 'KratosCourierTemplatesRecoveryCodeValidEmailSubject'
        }
        /// <summary>
        /// Test the property 'KratosCourierTemplatesRecoveryInvalidEmailBodyHtml'
        /// </summary>
        [Fact]
        public void KratosCourierTemplatesRecoveryInvalidEmailBodyHtmlTest()
        {
            // TODO unit test for the property 'KratosCourierTemplatesRecoveryInvalidEmailBodyHtml'
        }
        /// <summary>
        /// Test the property 'KratosCourierTemplatesRecoveryInvalidEmailBodyPlaintext'
        /// </summary>
        [Fact]
        public void KratosCourierTemplatesRecoveryInvalidEmailBodyPlaintextTest()
        {
            // TODO unit test for the property 'KratosCourierTemplatesRecoveryInvalidEmailBodyPlaintext'
        }
        /// <summary>
        /// Test the property 'KratosCourierTemplatesRecoveryInvalidEmailSubject'
        /// </summary>
        [Fact]
        public void KratosCourierTemplatesRecoveryInvalidEmailSubjectTest()
        {
            // TODO unit test for the property 'KratosCourierTemplatesRecoveryInvalidEmailSubject'
        }
        /// <summary>
        /// Test the property 'KratosCourierTemplatesRecoveryValidEmailBodyHtml'
        /// </summary>
        [Fact]
        public void KratosCourierTemplatesRecoveryValidEmailBodyHtmlTest()
        {
            // TODO unit test for the property 'KratosCourierTemplatesRecoveryValidEmailBodyHtml'
        }
        /// <summary>
        /// Test the property 'KratosCourierTemplatesRecoveryValidEmailBodyPlaintext'
        /// </summary>
        [Fact]
        public void KratosCourierTemplatesRecoveryValidEmailBodyPlaintextTest()
        {
            // TODO unit test for the property 'KratosCourierTemplatesRecoveryValidEmailBodyPlaintext'
        }
        /// <summary>
        /// Test the property 'KratosCourierTemplatesRecoveryValidEmailSubject'
        /// </summary>
        [Fact]
        public void KratosCourierTemplatesRecoveryValidEmailSubjectTest()
        {
            // TODO unit test for the property 'KratosCourierTemplatesRecoveryValidEmailSubject'
        }
        /// <summary>
        /// Test the property 'KratosCourierTemplatesVerificationCodeInvalidEmailBodyHtml'
        /// </summary>
        [Fact]
        public void KratosCourierTemplatesVerificationCodeInvalidEmailBodyHtmlTest()
        {
            // TODO unit test for the property 'KratosCourierTemplatesVerificationCodeInvalidEmailBodyHtml'
        }
        /// <summary>
        /// Test the property 'KratosCourierTemplatesVerificationCodeInvalidEmailBodyPlaintext'
        /// </summary>
        [Fact]
        public void KratosCourierTemplatesVerificationCodeInvalidEmailBodyPlaintextTest()
        {
            // TODO unit test for the property 'KratosCourierTemplatesVerificationCodeInvalidEmailBodyPlaintext'
        }
        /// <summary>
        /// Test the property 'KratosCourierTemplatesVerificationCodeInvalidEmailSubject'
        /// </summary>
        [Fact]
        public void KratosCourierTemplatesVerificationCodeInvalidEmailSubjectTest()
        {
            // TODO unit test for the property 'KratosCourierTemplatesVerificationCodeInvalidEmailSubject'
        }
        /// <summary>
        /// Test the property 'KratosCourierTemplatesVerificationCodeValidEmailBodyHtml'
        /// </summary>
        [Fact]
        public void KratosCourierTemplatesVerificationCodeValidEmailBodyHtmlTest()
        {
            // TODO unit test for the property 'KratosCourierTemplatesVerificationCodeValidEmailBodyHtml'
        }
        /// <summary>
        /// Test the property 'KratosCourierTemplatesVerificationCodeValidEmailBodyPlaintext'
        /// </summary>
        [Fact]
        public void KratosCourierTemplatesVerificationCodeValidEmailBodyPlaintextTest()
        {
            // TODO unit test for the property 'KratosCourierTemplatesVerificationCodeValidEmailBodyPlaintext'
        }
        /// <summary>
        /// Test the property 'KratosCourierTemplatesVerificationCodeValidEmailSubject'
        /// </summary>
        [Fact]
        public void KratosCourierTemplatesVerificationCodeValidEmailSubjectTest()
        {
            // TODO unit test for the property 'KratosCourierTemplatesVerificationCodeValidEmailSubject'
        }
        /// <summary>
        /// Test the property 'KratosCourierTemplatesVerificationInvalidEmailBodyHtml'
        /// </summary>
        [Fact]
        public void KratosCourierTemplatesVerificationInvalidEmailBodyHtmlTest()
        {
            // TODO unit test for the property 'KratosCourierTemplatesVerificationInvalidEmailBodyHtml'
        }
        /// <summary>
        /// Test the property 'KratosCourierTemplatesVerificationInvalidEmailBodyPlaintext'
        /// </summary>
        [Fact]
        public void KratosCourierTemplatesVerificationInvalidEmailBodyPlaintextTest()
        {
            // TODO unit test for the property 'KratosCourierTemplatesVerificationInvalidEmailBodyPlaintext'
        }
        /// <summary>
        /// Test the property 'KratosCourierTemplatesVerificationInvalidEmailSubject'
        /// </summary>
        [Fact]
        public void KratosCourierTemplatesVerificationInvalidEmailSubjectTest()
        {
            // TODO unit test for the property 'KratosCourierTemplatesVerificationInvalidEmailSubject'
        }
        /// <summary>
        /// Test the property 'KratosCourierTemplatesVerificationValidEmailBodyHtml'
        /// </summary>
        [Fact]
        public void KratosCourierTemplatesVerificationValidEmailBodyHtmlTest()
        {
            // TODO unit test for the property 'KratosCourierTemplatesVerificationValidEmailBodyHtml'
        }
        /// <summary>
        /// Test the property 'KratosCourierTemplatesVerificationValidEmailBodyPlaintext'
        /// </summary>
        [Fact]
        public void KratosCourierTemplatesVerificationValidEmailBodyPlaintextTest()
        {
            // TODO unit test for the property 'KratosCourierTemplatesVerificationValidEmailBodyPlaintext'
        }
        /// <summary>
        /// Test the property 'KratosCourierTemplatesVerificationValidEmailSubject'
        /// </summary>
        [Fact]
        public void KratosCourierTemplatesVerificationValidEmailSubjectTest()
        {
            // TODO unit test for the property 'KratosCourierTemplatesVerificationValidEmailSubject'
        }
        /// <summary>
        /// Test the property 'KratosFeatureFlagsCacheableSessions'
        /// </summary>
        [Fact]
        public void KratosFeatureFlagsCacheableSessionsTest()
        {
            // TODO unit test for the property 'KratosFeatureFlagsCacheableSessions'
        }
        /// <summary>
        /// Test the property 'KratosIdentitySchemas'
        /// </summary>
        [Fact]
        public void KratosIdentitySchemasTest()
        {
            // TODO unit test for the property 'KratosIdentitySchemas'
        }
        /// <summary>
        /// Test the property 'KratosOauth2ProviderHeaders'
        /// </summary>
        [Fact]
        public void KratosOauth2ProviderHeadersTest()
        {
            // TODO unit test for the property 'KratosOauth2ProviderHeaders'
        }
        /// <summary>
        /// Test the property 'KratosOauth2ProviderUrl'
        /// </summary>
        [Fact]
        public void KratosOauth2ProviderUrlTest()
        {
            // TODO unit test for the property 'KratosOauth2ProviderUrl'
        }
        /// <summary>
        /// Test the property 'KratosSecretsCipher'
        /// </summary>
        [Fact]
        public void KratosSecretsCipherTest()
        {
            // TODO unit test for the property 'KratosSecretsCipher'
        }
        /// <summary>
        /// Test the property 'KratosSecretsCookie'
        /// </summary>
        [Fact]
        public void KratosSecretsCookieTest()
        {
            // TODO unit test for the property 'KratosSecretsCookie'
        }
        /// <summary>
        /// Test the property 'KratosSecretsDefault'
        /// </summary>
        [Fact]
        public void KratosSecretsDefaultTest()
        {
            // TODO unit test for the property 'KratosSecretsDefault'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceAllowedReturnUrls'
        /// </summary>
        [Fact]
        public void KratosSelfserviceAllowedReturnUrlsTest()
        {
            // TODO unit test for the property 'KratosSelfserviceAllowedReturnUrls'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceDefaultBrowserReturnUrl'
        /// </summary>
        [Fact]
        public void KratosSelfserviceDefaultBrowserReturnUrlTest()
        {
            // TODO unit test for the property 'KratosSelfserviceDefaultBrowserReturnUrl'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceFlowsErrorUiUrl'
        /// </summary>
        [Fact]
        public void KratosSelfserviceFlowsErrorUiUrlTest()
        {
            // TODO unit test for the property 'KratosSelfserviceFlowsErrorUiUrl'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceFlowsHooks'
        /// </summary>
        [Fact]
        public void KratosSelfserviceFlowsHooksTest()
        {
            // TODO unit test for the property 'KratosSelfserviceFlowsHooks'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceFlowsLoginAfterDefaultBrowserReturnUrl'
        /// </summary>
        [Fact]
        public void KratosSelfserviceFlowsLoginAfterDefaultBrowserReturnUrlTest()
        {
            // TODO unit test for the property 'KratosSelfserviceFlowsLoginAfterDefaultBrowserReturnUrl'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceFlowsLoginAfterOidcDefaultBrowserReturnUrl'
        /// </summary>
        [Fact]
        public void KratosSelfserviceFlowsLoginAfterOidcDefaultBrowserReturnUrlTest()
        {
            // TODO unit test for the property 'KratosSelfserviceFlowsLoginAfterOidcDefaultBrowserReturnUrl'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceFlowsLoginAfterPasswordDefaultBrowserReturnUrl'
        /// </summary>
        [Fact]
        public void KratosSelfserviceFlowsLoginAfterPasswordDefaultBrowserReturnUrlTest()
        {
            // TODO unit test for the property 'KratosSelfserviceFlowsLoginAfterPasswordDefaultBrowserReturnUrl'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceFlowsLoginAfterWebauthnDefaultBrowserReturnUrl'
        /// </summary>
        [Fact]
        public void KratosSelfserviceFlowsLoginAfterWebauthnDefaultBrowserReturnUrlTest()
        {
            // TODO unit test for the property 'KratosSelfserviceFlowsLoginAfterWebauthnDefaultBrowserReturnUrl'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceFlowsLoginLifespan'
        /// </summary>
        [Fact]
        public void KratosSelfserviceFlowsLoginLifespanTest()
        {
            // TODO unit test for the property 'KratosSelfserviceFlowsLoginLifespan'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceFlowsLoginUiUrl'
        /// </summary>
        [Fact]
        public void KratosSelfserviceFlowsLoginUiUrlTest()
        {
            // TODO unit test for the property 'KratosSelfserviceFlowsLoginUiUrl'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceFlowsLogoutAfterDefaultBrowserReturnUrl'
        /// </summary>
        [Fact]
        public void KratosSelfserviceFlowsLogoutAfterDefaultBrowserReturnUrlTest()
        {
            // TODO unit test for the property 'KratosSelfserviceFlowsLogoutAfterDefaultBrowserReturnUrl'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceFlowsRecoveryAfterDefaultBrowserReturnUrl'
        /// </summary>
        [Fact]
        public void KratosSelfserviceFlowsRecoveryAfterDefaultBrowserReturnUrlTest()
        {
            // TODO unit test for the property 'KratosSelfserviceFlowsRecoveryAfterDefaultBrowserReturnUrl'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceFlowsRecoveryEnabled'
        /// </summary>
        [Fact]
        public void KratosSelfserviceFlowsRecoveryEnabledTest()
        {
            // TODO unit test for the property 'KratosSelfserviceFlowsRecoveryEnabled'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceFlowsRecoveryLifespan'
        /// </summary>
        [Fact]
        public void KratosSelfserviceFlowsRecoveryLifespanTest()
        {
            // TODO unit test for the property 'KratosSelfserviceFlowsRecoveryLifespan'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceFlowsRecoveryNotifyUnknownRecipients'
        /// </summary>
        [Fact]
        public void KratosSelfserviceFlowsRecoveryNotifyUnknownRecipientsTest()
        {
            // TODO unit test for the property 'KratosSelfserviceFlowsRecoveryNotifyUnknownRecipients'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceFlowsRecoveryUiUrl'
        /// </summary>
        [Fact]
        public void KratosSelfserviceFlowsRecoveryUiUrlTest()
        {
            // TODO unit test for the property 'KratosSelfserviceFlowsRecoveryUiUrl'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceFlowsRecoveryUse'
        /// </summary>
        [Fact]
        public void KratosSelfserviceFlowsRecoveryUseTest()
        {
            // TODO unit test for the property 'KratosSelfserviceFlowsRecoveryUse'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceFlowsRegistrationAfterDefaultBrowserReturnUrl'
        /// </summary>
        [Fact]
        public void KratosSelfserviceFlowsRegistrationAfterDefaultBrowserReturnUrlTest()
        {
            // TODO unit test for the property 'KratosSelfserviceFlowsRegistrationAfterDefaultBrowserReturnUrl'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceFlowsRegistrationAfterOidcDefaultBrowserReturnUrl'
        /// </summary>
        [Fact]
        public void KratosSelfserviceFlowsRegistrationAfterOidcDefaultBrowserReturnUrlTest()
        {
            // TODO unit test for the property 'KratosSelfserviceFlowsRegistrationAfterOidcDefaultBrowserReturnUrl'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceFlowsRegistrationAfterPasswordDefaultBrowserReturnUrl'
        /// </summary>
        [Fact]
        public void KratosSelfserviceFlowsRegistrationAfterPasswordDefaultBrowserReturnUrlTest()
        {
            // TODO unit test for the property 'KratosSelfserviceFlowsRegistrationAfterPasswordDefaultBrowserReturnUrl'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceFlowsRegistrationAfterWebauthnDefaultBrowserReturnUrl'
        /// </summary>
        [Fact]
        public void KratosSelfserviceFlowsRegistrationAfterWebauthnDefaultBrowserReturnUrlTest()
        {
            // TODO unit test for the property 'KratosSelfserviceFlowsRegistrationAfterWebauthnDefaultBrowserReturnUrl'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceFlowsRegistrationEnabled'
        /// </summary>
        [Fact]
        public void KratosSelfserviceFlowsRegistrationEnabledTest()
        {
            // TODO unit test for the property 'KratosSelfserviceFlowsRegistrationEnabled'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceFlowsRegistrationLifespan'
        /// </summary>
        [Fact]
        public void KratosSelfserviceFlowsRegistrationLifespanTest()
        {
            // TODO unit test for the property 'KratosSelfserviceFlowsRegistrationLifespan'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceFlowsRegistrationUiUrl'
        /// </summary>
        [Fact]
        public void KratosSelfserviceFlowsRegistrationUiUrlTest()
        {
            // TODO unit test for the property 'KratosSelfserviceFlowsRegistrationUiUrl'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceFlowsSettingsAfterDefaultBrowserReturnUrl'
        /// </summary>
        [Fact]
        public void KratosSelfserviceFlowsSettingsAfterDefaultBrowserReturnUrlTest()
        {
            // TODO unit test for the property 'KratosSelfserviceFlowsSettingsAfterDefaultBrowserReturnUrl'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceFlowsSettingsAfterPasswordDefaultBrowserReturnUrl'
        /// </summary>
        [Fact]
        public void KratosSelfserviceFlowsSettingsAfterPasswordDefaultBrowserReturnUrlTest()
        {
            // TODO unit test for the property 'KratosSelfserviceFlowsSettingsAfterPasswordDefaultBrowserReturnUrl'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceFlowsSettingsAfterProfileDefaultBrowserReturnUrl'
        /// </summary>
        [Fact]
        public void KratosSelfserviceFlowsSettingsAfterProfileDefaultBrowserReturnUrlTest()
        {
            // TODO unit test for the property 'KratosSelfserviceFlowsSettingsAfterProfileDefaultBrowserReturnUrl'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceFlowsSettingsLifespan'
        /// </summary>
        [Fact]
        public void KratosSelfserviceFlowsSettingsLifespanTest()
        {
            // TODO unit test for the property 'KratosSelfserviceFlowsSettingsLifespan'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceFlowsSettingsPrivilegedSessionMaxAge'
        /// </summary>
        [Fact]
        public void KratosSelfserviceFlowsSettingsPrivilegedSessionMaxAgeTest()
        {
            // TODO unit test for the property 'KratosSelfserviceFlowsSettingsPrivilegedSessionMaxAge'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceFlowsSettingsRequiredAal'
        /// </summary>
        [Fact]
        public void KratosSelfserviceFlowsSettingsRequiredAalTest()
        {
            // TODO unit test for the property 'KratosSelfserviceFlowsSettingsRequiredAal'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceFlowsSettingsUiUrl'
        /// </summary>
        [Fact]
        public void KratosSelfserviceFlowsSettingsUiUrlTest()
        {
            // TODO unit test for the property 'KratosSelfserviceFlowsSettingsUiUrl'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceFlowsVerificationAfterDefaultBrowserReturnUrl'
        /// </summary>
        [Fact]
        public void KratosSelfserviceFlowsVerificationAfterDefaultBrowserReturnUrlTest()
        {
            // TODO unit test for the property 'KratosSelfserviceFlowsVerificationAfterDefaultBrowserReturnUrl'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceFlowsVerificationEnabled'
        /// </summary>
        [Fact]
        public void KratosSelfserviceFlowsVerificationEnabledTest()
        {
            // TODO unit test for the property 'KratosSelfserviceFlowsVerificationEnabled'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceFlowsVerificationLifespan'
        /// </summary>
        [Fact]
        public void KratosSelfserviceFlowsVerificationLifespanTest()
        {
            // TODO unit test for the property 'KratosSelfserviceFlowsVerificationLifespan'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceFlowsVerificationNotifyUnknownRecipients'
        /// </summary>
        [Fact]
        public void KratosSelfserviceFlowsVerificationNotifyUnknownRecipientsTest()
        {
            // TODO unit test for the property 'KratosSelfserviceFlowsVerificationNotifyUnknownRecipients'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceFlowsVerificationUiUrl'
        /// </summary>
        [Fact]
        public void KratosSelfserviceFlowsVerificationUiUrlTest()
        {
            // TODO unit test for the property 'KratosSelfserviceFlowsVerificationUiUrl'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceFlowsVerificationUse'
        /// </summary>
        [Fact]
        public void KratosSelfserviceFlowsVerificationUseTest()
        {
            // TODO unit test for the property 'KratosSelfserviceFlowsVerificationUse'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceMethodsCodeConfigLifespan'
        /// </summary>
        [Fact]
        public void KratosSelfserviceMethodsCodeConfigLifespanTest()
        {
            // TODO unit test for the property 'KratosSelfserviceMethodsCodeConfigLifespan'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceMethodsCodeEnabled'
        /// </summary>
        [Fact]
        public void KratosSelfserviceMethodsCodeEnabledTest()
        {
            // TODO unit test for the property 'KratosSelfserviceMethodsCodeEnabled'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceMethodsLinkConfigBaseUrl'
        /// </summary>
        [Fact]
        public void KratosSelfserviceMethodsLinkConfigBaseUrlTest()
        {
            // TODO unit test for the property 'KratosSelfserviceMethodsLinkConfigBaseUrl'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceMethodsLinkConfigLifespan'
        /// </summary>
        [Fact]
        public void KratosSelfserviceMethodsLinkConfigLifespanTest()
        {
            // TODO unit test for the property 'KratosSelfserviceMethodsLinkConfigLifespan'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceMethodsLinkEnabled'
        /// </summary>
        [Fact]
        public void KratosSelfserviceMethodsLinkEnabledTest()
        {
            // TODO unit test for the property 'KratosSelfserviceMethodsLinkEnabled'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceMethodsLookupSecretEnabled'
        /// </summary>
        [Fact]
        public void KratosSelfserviceMethodsLookupSecretEnabledTest()
        {
            // TODO unit test for the property 'KratosSelfserviceMethodsLookupSecretEnabled'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceMethodsOidcConfigBaseRedirectUri'
        /// </summary>
        [Fact]
        public void KratosSelfserviceMethodsOidcConfigBaseRedirectUriTest()
        {
            // TODO unit test for the property 'KratosSelfserviceMethodsOidcConfigBaseRedirectUri'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceMethodsOidcConfigProviders'
        /// </summary>
        [Fact]
        public void KratosSelfserviceMethodsOidcConfigProvidersTest()
        {
            // TODO unit test for the property 'KratosSelfserviceMethodsOidcConfigProviders'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceMethodsOidcEnabled'
        /// </summary>
        [Fact]
        public void KratosSelfserviceMethodsOidcEnabledTest()
        {
            // TODO unit test for the property 'KratosSelfserviceMethodsOidcEnabled'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceMethodsPasswordConfigHaveibeenpwnedEnabled'
        /// </summary>
        [Fact]
        public void KratosSelfserviceMethodsPasswordConfigHaveibeenpwnedEnabledTest()
        {
            // TODO unit test for the property 'KratosSelfserviceMethodsPasswordConfigHaveibeenpwnedEnabled'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceMethodsPasswordConfigIdentifierSimilarityCheckEnabled'
        /// </summary>
        [Fact]
        public void KratosSelfserviceMethodsPasswordConfigIdentifierSimilarityCheckEnabledTest()
        {
            // TODO unit test for the property 'KratosSelfserviceMethodsPasswordConfigIdentifierSimilarityCheckEnabled'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceMethodsPasswordConfigIgnoreNetworkErrors'
        /// </summary>
        [Fact]
        public void KratosSelfserviceMethodsPasswordConfigIgnoreNetworkErrorsTest()
        {
            // TODO unit test for the property 'KratosSelfserviceMethodsPasswordConfigIgnoreNetworkErrors'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceMethodsPasswordConfigMaxBreaches'
        /// </summary>
        [Fact]
        public void KratosSelfserviceMethodsPasswordConfigMaxBreachesTest()
        {
            // TODO unit test for the property 'KratosSelfserviceMethodsPasswordConfigMaxBreaches'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceMethodsPasswordConfigMinPasswordLength'
        /// </summary>
        [Fact]
        public void KratosSelfserviceMethodsPasswordConfigMinPasswordLengthTest()
        {
            // TODO unit test for the property 'KratosSelfserviceMethodsPasswordConfigMinPasswordLength'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceMethodsPasswordEnabled'
        /// </summary>
        [Fact]
        public void KratosSelfserviceMethodsPasswordEnabledTest()
        {
            // TODO unit test for the property 'KratosSelfserviceMethodsPasswordEnabled'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceMethodsProfileEnabled'
        /// </summary>
        [Fact]
        public void KratosSelfserviceMethodsProfileEnabledTest()
        {
            // TODO unit test for the property 'KratosSelfserviceMethodsProfileEnabled'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceMethodsTotpConfigIssuer'
        /// </summary>
        [Fact]
        public void KratosSelfserviceMethodsTotpConfigIssuerTest()
        {
            // TODO unit test for the property 'KratosSelfserviceMethodsTotpConfigIssuer'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceMethodsTotpEnabled'
        /// </summary>
        [Fact]
        public void KratosSelfserviceMethodsTotpEnabledTest()
        {
            // TODO unit test for the property 'KratosSelfserviceMethodsTotpEnabled'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceMethodsWebauthnConfigPasswordless'
        /// </summary>
        [Fact]
        public void KratosSelfserviceMethodsWebauthnConfigPasswordlessTest()
        {
            // TODO unit test for the property 'KratosSelfserviceMethodsWebauthnConfigPasswordless'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceMethodsWebauthnConfigRpDisplayName'
        /// </summary>
        [Fact]
        public void KratosSelfserviceMethodsWebauthnConfigRpDisplayNameTest()
        {
            // TODO unit test for the property 'KratosSelfserviceMethodsWebauthnConfigRpDisplayName'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceMethodsWebauthnConfigRpIcon'
        /// </summary>
        [Fact]
        public void KratosSelfserviceMethodsWebauthnConfigRpIconTest()
        {
            // TODO unit test for the property 'KratosSelfserviceMethodsWebauthnConfigRpIcon'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceMethodsWebauthnConfigRpId'
        /// </summary>
        [Fact]
        public void KratosSelfserviceMethodsWebauthnConfigRpIdTest()
        {
            // TODO unit test for the property 'KratosSelfserviceMethodsWebauthnConfigRpId'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceMethodsWebauthnConfigRpOrigin'
        /// </summary>
        [Fact]
        public void KratosSelfserviceMethodsWebauthnConfigRpOriginTest()
        {
            // TODO unit test for the property 'KratosSelfserviceMethodsWebauthnConfigRpOrigin'
        }
        /// <summary>
        /// Test the property 'KratosSelfserviceMethodsWebauthnEnabled'
        /// </summary>
        [Fact]
        public void KratosSelfserviceMethodsWebauthnEnabledTest()
        {
            // TODO unit test for the property 'KratosSelfserviceMethodsWebauthnEnabled'
        }
        /// <summary>
        /// Test the property 'KratosSessionCookiePersistent'
        /// </summary>
        [Fact]
        public void KratosSessionCookiePersistentTest()
        {
            // TODO unit test for the property 'KratosSessionCookiePersistent'
        }
        /// <summary>
        /// Test the property 'KratosSessionCookieSameSite'
        /// </summary>
        [Fact]
        public void KratosSessionCookieSameSiteTest()
        {
            // TODO unit test for the property 'KratosSessionCookieSameSite'
        }
        /// <summary>
        /// Test the property 'KratosSessionLifespan'
        /// </summary>
        [Fact]
        public void KratosSessionLifespanTest()
        {
            // TODO unit test for the property 'KratosSessionLifespan'
        }
        /// <summary>
        /// Test the property 'KratosSessionWhoamiRequiredAal'
        /// </summary>
        [Fact]
        public void KratosSessionWhoamiRequiredAalTest()
        {
            // TODO unit test for the property 'KratosSessionWhoamiRequiredAal'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'Production'
        /// </summary>
        [Fact]
        public void ProductionTest()
        {
            // TODO unit test for the property 'Production'
        }
        /// <summary>
        /// Test the property 'ProjectId'
        /// </summary>
        [Fact]
        public void ProjectIdTest()
        {
            // TODO unit test for the property 'ProjectId'
        }
        /// <summary>
        /// Test the property 'UpdatedAt'
        /// </summary>
        [Fact]
        public void UpdatedAtTest()
        {
            // TODO unit test for the property 'UpdatedAt'
        }

    }

}
