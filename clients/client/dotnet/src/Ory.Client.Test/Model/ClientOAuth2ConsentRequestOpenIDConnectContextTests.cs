/*
 * Ory APIs
 *
 * Documentation for all public and administrative Ory APIs. Administrative APIs can only be accessed with a valid Personal Access Token. Public APIs are mostly used in browsers. 
 *
 * The version of the OpenAPI document: v1.1.25
 * Contact: support@ory.sh
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Ory.Client.Api;
using Ory.Client.Model;
using Ory.Client.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Ory.Client.Test.Model
{
    /// <summary>
    ///  Class for testing ClientOAuth2ConsentRequestOpenIDConnectContext
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ClientOAuth2ConsentRequestOpenIDConnectContextTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ClientOAuth2ConsentRequestOpenIDConnectContext
        //private ClientOAuth2ConsentRequestOpenIDConnectContext instance;

        public ClientOAuth2ConsentRequestOpenIDConnectContextTests()
        {
            // TODO uncomment below to create an instance of ClientOAuth2ConsentRequestOpenIDConnectContext
            //instance = new ClientOAuth2ConsentRequestOpenIDConnectContext();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ClientOAuth2ConsentRequestOpenIDConnectContext
        /// </summary>
        [Fact]
        public void ClientOAuth2ConsentRequestOpenIDConnectContextInstanceTest()
        {
            // TODO uncomment below to test "IsType" ClientOAuth2ConsentRequestOpenIDConnectContext
            //Assert.IsType<ClientOAuth2ConsentRequestOpenIDConnectContext>(instance);
        }


        /// <summary>
        /// Test the property 'AcrValues'
        /// </summary>
        [Fact]
        public void AcrValuesTest()
        {
            // TODO unit test for the property 'AcrValues'
        }
        /// <summary>
        /// Test the property 'Display'
        /// </summary>
        [Fact]
        public void DisplayTest()
        {
            // TODO unit test for the property 'Display'
        }
        /// <summary>
        /// Test the property 'IdTokenHintClaims'
        /// </summary>
        [Fact]
        public void IdTokenHintClaimsTest()
        {
            // TODO unit test for the property 'IdTokenHintClaims'
        }
        /// <summary>
        /// Test the property 'LoginHint'
        /// </summary>
        [Fact]
        public void LoginHintTest()
        {
            // TODO unit test for the property 'LoginHint'
        }
        /// <summary>
        /// Test the property 'UiLocales'
        /// </summary>
        [Fact]
        public void UiLocalesTest()
        {
            // TODO unit test for the property 'UiLocales'
        }

    }

}
