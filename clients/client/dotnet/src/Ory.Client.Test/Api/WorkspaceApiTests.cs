/*
 * Ory APIs
 *
 * Documentation for all public and administrative Ory APIs. Administrative APIs can only be accessed with a valid Personal Access Token. Public APIs are mostly used in browsers. 
 *
 * The version of the OpenAPI document: v1.12.1
 * Contact: support@ory.sh
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Ory.Client.Client;
using Ory.Client.Api;
// uncomment below to import models
//using Ory.Client.Model;

namespace Ory.Client.Test.Api
{
    /// <summary>
    ///  Class for testing WorkspaceApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class WorkspaceApiTests : IDisposable
    {
        private WorkspaceApi instance;

        public WorkspaceApiTests()
        {
            instance = new WorkspaceApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of WorkspaceApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' WorkspaceApi
            //Assert.IsType<WorkspaceApi>(instance);
        }

        /// <summary>
        /// Test CreateWorkspace
        /// </summary>
        [Fact]
        public void CreateWorkspaceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ClientCreateWorkspaceBody? clientCreateWorkspaceBody = null;
            //var response = instance.CreateWorkspace(clientCreateWorkspaceBody);
            //Assert.IsType<ClientWorkspace>(response);
        }

        /// <summary>
        /// Test GetWorkspace
        /// </summary>
        [Fact]
        public void GetWorkspaceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string workspace = null;
            //var response = instance.GetWorkspace(workspace);
            //Assert.IsType<ClientWorkspace>(response);
        }

        /// <summary>
        /// Test ListWorkspaceProjects
        /// </summary>
        [Fact]
        public void ListWorkspaceProjectsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string workspace = null;
            //var response = instance.ListWorkspaceProjects(workspace);
            //Assert.IsType<ClientListWorkspaceProjects>(response);
        }

        /// <summary>
        /// Test ListWorkspaces
        /// </summary>
        [Fact]
        public void ListWorkspacesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? pageSize = null;
            //string? pageToken = null;
            //var response = instance.ListWorkspaces(pageSize, pageToken);
            //Assert.IsType<ClientListWorkspaces>(response);
        }

        /// <summary>
        /// Test UpdateWorkspace
        /// </summary>
        [Fact]
        public void UpdateWorkspaceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string workspace = null;
            //ClientUpdateWorkspaceBody? clientUpdateWorkspaceBody = null;
            //var response = instance.UpdateWorkspace(workspace, clientUpdateWorkspaceBody);
            //Assert.IsType<ClientWorkspace>(response);
        }
    }
}
