/*
 * Ory APIs
 *
 * Documentation for all public and administrative Ory APIs. Administrative APIs can only be accessed with a valid Personal Access Token. Public APIs are mostly used in browsers. 
 *
 * The version of the OpenAPI document: v1.12.1
 * Contact: support@ory.sh
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AccountExperienceConfiguration {
    #[serde(rename = "account_experience_theme_stylesheet", skip_serializing_if = "Option::is_none")]
    pub account_experience_theme_stylesheet: Option<String>,
    #[serde(rename = "kratos_selfservice_flows_recovery_enabled", skip_serializing_if = "Option::is_none")]
    pub kratos_selfservice_flows_recovery_enabled: Option<bool>,
    #[serde(rename = "kratos_selfservice_flows_registration_enabled", skip_serializing_if = "Option::is_none")]
    pub kratos_selfservice_flows_registration_enabled: Option<bool>,
    #[serde(rename = "kratos_selfservice_flows_verification_enabled", skip_serializing_if = "Option::is_none")]
    pub kratos_selfservice_flows_verification_enabled: Option<bool>,
    #[serde(rename = "organization_map", skip_serializing_if = "Option::is_none")]
    pub organization_map: Option<std::collections::HashMap<String, String>>,
}

impl AccountExperienceConfiguration {
    pub fn new() -> AccountExperienceConfiguration {
        AccountExperienceConfiguration {
            account_experience_theme_stylesheet: None,
            kratos_selfservice_flows_recovery_enabled: None,
            kratos_selfservice_flows_registration_enabled: None,
            kratos_selfservice_flows_verification_enabled: None,
            organization_map: None,
        }
    }
}

