# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule Client.Model.Identity do
  @moduledoc """
  An identity can be a real human, a service, an IoT device - everything that can be described as an \"actor\" in a system.
  """

  @derive [Poison.Encoder]
  defstruct [
    :"created_at",
    :"credentials",
    :"id",
    :"recovery_addresses",
    :"schema_id",
    :"schema_url",
    :"state",
    :"state_changed_at",
    :"traits",
    :"updated_at",
    :"verifiable_addresses"
  ]

  @type t :: %__MODULE__{
    :"created_at" => DateTime.t | nil,
    :"credentials" => %{optional(String.t) => Client.Model.IdentityCredentials.t} | nil,
    :"id" => String.t,
    :"recovery_addresses" => [Client.Model.RecoveryAddress.t] | nil,
    :"schema_id" => String.t,
    :"schema_url" => String.t,
    :"state" => Client.Model.IdentityState.t | nil,
    :"state_changed_at" => DateTime.t | nil,
    :"traits" => AnyType | nil,
    :"updated_at" => DateTime.t | nil,
    :"verifiable_addresses" => [Client.Model.VerifiableIdentityAddress.t] | nil
  }
end

defimpl Poison.Decoder, for: Client.Model.Identity do
  import Client.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:"credentials", :map, Client.Model.IdentityCredentials, options)
    |> deserialize(:"recovery_addresses", :list, Client.Model.RecoveryAddress, options)
    |> deserialize(:"state", :struct, Client.Model.IdentityState, options)
    |> deserialize(:"traits", :struct, Client.Model.AnyType, options)
    |> deserialize(:"verifiable_addresses", :list, Client.Model.VerifiableIdentityAddress, options)
  end
end

