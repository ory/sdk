=begin
#Ory APIs

#Documentation for all public and administrative Ory APIs. Administrative APIs can only be accessed with a valid Personal Access Token. Public APIs are mostly used in browsers. 

The version of the OpenAPI document: v1.15.0
Contact: support@ory.sh
Generated by: https://openapi-generator.tech
Generator version: 7.7.0

=end

require 'date'
require 'time'

module OryClient
  class AccountExperienceThemeVariables
    attr_accessor :accent

    attr_accessor :bg_default

    attr_accessor :border_radius_branding

    attr_accessor :border_radius_buttons

    attr_accessor :border_radius_cards

    attr_accessor :border_radius_forms

    attr_accessor :border_radius_general

    attr_accessor :button_primary_bg_default

    attr_accessor :button_primary_bg_disabled

    attr_accessor :button_primary_bg_hover

    attr_accessor :button_primary_border_default

    attr_accessor :button_primary_border_disabled

    attr_accessor :button_primary_border_hover

    attr_accessor :button_primary_fg_default

    attr_accessor :button_primary_fg_disabled

    attr_accessor :button_primary_fg_hover

    attr_accessor :button_secondary_bg_default

    attr_accessor :button_secondary_bg_disabled

    attr_accessor :button_secondary_bg_hover

    attr_accessor :button_secondary_border_default

    attr_accessor :button_secondary_border_disabled

    attr_accessor :button_secondary_border_hover

    attr_accessor :button_secondary_fg_default

    attr_accessor :button_secondary_fg_disabled

    attr_accessor :button_secondary_fg_hover

    attr_accessor :button_social_bg_default

    attr_accessor :button_social_bg_disabled

    attr_accessor :button_social_bg_hover

    attr_accessor :button_social_bg_provider

    attr_accessor :button_social_border_default

    attr_accessor :button_social_border_disabled

    attr_accessor :button_social_border_hover

    attr_accessor :button_social_border_provider

    attr_accessor :button_social_fg_default

    attr_accessor :button_social_fg_disabled

    attr_accessor :button_social_fg_hover

    attr_accessor :button_social_fg_provider

    attr_accessor :created_at

    attr_accessor :dialog_bg_default

    attr_accessor :dialog_bg_subtle

    attr_accessor :dialog_border_default

    attr_accessor :dialog_fg_default

    attr_accessor :dialog_fg_mute

    attr_accessor :dialog_fg_subtle

    attr_accessor :forms_bg_default

    attr_accessor :forms_bg_disabled

    attr_accessor :forms_bg_hover

    attr_accessor :forms_border_default

    attr_accessor :forms_border_disabled

    attr_accessor :forms_border_error

    attr_accessor :forms_border_focus

    attr_accessor :forms_border_hover

    attr_accessor :forms_border_success

    attr_accessor :forms_border_warn

    attr_accessor :forms_checkbox_bg_checked

    attr_accessor :forms_checkbox_bg_default

    attr_accessor :forms_checkbox_border_checked

    attr_accessor :forms_checkbox_border_default

    attr_accessor :forms_checkbox_fg_checked

    attr_accessor :forms_checkbox_fg_default

    attr_accessor :forms_fg_default

    attr_accessor :forms_fg_error

    attr_accessor :forms_fg_mute

    attr_accessor :forms_fg_subtle

    attr_accessor :forms_fg_success

    attr_accessor :forms_fg_warn

    attr_accessor :forms_radio_bg_checked

    attr_accessor :forms_radio_bg_default

    attr_accessor :forms_radio_border_checked

    attr_accessor :forms_radio_border_default

    attr_accessor :forms_radio_fg_checked

    attr_accessor :forms_radio_fg_default

    attr_accessor :forms_toggle_bg_checked

    attr_accessor :forms_toggle_bg_default

    attr_accessor :forms_toggle_border_checked

    attr_accessor :forms_toggle_border_default

    attr_accessor :forms_toggle_fg_checked

    attr_accessor :forms_toggle_fg_default

    attr_accessor :id

    attr_accessor :links_link_default

    attr_accessor :links_link_disabled

    attr_accessor :links_link_hover

    attr_accessor :links_link_inverted_default

    attr_accessor :links_link_inverted_hover

    attr_accessor :links_link_mute_default

    attr_accessor :links_link_mute_hover

    attr_accessor :syntax_syntax

    attr_accessor :syntax_syntax_key

    attr_accessor :syntax_syntax_num

    attr_accessor :syntax_syntax_value

    attr_accessor :updated_at

    # Attribute mapping from ruby-style variable name to JSON key.
    def self.attribute_map
      {
        :'accent' => :'accent',
        :'bg_default' => :'bg-default',
        :'border_radius_branding' => :'border-radius-branding',
        :'border_radius_buttons' => :'border-radius-buttons',
        :'border_radius_cards' => :'border-radius-cards',
        :'border_radius_forms' => :'border-radius-forms',
        :'border_radius_general' => :'border-radius-general',
        :'button_primary_bg_default' => :'button-primary-bg-default',
        :'button_primary_bg_disabled' => :'button-primary-bg-disabled',
        :'button_primary_bg_hover' => :'button-primary-bg-hover',
        :'button_primary_border_default' => :'button-primary-border-default',
        :'button_primary_border_disabled' => :'button-primary-border-disabled',
        :'button_primary_border_hover' => :'button-primary-border-hover',
        :'button_primary_fg_default' => :'button-primary-fg-default',
        :'button_primary_fg_disabled' => :'button-primary-fg-disabled',
        :'button_primary_fg_hover' => :'button-primary-fg-hover',
        :'button_secondary_bg_default' => :'button-secondary-bg-default',
        :'button_secondary_bg_disabled' => :'button-secondary-bg-disabled',
        :'button_secondary_bg_hover' => :'button-secondary-bg-hover',
        :'button_secondary_border_default' => :'button-secondary-border-default',
        :'button_secondary_border_disabled' => :'button-secondary-border-disabled',
        :'button_secondary_border_hover' => :'button-secondary-border-hover',
        :'button_secondary_fg_default' => :'button-secondary-fg-default',
        :'button_secondary_fg_disabled' => :'button-secondary-fg-disabled',
        :'button_secondary_fg_hover' => :'button-secondary-fg-hover',
        :'button_social_bg_default' => :'button-social-bg-default',
        :'button_social_bg_disabled' => :'button-social-bg-disabled',
        :'button_social_bg_hover' => :'button-social-bg-hover',
        :'button_social_bg_provider' => :'button-social-bg-provider',
        :'button_social_border_default' => :'button-social-border-default',
        :'button_social_border_disabled' => :'button-social-border-disabled',
        :'button_social_border_hover' => :'button-social-border-hover',
        :'button_social_border_provider' => :'button-social-border-provider',
        :'button_social_fg_default' => :'button-social-fg-default',
        :'button_social_fg_disabled' => :'button-social-fg-disabled',
        :'button_social_fg_hover' => :'button-social-fg-hover',
        :'button_social_fg_provider' => :'button-social-fg-provider',
        :'created_at' => :'created_at',
        :'dialog_bg_default' => :'dialog-bg-default',
        :'dialog_bg_subtle' => :'dialog-bg-subtle',
        :'dialog_border_default' => :'dialog-border-default',
        :'dialog_fg_default' => :'dialog-fg-default',
        :'dialog_fg_mute' => :'dialog-fg-mute',
        :'dialog_fg_subtle' => :'dialog-fg-subtle',
        :'forms_bg_default' => :'forms-bg-default',
        :'forms_bg_disabled' => :'forms-bg-disabled',
        :'forms_bg_hover' => :'forms-bg-hover',
        :'forms_border_default' => :'forms-border-default',
        :'forms_border_disabled' => :'forms-border-disabled',
        :'forms_border_error' => :'forms-border-error',
        :'forms_border_focus' => :'forms-border-focus',
        :'forms_border_hover' => :'forms-border-hover',
        :'forms_border_success' => :'forms-border-success',
        :'forms_border_warn' => :'forms-border-warn',
        :'forms_checkbox_bg_checked' => :'forms-checkbox-bg-checked',
        :'forms_checkbox_bg_default' => :'forms-checkbox-bg-default',
        :'forms_checkbox_border_checked' => :'forms-checkbox-border-checked',
        :'forms_checkbox_border_default' => :'forms-checkbox-border-default',
        :'forms_checkbox_fg_checked' => :'forms-checkbox-fg-checked',
        :'forms_checkbox_fg_default' => :'forms-checkbox-fg-default',
        :'forms_fg_default' => :'forms-fg-default',
        :'forms_fg_error' => :'forms-fg-error',
        :'forms_fg_mute' => :'forms-fg-mute',
        :'forms_fg_subtle' => :'forms-fg-subtle',
        :'forms_fg_success' => :'forms-fg-success',
        :'forms_fg_warn' => :'forms-fg-warn',
        :'forms_radio_bg_checked' => :'forms-radio-bg-checked',
        :'forms_radio_bg_default' => :'forms-radio-bg-default',
        :'forms_radio_border_checked' => :'forms-radio-border-checked',
        :'forms_radio_border_default' => :'forms-radio-border-default',
        :'forms_radio_fg_checked' => :'forms-radio-fg-checked',
        :'forms_radio_fg_default' => :'forms-radio-fg-default',
        :'forms_toggle_bg_checked' => :'forms-toggle-bg-checked',
        :'forms_toggle_bg_default' => :'forms-toggle-bg-default',
        :'forms_toggle_border_checked' => :'forms-toggle-border-checked',
        :'forms_toggle_border_default' => :'forms-toggle-border-default',
        :'forms_toggle_fg_checked' => :'forms-toggle-fg-checked',
        :'forms_toggle_fg_default' => :'forms-toggle-fg-default',
        :'id' => :'id',
        :'links_link_default' => :'links-link-default',
        :'links_link_disabled' => :'links-link-disabled',
        :'links_link_hover' => :'links-link-hover',
        :'links_link_inverted_default' => :'links-link-inverted-default',
        :'links_link_inverted_hover' => :'links-link-inverted-hover',
        :'links_link_mute_default' => :'links-link-mute-default',
        :'links_link_mute_hover' => :'links-link-mute-hover',
        :'syntax_syntax' => :'syntax-syntax',
        :'syntax_syntax_key' => :'syntax-syntax-key',
        :'syntax_syntax_num' => :'syntax-syntax-num',
        :'syntax_syntax_value' => :'syntax-syntax-value',
        :'updated_at' => :'updated_at'
      }
    end

    # Returns all the JSON keys this model knows about
    def self.acceptable_attributes
      attribute_map.values
    end

    # Attribute type mapping.
    def self.openapi_types
      {
        :'accent' => :'String',
        :'bg_default' => :'String',
        :'border_radius_branding' => :'String',
        :'border_radius_buttons' => :'String',
        :'border_radius_cards' => :'String',
        :'border_radius_forms' => :'String',
        :'border_radius_general' => :'String',
        :'button_primary_bg_default' => :'String',
        :'button_primary_bg_disabled' => :'String',
        :'button_primary_bg_hover' => :'String',
        :'button_primary_border_default' => :'String',
        :'button_primary_border_disabled' => :'String',
        :'button_primary_border_hover' => :'String',
        :'button_primary_fg_default' => :'String',
        :'button_primary_fg_disabled' => :'String',
        :'button_primary_fg_hover' => :'String',
        :'button_secondary_bg_default' => :'String',
        :'button_secondary_bg_disabled' => :'String',
        :'button_secondary_bg_hover' => :'String',
        :'button_secondary_border_default' => :'String',
        :'button_secondary_border_disabled' => :'String',
        :'button_secondary_border_hover' => :'String',
        :'button_secondary_fg_default' => :'String',
        :'button_secondary_fg_disabled' => :'String',
        :'button_secondary_fg_hover' => :'String',
        :'button_social_bg_default' => :'String',
        :'button_social_bg_disabled' => :'String',
        :'button_social_bg_hover' => :'String',
        :'button_social_bg_provider' => :'String',
        :'button_social_border_default' => :'String',
        :'button_social_border_disabled' => :'String',
        :'button_social_border_hover' => :'String',
        :'button_social_border_provider' => :'String',
        :'button_social_fg_default' => :'String',
        :'button_social_fg_disabled' => :'String',
        :'button_social_fg_hover' => :'String',
        :'button_social_fg_provider' => :'String',
        :'created_at' => :'Time',
        :'dialog_bg_default' => :'String',
        :'dialog_bg_subtle' => :'String',
        :'dialog_border_default' => :'String',
        :'dialog_fg_default' => :'String',
        :'dialog_fg_mute' => :'String',
        :'dialog_fg_subtle' => :'String',
        :'forms_bg_default' => :'String',
        :'forms_bg_disabled' => :'String',
        :'forms_bg_hover' => :'String',
        :'forms_border_default' => :'String',
        :'forms_border_disabled' => :'String',
        :'forms_border_error' => :'String',
        :'forms_border_focus' => :'String',
        :'forms_border_hover' => :'String',
        :'forms_border_success' => :'String',
        :'forms_border_warn' => :'String',
        :'forms_checkbox_bg_checked' => :'String',
        :'forms_checkbox_bg_default' => :'String',
        :'forms_checkbox_border_checked' => :'String',
        :'forms_checkbox_border_default' => :'String',
        :'forms_checkbox_fg_checked' => :'String',
        :'forms_checkbox_fg_default' => :'String',
        :'forms_fg_default' => :'String',
        :'forms_fg_error' => :'String',
        :'forms_fg_mute' => :'String',
        :'forms_fg_subtle' => :'String',
        :'forms_fg_success' => :'String',
        :'forms_fg_warn' => :'String',
        :'forms_radio_bg_checked' => :'String',
        :'forms_radio_bg_default' => :'String',
        :'forms_radio_border_checked' => :'String',
        :'forms_radio_border_default' => :'String',
        :'forms_radio_fg_checked' => :'String',
        :'forms_radio_fg_default' => :'String',
        :'forms_toggle_bg_checked' => :'String',
        :'forms_toggle_bg_default' => :'String',
        :'forms_toggle_border_checked' => :'String',
        :'forms_toggle_border_default' => :'String',
        :'forms_toggle_fg_checked' => :'String',
        :'forms_toggle_fg_default' => :'String',
        :'id' => :'String',
        :'links_link_default' => :'String',
        :'links_link_disabled' => :'String',
        :'links_link_hover' => :'String',
        :'links_link_inverted_default' => :'String',
        :'links_link_inverted_hover' => :'String',
        :'links_link_mute_default' => :'String',
        :'links_link_mute_hover' => :'String',
        :'syntax_syntax' => :'String',
        :'syntax_syntax_key' => :'String',
        :'syntax_syntax_num' => :'String',
        :'syntax_syntax_value' => :'String',
        :'updated_at' => :'Time'
      }
    end

    # List of attributes with nullable: true
    def self.openapi_nullable
      Set.new([
      ])
    end

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(attributes = {})
      if (!attributes.is_a?(Hash))
        fail ArgumentError, "The input argument (attributes) must be a hash in `OryClient::AccountExperienceThemeVariables` initialize method"
      end

      # check to see if the attribute exists and convert string to symbol for hash key
      attributes = attributes.each_with_object({}) { |(k, v), h|
        if (!self.class.attribute_map.key?(k.to_sym))
          fail ArgumentError, "`#{k}` is not a valid attribute in `OryClient::AccountExperienceThemeVariables`. Please check the name to make sure it's valid. List of attributes: " + self.class.attribute_map.keys.inspect
        end
        h[k.to_sym] = v
      }

      if attributes.key?(:'accent')
        self.accent = attributes[:'accent']
      end

      if attributes.key?(:'bg_default')
        self.bg_default = attributes[:'bg_default']
      end

      if attributes.key?(:'border_radius_branding')
        self.border_radius_branding = attributes[:'border_radius_branding']
      end

      if attributes.key?(:'border_radius_buttons')
        self.border_radius_buttons = attributes[:'border_radius_buttons']
      end

      if attributes.key?(:'border_radius_cards')
        self.border_radius_cards = attributes[:'border_radius_cards']
      end

      if attributes.key?(:'border_radius_forms')
        self.border_radius_forms = attributes[:'border_radius_forms']
      end

      if attributes.key?(:'border_radius_general')
        self.border_radius_general = attributes[:'border_radius_general']
      end

      if attributes.key?(:'button_primary_bg_default')
        self.button_primary_bg_default = attributes[:'button_primary_bg_default']
      end

      if attributes.key?(:'button_primary_bg_disabled')
        self.button_primary_bg_disabled = attributes[:'button_primary_bg_disabled']
      end

      if attributes.key?(:'button_primary_bg_hover')
        self.button_primary_bg_hover = attributes[:'button_primary_bg_hover']
      end

      if attributes.key?(:'button_primary_border_default')
        self.button_primary_border_default = attributes[:'button_primary_border_default']
      end

      if attributes.key?(:'button_primary_border_disabled')
        self.button_primary_border_disabled = attributes[:'button_primary_border_disabled']
      end

      if attributes.key?(:'button_primary_border_hover')
        self.button_primary_border_hover = attributes[:'button_primary_border_hover']
      end

      if attributes.key?(:'button_primary_fg_default')
        self.button_primary_fg_default = attributes[:'button_primary_fg_default']
      end

      if attributes.key?(:'button_primary_fg_disabled')
        self.button_primary_fg_disabled = attributes[:'button_primary_fg_disabled']
      end

      if attributes.key?(:'button_primary_fg_hover')
        self.button_primary_fg_hover = attributes[:'button_primary_fg_hover']
      end

      if attributes.key?(:'button_secondary_bg_default')
        self.button_secondary_bg_default = attributes[:'button_secondary_bg_default']
      end

      if attributes.key?(:'button_secondary_bg_disabled')
        self.button_secondary_bg_disabled = attributes[:'button_secondary_bg_disabled']
      end

      if attributes.key?(:'button_secondary_bg_hover')
        self.button_secondary_bg_hover = attributes[:'button_secondary_bg_hover']
      end

      if attributes.key?(:'button_secondary_border_default')
        self.button_secondary_border_default = attributes[:'button_secondary_border_default']
      end

      if attributes.key?(:'button_secondary_border_disabled')
        self.button_secondary_border_disabled = attributes[:'button_secondary_border_disabled']
      end

      if attributes.key?(:'button_secondary_border_hover')
        self.button_secondary_border_hover = attributes[:'button_secondary_border_hover']
      end

      if attributes.key?(:'button_secondary_fg_default')
        self.button_secondary_fg_default = attributes[:'button_secondary_fg_default']
      end

      if attributes.key?(:'button_secondary_fg_disabled')
        self.button_secondary_fg_disabled = attributes[:'button_secondary_fg_disabled']
      end

      if attributes.key?(:'button_secondary_fg_hover')
        self.button_secondary_fg_hover = attributes[:'button_secondary_fg_hover']
      end

      if attributes.key?(:'button_social_bg_default')
        self.button_social_bg_default = attributes[:'button_social_bg_default']
      end

      if attributes.key?(:'button_social_bg_disabled')
        self.button_social_bg_disabled = attributes[:'button_social_bg_disabled']
      end

      if attributes.key?(:'button_social_bg_hover')
        self.button_social_bg_hover = attributes[:'button_social_bg_hover']
      end

      if attributes.key?(:'button_social_bg_provider')
        self.button_social_bg_provider = attributes[:'button_social_bg_provider']
      end

      if attributes.key?(:'button_social_border_default')
        self.button_social_border_default = attributes[:'button_social_border_default']
      end

      if attributes.key?(:'button_social_border_disabled')
        self.button_social_border_disabled = attributes[:'button_social_border_disabled']
      end

      if attributes.key?(:'button_social_border_hover')
        self.button_social_border_hover = attributes[:'button_social_border_hover']
      end

      if attributes.key?(:'button_social_border_provider')
        self.button_social_border_provider = attributes[:'button_social_border_provider']
      end

      if attributes.key?(:'button_social_fg_default')
        self.button_social_fg_default = attributes[:'button_social_fg_default']
      end

      if attributes.key?(:'button_social_fg_disabled')
        self.button_social_fg_disabled = attributes[:'button_social_fg_disabled']
      end

      if attributes.key?(:'button_social_fg_hover')
        self.button_social_fg_hover = attributes[:'button_social_fg_hover']
      end

      if attributes.key?(:'button_social_fg_provider')
        self.button_social_fg_provider = attributes[:'button_social_fg_provider']
      end

      if attributes.key?(:'created_at')
        self.created_at = attributes[:'created_at']
      end

      if attributes.key?(:'dialog_bg_default')
        self.dialog_bg_default = attributes[:'dialog_bg_default']
      end

      if attributes.key?(:'dialog_bg_subtle')
        self.dialog_bg_subtle = attributes[:'dialog_bg_subtle']
      end

      if attributes.key?(:'dialog_border_default')
        self.dialog_border_default = attributes[:'dialog_border_default']
      end

      if attributes.key?(:'dialog_fg_default')
        self.dialog_fg_default = attributes[:'dialog_fg_default']
      end

      if attributes.key?(:'dialog_fg_mute')
        self.dialog_fg_mute = attributes[:'dialog_fg_mute']
      end

      if attributes.key?(:'dialog_fg_subtle')
        self.dialog_fg_subtle = attributes[:'dialog_fg_subtle']
      end

      if attributes.key?(:'forms_bg_default')
        self.forms_bg_default = attributes[:'forms_bg_default']
      end

      if attributes.key?(:'forms_bg_disabled')
        self.forms_bg_disabled = attributes[:'forms_bg_disabled']
      end

      if attributes.key?(:'forms_bg_hover')
        self.forms_bg_hover = attributes[:'forms_bg_hover']
      end

      if attributes.key?(:'forms_border_default')
        self.forms_border_default = attributes[:'forms_border_default']
      end

      if attributes.key?(:'forms_border_disabled')
        self.forms_border_disabled = attributes[:'forms_border_disabled']
      end

      if attributes.key?(:'forms_border_error')
        self.forms_border_error = attributes[:'forms_border_error']
      end

      if attributes.key?(:'forms_border_focus')
        self.forms_border_focus = attributes[:'forms_border_focus']
      end

      if attributes.key?(:'forms_border_hover')
        self.forms_border_hover = attributes[:'forms_border_hover']
      end

      if attributes.key?(:'forms_border_success')
        self.forms_border_success = attributes[:'forms_border_success']
      end

      if attributes.key?(:'forms_border_warn')
        self.forms_border_warn = attributes[:'forms_border_warn']
      end

      if attributes.key?(:'forms_checkbox_bg_checked')
        self.forms_checkbox_bg_checked = attributes[:'forms_checkbox_bg_checked']
      end

      if attributes.key?(:'forms_checkbox_bg_default')
        self.forms_checkbox_bg_default = attributes[:'forms_checkbox_bg_default']
      end

      if attributes.key?(:'forms_checkbox_border_checked')
        self.forms_checkbox_border_checked = attributes[:'forms_checkbox_border_checked']
      end

      if attributes.key?(:'forms_checkbox_border_default')
        self.forms_checkbox_border_default = attributes[:'forms_checkbox_border_default']
      end

      if attributes.key?(:'forms_checkbox_fg_checked')
        self.forms_checkbox_fg_checked = attributes[:'forms_checkbox_fg_checked']
      end

      if attributes.key?(:'forms_checkbox_fg_default')
        self.forms_checkbox_fg_default = attributes[:'forms_checkbox_fg_default']
      end

      if attributes.key?(:'forms_fg_default')
        self.forms_fg_default = attributes[:'forms_fg_default']
      end

      if attributes.key?(:'forms_fg_error')
        self.forms_fg_error = attributes[:'forms_fg_error']
      end

      if attributes.key?(:'forms_fg_mute')
        self.forms_fg_mute = attributes[:'forms_fg_mute']
      end

      if attributes.key?(:'forms_fg_subtle')
        self.forms_fg_subtle = attributes[:'forms_fg_subtle']
      end

      if attributes.key?(:'forms_fg_success')
        self.forms_fg_success = attributes[:'forms_fg_success']
      end

      if attributes.key?(:'forms_fg_warn')
        self.forms_fg_warn = attributes[:'forms_fg_warn']
      end

      if attributes.key?(:'forms_radio_bg_checked')
        self.forms_radio_bg_checked = attributes[:'forms_radio_bg_checked']
      end

      if attributes.key?(:'forms_radio_bg_default')
        self.forms_radio_bg_default = attributes[:'forms_radio_bg_default']
      end

      if attributes.key?(:'forms_radio_border_checked')
        self.forms_radio_border_checked = attributes[:'forms_radio_border_checked']
      end

      if attributes.key?(:'forms_radio_border_default')
        self.forms_radio_border_default = attributes[:'forms_radio_border_default']
      end

      if attributes.key?(:'forms_radio_fg_checked')
        self.forms_radio_fg_checked = attributes[:'forms_radio_fg_checked']
      end

      if attributes.key?(:'forms_radio_fg_default')
        self.forms_radio_fg_default = attributes[:'forms_radio_fg_default']
      end

      if attributes.key?(:'forms_toggle_bg_checked')
        self.forms_toggle_bg_checked = attributes[:'forms_toggle_bg_checked']
      end

      if attributes.key?(:'forms_toggle_bg_default')
        self.forms_toggle_bg_default = attributes[:'forms_toggle_bg_default']
      end

      if attributes.key?(:'forms_toggle_border_checked')
        self.forms_toggle_border_checked = attributes[:'forms_toggle_border_checked']
      end

      if attributes.key?(:'forms_toggle_border_default')
        self.forms_toggle_border_default = attributes[:'forms_toggle_border_default']
      end

      if attributes.key?(:'forms_toggle_fg_checked')
        self.forms_toggle_fg_checked = attributes[:'forms_toggle_fg_checked']
      end

      if attributes.key?(:'forms_toggle_fg_default')
        self.forms_toggle_fg_default = attributes[:'forms_toggle_fg_default']
      end

      if attributes.key?(:'id')
        self.id = attributes[:'id']
      end

      if attributes.key?(:'links_link_default')
        self.links_link_default = attributes[:'links_link_default']
      end

      if attributes.key?(:'links_link_disabled')
        self.links_link_disabled = attributes[:'links_link_disabled']
      end

      if attributes.key?(:'links_link_hover')
        self.links_link_hover = attributes[:'links_link_hover']
      end

      if attributes.key?(:'links_link_inverted_default')
        self.links_link_inverted_default = attributes[:'links_link_inverted_default']
      end

      if attributes.key?(:'links_link_inverted_hover')
        self.links_link_inverted_hover = attributes[:'links_link_inverted_hover']
      end

      if attributes.key?(:'links_link_mute_default')
        self.links_link_mute_default = attributes[:'links_link_mute_default']
      end

      if attributes.key?(:'links_link_mute_hover')
        self.links_link_mute_hover = attributes[:'links_link_mute_hover']
      end

      if attributes.key?(:'syntax_syntax')
        self.syntax_syntax = attributes[:'syntax_syntax']
      end

      if attributes.key?(:'syntax_syntax_key')
        self.syntax_syntax_key = attributes[:'syntax_syntax_key']
      end

      if attributes.key?(:'syntax_syntax_num')
        self.syntax_syntax_num = attributes[:'syntax_syntax_num']
      end

      if attributes.key?(:'syntax_syntax_value')
        self.syntax_syntax_value = attributes[:'syntax_syntax_value']
      end

      if attributes.key?(:'updated_at')
        self.updated_at = attributes[:'updated_at']
      end
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties
      warn '[DEPRECATED] the `list_invalid_properties` method is obsolete'
      invalid_properties = Array.new
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid?
      warn '[DEPRECATED] the `valid?` method is obsolete'
      true
    end

    # Checks equality by comparing each attribute.
    # @param [Object] Object to be compared
    def ==(o)
      return true if self.equal?(o)
      self.class == o.class &&
          accent == o.accent &&
          bg_default == o.bg_default &&
          border_radius_branding == o.border_radius_branding &&
          border_radius_buttons == o.border_radius_buttons &&
          border_radius_cards == o.border_radius_cards &&
          border_radius_forms == o.border_radius_forms &&
          border_radius_general == o.border_radius_general &&
          button_primary_bg_default == o.button_primary_bg_default &&
          button_primary_bg_disabled == o.button_primary_bg_disabled &&
          button_primary_bg_hover == o.button_primary_bg_hover &&
          button_primary_border_default == o.button_primary_border_default &&
          button_primary_border_disabled == o.button_primary_border_disabled &&
          button_primary_border_hover == o.button_primary_border_hover &&
          button_primary_fg_default == o.button_primary_fg_default &&
          button_primary_fg_disabled == o.button_primary_fg_disabled &&
          button_primary_fg_hover == o.button_primary_fg_hover &&
          button_secondary_bg_default == o.button_secondary_bg_default &&
          button_secondary_bg_disabled == o.button_secondary_bg_disabled &&
          button_secondary_bg_hover == o.button_secondary_bg_hover &&
          button_secondary_border_default == o.button_secondary_border_default &&
          button_secondary_border_disabled == o.button_secondary_border_disabled &&
          button_secondary_border_hover == o.button_secondary_border_hover &&
          button_secondary_fg_default == o.button_secondary_fg_default &&
          button_secondary_fg_disabled == o.button_secondary_fg_disabled &&
          button_secondary_fg_hover == o.button_secondary_fg_hover &&
          button_social_bg_default == o.button_social_bg_default &&
          button_social_bg_disabled == o.button_social_bg_disabled &&
          button_social_bg_hover == o.button_social_bg_hover &&
          button_social_bg_provider == o.button_social_bg_provider &&
          button_social_border_default == o.button_social_border_default &&
          button_social_border_disabled == o.button_social_border_disabled &&
          button_social_border_hover == o.button_social_border_hover &&
          button_social_border_provider == o.button_social_border_provider &&
          button_social_fg_default == o.button_social_fg_default &&
          button_social_fg_disabled == o.button_social_fg_disabled &&
          button_social_fg_hover == o.button_social_fg_hover &&
          button_social_fg_provider == o.button_social_fg_provider &&
          created_at == o.created_at &&
          dialog_bg_default == o.dialog_bg_default &&
          dialog_bg_subtle == o.dialog_bg_subtle &&
          dialog_border_default == o.dialog_border_default &&
          dialog_fg_default == o.dialog_fg_default &&
          dialog_fg_mute == o.dialog_fg_mute &&
          dialog_fg_subtle == o.dialog_fg_subtle &&
          forms_bg_default == o.forms_bg_default &&
          forms_bg_disabled == o.forms_bg_disabled &&
          forms_bg_hover == o.forms_bg_hover &&
          forms_border_default == o.forms_border_default &&
          forms_border_disabled == o.forms_border_disabled &&
          forms_border_error == o.forms_border_error &&
          forms_border_focus == o.forms_border_focus &&
          forms_border_hover == o.forms_border_hover &&
          forms_border_success == o.forms_border_success &&
          forms_border_warn == o.forms_border_warn &&
          forms_checkbox_bg_checked == o.forms_checkbox_bg_checked &&
          forms_checkbox_bg_default == o.forms_checkbox_bg_default &&
          forms_checkbox_border_checked == o.forms_checkbox_border_checked &&
          forms_checkbox_border_default == o.forms_checkbox_border_default &&
          forms_checkbox_fg_checked == o.forms_checkbox_fg_checked &&
          forms_checkbox_fg_default == o.forms_checkbox_fg_default &&
          forms_fg_default == o.forms_fg_default &&
          forms_fg_error == o.forms_fg_error &&
          forms_fg_mute == o.forms_fg_mute &&
          forms_fg_subtle == o.forms_fg_subtle &&
          forms_fg_success == o.forms_fg_success &&
          forms_fg_warn == o.forms_fg_warn &&
          forms_radio_bg_checked == o.forms_radio_bg_checked &&
          forms_radio_bg_default == o.forms_radio_bg_default &&
          forms_radio_border_checked == o.forms_radio_border_checked &&
          forms_radio_border_default == o.forms_radio_border_default &&
          forms_radio_fg_checked == o.forms_radio_fg_checked &&
          forms_radio_fg_default == o.forms_radio_fg_default &&
          forms_toggle_bg_checked == o.forms_toggle_bg_checked &&
          forms_toggle_bg_default == o.forms_toggle_bg_default &&
          forms_toggle_border_checked == o.forms_toggle_border_checked &&
          forms_toggle_border_default == o.forms_toggle_border_default &&
          forms_toggle_fg_checked == o.forms_toggle_fg_checked &&
          forms_toggle_fg_default == o.forms_toggle_fg_default &&
          id == o.id &&
          links_link_default == o.links_link_default &&
          links_link_disabled == o.links_link_disabled &&
          links_link_hover == o.links_link_hover &&
          links_link_inverted_default == o.links_link_inverted_default &&
          links_link_inverted_hover == o.links_link_inverted_hover &&
          links_link_mute_default == o.links_link_mute_default &&
          links_link_mute_hover == o.links_link_mute_hover &&
          syntax_syntax == o.syntax_syntax &&
          syntax_syntax_key == o.syntax_syntax_key &&
          syntax_syntax_num == o.syntax_syntax_num &&
          syntax_syntax_value == o.syntax_syntax_value &&
          updated_at == o.updated_at
    end

    # @see the `==` method
    # @param [Object] Object to be compared
    def eql?(o)
      self == o
    end

    # Calculates hash code according to all attributes.
    # @return [Integer] Hash code
    def hash
      [accent, bg_default, border_radius_branding, border_radius_buttons, border_radius_cards, border_radius_forms, border_radius_general, button_primary_bg_default, button_primary_bg_disabled, button_primary_bg_hover, button_primary_border_default, button_primary_border_disabled, button_primary_border_hover, button_primary_fg_default, button_primary_fg_disabled, button_primary_fg_hover, button_secondary_bg_default, button_secondary_bg_disabled, button_secondary_bg_hover, button_secondary_border_default, button_secondary_border_disabled, button_secondary_border_hover, button_secondary_fg_default, button_secondary_fg_disabled, button_secondary_fg_hover, button_social_bg_default, button_social_bg_disabled, button_social_bg_hover, button_social_bg_provider, button_social_border_default, button_social_border_disabled, button_social_border_hover, button_social_border_provider, button_social_fg_default, button_social_fg_disabled, button_social_fg_hover, button_social_fg_provider, created_at, dialog_bg_default, dialog_bg_subtle, dialog_border_default, dialog_fg_default, dialog_fg_mute, dialog_fg_subtle, forms_bg_default, forms_bg_disabled, forms_bg_hover, forms_border_default, forms_border_disabled, forms_border_error, forms_border_focus, forms_border_hover, forms_border_success, forms_border_warn, forms_checkbox_bg_checked, forms_checkbox_bg_default, forms_checkbox_border_checked, forms_checkbox_border_default, forms_checkbox_fg_checked, forms_checkbox_fg_default, forms_fg_default, forms_fg_error, forms_fg_mute, forms_fg_subtle, forms_fg_success, forms_fg_warn, forms_radio_bg_checked, forms_radio_bg_default, forms_radio_border_checked, forms_radio_border_default, forms_radio_fg_checked, forms_radio_fg_default, forms_toggle_bg_checked, forms_toggle_bg_default, forms_toggle_border_checked, forms_toggle_border_default, forms_toggle_fg_checked, forms_toggle_fg_default, id, links_link_default, links_link_disabled, links_link_hover, links_link_inverted_default, links_link_inverted_hover, links_link_mute_default, links_link_mute_hover, syntax_syntax, syntax_syntax_key, syntax_syntax_num, syntax_syntax_value, updated_at].hash
    end

    # Builds the object from hash
    # @param [Hash] attributes Model attributes in the form of hash
    # @return [Object] Returns the model itself
    def self.build_from_hash(attributes)
      return nil unless attributes.is_a?(Hash)
      attributes = attributes.transform_keys(&:to_sym)
      transformed_hash = {}
      openapi_types.each_pair do |key, type|
        if attributes.key?(attribute_map[key]) && attributes[attribute_map[key]].nil?
          transformed_hash["#{key}"] = nil
        elsif type =~ /\AArray<(.*)>/i
          # check to ensure the input is an array given that the attribute
          # is documented as an array but the input is not
          if attributes[attribute_map[key]].is_a?(Array)
            transformed_hash["#{key}"] = attributes[attribute_map[key]].map { |v| _deserialize($1, v) }
          end
        elsif !attributes[attribute_map[key]].nil?
          transformed_hash["#{key}"] = _deserialize(type, attributes[attribute_map[key]])
        end
      end
      new(transformed_hash)
    end

    # Deserializes the data based on type
    # @param string type Data type
    # @param string value Value to be deserialized
    # @return [Object] Deserialized data
    def self._deserialize(type, value)
      case type.to_sym
      when :Time
        Time.parse(value)
      when :Date
        Date.parse(value)
      when :String
        value.to_s
      when :Integer
        value.to_i
      when :Float
        value.to_f
      when :Boolean
        if value.to_s =~ /\A(true|t|yes|y|1)\z/i
          true
        else
          false
        end
      when :Object
        # generic object (usually a Hash), return directly
        value
      when /\AArray<(?<inner_type>.+)>\z/
        inner_type = Regexp.last_match[:inner_type]
        value.map { |v| _deserialize(inner_type, v) }
      when /\AHash<(?<k_type>.+?), (?<v_type>.+)>\z/
        k_type = Regexp.last_match[:k_type]
        v_type = Regexp.last_match[:v_type]
        {}.tap do |hash|
          value.each do |k, v|
            hash[_deserialize(k_type, k)] = _deserialize(v_type, v)
          end
        end
      else # model
        # models (e.g. Pet) or oneOf
        klass = OryClient.const_get(type)
        klass.respond_to?(:openapi_any_of) || klass.respond_to?(:openapi_one_of) ? klass.build(value) : klass.build_from_hash(value)
      end
    end

    # Returns the string representation of the object
    # @return [String] String presentation of the object
    def to_s
      to_hash.to_s
    end

    # to_body is an alias to to_hash (backward compatibility)
    # @return [Hash] Returns the object in the form of hash
    def to_body
      to_hash
    end

    # Returns the object in the form of hash
    # @return [Hash] Returns the object in the form of hash
    def to_hash
      hash = {}
      self.class.attribute_map.each_pair do |attr, param|
        value = self.send(attr)
        if value.nil?
          is_nullable = self.class.openapi_nullable.include?(attr)
          next if !is_nullable || (is_nullable && !instance_variable_defined?(:"@#{attr}"))
        end

        hash[param] = _to_hash(value)
      end
      hash
    end

    # Outputs non-array value in the form of hash
    # For object, use to_hash. Otherwise, just return the value
    # @param [Object] value Any valid value
    # @return [Hash] Returns the value in the form of hash
    def _to_hash(value)
      if value.is_a?(Array)
        value.compact.map { |v| _to_hash(v) }
      elsif value.is_a?(Hash)
        {}.tap do |hash|
          value.each { |k, v| hash[k] = _to_hash(v) }
        end
      elsif value.respond_to? :to_hash
        value.to_hash
      else
        value
      end
    end

  end

end
