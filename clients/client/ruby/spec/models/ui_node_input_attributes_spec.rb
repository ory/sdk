=begin
#Ory APIs

#Documentation for all public and administrative Ory APIs. Administrative APIs can only be accessed with a valid Personal Access Token. Public APIs are mostly used in browsers. 

The version of the OpenAPI document: v1.15.0
Contact: support@ory.sh
Generated by: https://openapi-generator.tech
Generator version: 7.7.0

=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for OryClient::UiNodeInputAttributes
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe OryClient::UiNodeInputAttributes do
  let(:instance) { OryClient::UiNodeInputAttributes.new }

  describe 'test an instance of UiNodeInputAttributes' do
    it 'should create an instance of UiNodeInputAttributes' do
      # uncomment below to test the instance creation
      #expect(instance).to be_instance_of(OryClient::UiNodeInputAttributes)
    end
  end

  describe 'test attribute "autocomplete"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["email", "tel", "url", "current-password", "new-password", "one-time-code"])
      # validator.allowable_values.each do |value|
      #   expect { instance.autocomplete = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "disabled"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "label"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "maxlength"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "name"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "node_type"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["text", "input", "img", "a", "script"])
      # validator.allowable_values.each do |value|
      #   expect { instance.node_type = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "onclick"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "onclick_trigger"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["oryWebAuthnRegistration", "oryWebAuthnLogin", "oryPasskeyLogin", "oryPasskeyLoginAutocompleteInit", "oryPasskeyRegistration", "oryPasskeySettingsRegistration"])
      # validator.allowable_values.each do |value|
      #   expect { instance.onclick_trigger = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "onload"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "onload_trigger"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["oryWebAuthnRegistration", "oryWebAuthnLogin", "oryPasskeyLogin", "oryPasskeyLoginAutocompleteInit", "oryPasskeyRegistration", "oryPasskeySettingsRegistration"])
      # validator.allowable_values.each do |value|
      #   expect { instance.onload_trigger = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "pattern"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "required"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "type"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["text", "password", "number", "checkbox", "hidden", "email", "tel", "submit", "button", "datetime-local", "date", "url"])
      # validator.allowable_values.each do |value|
      #   expect { instance.type = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "value"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
