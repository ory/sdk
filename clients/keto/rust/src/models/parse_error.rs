/*
 * Ory Keto API
 *
 * Documentation for all of Ory Keto's REST APIs. gRPC is documented separately. 
 *
 * The version of the OpenAPI document: v0.11.0-alpha.0
 * Contact: hi@ory.sh
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct ParseError {
    #[serde(rename = "end", skip_serializing_if = "Option::is_none")]
    pub end: Option<Box<crate::models::SourcePosition>>,
    #[serde(rename = "message", skip_serializing_if = "Option::is_none")]
    pub message: Option<String>,
    #[serde(rename = "start", skip_serializing_if = "Option::is_none")]
    pub start: Option<Box<crate::models::SourcePosition>>,
}

impl Default for ParseError {
    fn default() -> Self {
        Self::new()
    }
}

impl ParseError {
    pub fn new() -> ParseError {
        ParseError {
                end: None,
                message: None,
                start: None,
        }
    }
}


