/*
 * ORY Keto
 * A cloud native access control server providing best-practice patterns (RBAC, ABAC, ACL, AWS IAM Policies, Kubernetes Roles, ...) via REST APIs.
 *
 * The version of the OpenAPI document: v0.0.0-alpha.1
 * Contact: hi@ory.sh
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package sh.ory.keto.api;

import sh.ory.keto.ApiException;
import sh.ory.keto.model.AddOryAccessControlPolicyRoleMembersBody;
import sh.ory.keto.model.AuthorizationResult;
import sh.ory.keto.model.InlineResponse500;
import sh.ory.keto.model.OryAccessControlPolicy;
import sh.ory.keto.model.OryAccessControlPolicyAllowedInput;
import sh.ory.keto.model.OryAccessControlPolicyRole;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EnginesApi
 */
@Ignore
public class EnginesApiTest {

    private final EnginesApi api = new EnginesApi();

    
    /**
     * Add a member to an ORY Access Control Policy Role
     *
     * Roles group several subjects into one. Rules can be assigned to ORY Access Control Policy (OACP) by using the Role ID as subject in the OACP.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addOryAccessControlPolicyRoleMembersTest() throws ApiException {
        String flavor = null;
        String id = null;
        AddOryAccessControlPolicyRoleMembersBody body = null;
        OryAccessControlPolicyRole response = api.addOryAccessControlPolicyRoleMembers(flavor, id, body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Delete an ORY Access Control Policy
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteOryAccessControlPolicyTest() throws ApiException {
        String flavor = null;
        String id = null;
        api.deleteOryAccessControlPolicy(flavor, id);

        // TODO: test validations
    }
    
    /**
     * Delete an ORY Access Control Policy Role
     *
     * Roles group several subjects into one. Rules can be assigned to ORY Access Control Policy (OACP) by using the Role ID as subject in the OACP.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteOryAccessControlPolicyRoleTest() throws ApiException {
        String flavor = null;
        String id = null;
        api.deleteOryAccessControlPolicyRole(flavor, id);

        // TODO: test validations
    }
    
    /**
     * Check if a request is allowed
     *
     * Use this endpoint to check if a request is allowed or not. If the request is allowed, a 200 response with &#x60;{\&quot;allowed\&quot;:\&quot;true\&quot;}&#x60; will be sent. If the request is denied, a 403 response with &#x60;{\&quot;allowed\&quot;:\&quot;false\&quot;}&#x60; will be sent instead.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void doOryAccessControlPoliciesAllowTest() throws ApiException {
        String flavor = null;
        OryAccessControlPolicyAllowedInput body = null;
        AuthorizationResult response = api.doOryAccessControlPoliciesAllow(flavor, body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Get an ORY Access Control Policy
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getOryAccessControlPolicyTest() throws ApiException {
        String flavor = null;
        String id = null;
        OryAccessControlPolicy response = api.getOryAccessControlPolicy(flavor, id);

        // TODO: test validations
    }
    
    /**
     * Get an ORY Access Control Policy Role
     *
     * Roles group several subjects into one. Rules can be assigned to ORY Access Control Policy (OACP) by using the Role ID as subject in the OACP.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getOryAccessControlPolicyRoleTest() throws ApiException {
        String flavor = null;
        String id = null;
        OryAccessControlPolicyRole response = api.getOryAccessControlPolicyRole(flavor, id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * List ORY Access Control Policies
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listOryAccessControlPoliciesTest() throws ApiException {
        String flavor = null;
        Long limit = null;
        Long offset = null;
        String subject = null;
        String resource = null;
        String action = null;
        List<OryAccessControlPolicy> response = api.listOryAccessControlPolicies(flavor, limit, offset, subject, resource, action);

        // TODO: test validations
    }
    
    /**
     * List ORY Access Control Policy Roles
     *
     * Roles group several subjects into one. Rules can be assigned to ORY Access Control Policy (OACP) by using the Role ID as subject in the OACP.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listOryAccessControlPolicyRolesTest() throws ApiException {
        String flavor = null;
        Long limit = null;
        Long offset = null;
        String member = null;
        List<OryAccessControlPolicyRole> response = api.listOryAccessControlPolicyRoles(flavor, limit, offset, member);

        // TODO: test validations
    }
    
    /**
     * Remove a member from an ORY Access Control Policy Role
     *
     * Roles group several subjects into one. Rules can be assigned to ORY Access Control Policy (OACP) by using the Role ID as subject in the OACP.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void removeOryAccessControlPolicyRoleMembersTest() throws ApiException {
        String flavor = null;
        String id = null;
        String member = null;
        api.removeOryAccessControlPolicyRoleMembers(flavor, id, member);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Upsert an ORY Access Control Policy
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void upsertOryAccessControlPolicyTest() throws ApiException {
        String flavor = null;
        OryAccessControlPolicy body = null;
        OryAccessControlPolicy response = api.upsertOryAccessControlPolicy(flavor, body);

        // TODO: test validations
    }
    
    /**
     * Upsert an ORY Access Control Policy Role
     *
     * Roles group several subjects into one. Rules can be assigned to ORY Access Control Policy (OACP) by using the Role ID as subject in the OACP.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void upsertOryAccessControlPolicyRoleTest() throws ApiException {
        String flavor = null;
        OryAccessControlPolicyRole body = null;
        OryAccessControlPolicyRole response = api.upsertOryAccessControlPolicyRole(flavor, body);

        // TODO: test validations
    }
    
}
