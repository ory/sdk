openapi: 3.0.1
info:
  contact:
    email: hi@ory.am
    name: ORY
    url: https://www.ory.am
  description: ORY Oathkeeper is a reverse proxy that checks the HTTP Authorization
    for validity against a set of rules. This service uses Hydra to validate access
    tokens and policies.
  title: ORY Oathkeeper
  version: v0.0.0
servers:
- url: /
paths:
  /.well-known/jwks.json:
    get:
      description: This endpoint returns cryptographic keys that are required to,
        for example, verify signatures of ID Tokens.
      operationId: getWellKnownJSONWebKeys
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonWebKeySet'
          description: jsonWebKeySet
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: The standard error format
      summary: Lists cryptographic keys
      tags:
      - api
      x-accepts: application/json
  /decisions:
    get:
      description: |-
        > This endpoint works with all HTTP Methods (GET, POST, PUT, ...) and matches every path prefixed with /decision.

        This endpoint mirrors the proxy capability of ORY Oathkeeper's proxy functionality but instead of forwarding the
        request to the upstream server, returns 200 (request should be allowed), 401 (unauthorized), or 403 (forbidden)
        status codes. This endpoint can be used to integrate with other API Proxies like Ambassador, Kong, Envoy, and many more.
      operationId: decisions
      responses:
        "200":
          content: {}
          description: An empty response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: The standard error format
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: The standard error format
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: The standard error format
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: The standard error format
      summary: Access Control Decision API
      tags:
      - api
      x-accepts: application/json
  /health/alive:
    get:
      description: |-
        This endpoint returns a 200 status code when the HTTP server is up running.
        This status does currently not include checks whether the database connection is working.

        If the service supports TLS Edge Termination, this endpoint does not require the
        `X-Forwarded-Proto` header to be set.

        Be aware that if you are running multiple nodes of this service, the health status will never
        refer to the cluster state, only to a single instance.
      operationId: isInstanceAlive
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthStatus'
          description: healthStatus
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: The standard error format
      summary: Check alive status
      tags:
      - api
      x-accepts: application/json
  /health/ready:
    get:
      description: |-
        This endpoint returns a 200 status code when the HTTP server is up running and the environment dependencies (e.g.
        the database) are responsive as well.

        If the service supports TLS Edge Termination, this endpoint does not require the
        `X-Forwarded-Proto` header to be set.

        Be aware that if you are running multiple nodes of this service, the health status will never
        refer to the cluster state, only to a single instance.
      operationId: isInstanceReady
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthStatus'
          description: healthStatus
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthNotReadyStatus'
          description: healthNotReadyStatus
      summary: Check readiness status
      tags:
      - api
      x-accepts: application/json
  /rules:
    get:
      description: |-
        This method returns an array of all rules that are stored in the backend. This is useful if you want to get a full
        view of what rules you have currently in place.
      operationId: listRules
      parameters:
      - description: The maximum amount of rules returned.
        in: query
        name: limit
        schema:
          format: int64
          type: integer
      - description: The offset from where to start looking.
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/rule'
                type: array
          description: A list of rules
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: The standard error format
      summary: List all rules
      tags:
      - api
      x-accepts: application/json
  /rules/{id}:
    get:
      description: Use this method to retrieve a rule from the storage. If it does
        not exist you will receive a 404 error.
      operationId: getRule
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rule'
          description: A rule
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: The standard error format
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: The standard error format
      summary: Retrieve a rule
      tags:
      - api
      x-accepts: application/json
  /version:
    get:
      description: |-
        This endpoint returns the service version typically notated using semantic versioning.

        If the service supports TLS Edge Termination, this endpoint does not require the
        `X-Forwarded-Proto` header to be set.

        Be aware that if you are running multiple nodes of this service, the health status will never
        refer to the cluster state, only to a single instance.
      operationId: getVersion
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/version'
          description: version
      summary: Get service version
      tags:
      - api
      x-accepts: application/json
components:
  responses:
    emptyResponse:
      content: {}
      description: An empty response
    genericError:
      content:
        application/json:
          schema:
            properties:
              code:
                format: int64
                type: integer
              details:
                items:
                  properties: {}
                  type: object
                type: array
              message:
                type: string
              reason:
                type: string
              request:
                type: string
              status:
                type: string
            type: object
      description: The standard error format
    rule:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/rule'
      description: A rule
    rules:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/rule'
            type: array
      description: A list of rules
  schemas:
    UUID:
      format: uuid4
      type: string
    CreateRuleCreated:
      description: A rule
      properties:
        Payload:
          $ref: '#/components/schemas/swaggerRule'
      title: CreateRuleCreated CreateRuleCreated CreateRuleCreated CreateRuleCreated
        CreateRuleCreated CreateRuleCreated CreateRuleCreated handles this case with
        default header values.
      type: object
    CreateRuleForbidden:
      description: The standard error format
      properties:
        Payload:
          $ref: '#/components/schemas/CreateRuleForbiddenBody'
      title: CreateRuleForbidden CreateRuleForbidden CreateRuleForbidden CreateRuleForbidden
        CreateRuleForbidden CreateRuleForbidden CreateRuleForbidden handles this case
        with default header values.
      type: object
    CreateRuleForbiddenBody:
      description: CreateRuleForbiddenBody CreateRuleForbiddenBody CreateRuleForbiddenBody
        CreateRuleForbiddenBody CreateRuleForbiddenBody CreateRuleForbiddenBody CreateRuleForbiddenBody
        create rule forbidden body
      properties:
        code:
          description: code
          format: int64
          type: integer
        details:
          description: details
          items:
            properties: {}
            type: object
          type: array
        message:
          description: message
          type: string
        reason:
          description: reason
          type: string
        request:
          description: request
          type: string
        status:
          description: status
          type: string
      type: object
    CreateRuleInternalServerError:
      description: The standard error format
      properties:
        Payload:
          $ref: '#/components/schemas/CreateRuleInternalServerErrorBody'
      title: CreateRuleInternalServerError CreateRuleInternalServerError CreateRuleInternalServerError
        CreateRuleInternalServerError CreateRuleInternalServerError CreateRuleInternalServerError
        CreateRuleInternalServerError handles this case with default header values.
      type: object
    CreateRuleInternalServerErrorBody:
      description: CreateRuleInternalServerErrorBody CreateRuleInternalServerErrorBody
        CreateRuleInternalServerErrorBody CreateRuleInternalServerErrorBody CreateRuleInternalServerErrorBody
        CreateRuleInternalServerErrorBody CreateRuleInternalServerErrorBody create
        rule internal server error body
      properties:
        code:
          description: code
          format: int64
          type: integer
        details:
          description: details
          items:
            properties: {}
            type: object
          type: array
        message:
          description: message
          type: string
        reason:
          description: reason
          type: string
        request:
          description: request
          type: string
        status:
          description: status
          type: string
      type: object
    CreateRuleReader:
      title: CreateRuleReader CreateRuleReader CreateRuleReader CreateRuleReader CreateRuleReader
        CreateRuleReader CreateRuleReader is a Reader for the CreateRule structure.
      type: object
    CreateRuleUnauthorized:
      description: The standard error format
      properties:
        Payload:
          $ref: '#/components/schemas/CreateRuleUnauthorizedBody'
      title: CreateRuleUnauthorized CreateRuleUnauthorized CreateRuleUnauthorized
        CreateRuleUnauthorized CreateRuleUnauthorized CreateRuleUnauthorized CreateRuleUnauthorized
        handles this case with default header values.
      type: object
    CreateRuleUnauthorizedBody:
      description: CreateRuleUnauthorizedBody CreateRuleUnauthorizedBody CreateRuleUnauthorizedBody
        CreateRuleUnauthorizedBody CreateRuleUnauthorizedBody CreateRuleUnauthorizedBody
        CreateRuleUnauthorizedBody create rule unauthorized body
      properties:
        code:
          description: code
          format: int64
          type: integer
        details:
          description: details
          items:
            properties: {}
            type: object
          type: array
        message:
          description: message
          type: string
        reason:
          description: reason
          type: string
        request:
          description: request
          type: string
        status:
          description: status
          type: string
      type: object
    DecisionsForbidden:
      description: The standard error format
      properties:
        Payload:
          $ref: '#/components/schemas/DecisionsForbiddenBody'
      title: DecisionsForbidden DecisionsForbidden handles this case with default
        header values.
      type: object
    DecisionsForbiddenBody:
      description: DecisionsForbiddenBody DecisionsForbiddenBody decisions forbidden
        body
      properties:
        code:
          description: code
          format: int64
          type: integer
        details:
          description: details
          items:
            properties: {}
            type: object
          type: array
        message:
          description: message
          type: string
        reason:
          description: reason
          type: string
        request:
          description: request
          type: string
        status:
          description: status
          type: string
      type: object
    DecisionsInternalServerError:
      description: The standard error format
      properties:
        Payload:
          $ref: '#/components/schemas/DecisionsInternalServerErrorBody'
      title: DecisionsInternalServerError DecisionsInternalServerError handles this
        case with default header values.
      type: object
    DecisionsInternalServerErrorBody:
      description: DecisionsInternalServerErrorBody DecisionsInternalServerErrorBody
        decisions internal server error body
      properties:
        code:
          description: code
          format: int64
          type: integer
        details:
          description: details
          items:
            properties: {}
            type: object
          type: array
        message:
          description: message
          type: string
        reason:
          description: reason
          type: string
        request:
          description: request
          type: string
        status:
          description: status
          type: string
      type: object
    DecisionsNotFound:
      description: The standard error format
      properties:
        Payload:
          $ref: '#/components/schemas/DecisionsNotFoundBody'
      title: DecisionsNotFound DecisionsNotFound handles this case with default header
        values.
      type: object
    DecisionsNotFoundBody:
      description: DecisionsNotFoundBody DecisionsNotFoundBody decisions not found
        body
      properties:
        code:
          description: code
          format: int64
          type: integer
        details:
          description: details
          items:
            properties: {}
            type: object
          type: array
        message:
          description: message
          type: string
        reason:
          description: reason
          type: string
        request:
          description: request
          type: string
        status:
          description: status
          type: string
      type: object
    DecisionsOK:
      description: An empty response
      title: DecisionsOK DecisionsOK handles this case with default header values.
      type: object
    DecisionsReader:
      title: DecisionsReader DecisionsReader is a Reader for the Decisions structure.
      type: object
    DecisionsUnauthorized:
      description: The standard error format
      properties:
        Payload:
          $ref: '#/components/schemas/DecisionsUnauthorizedBody'
      title: DecisionsUnauthorized DecisionsUnauthorized handles this case with default
        header values.
      type: object
    DecisionsUnauthorizedBody:
      description: DecisionsUnauthorizedBody DecisionsUnauthorizedBody decisions unauthorized
        body
      properties:
        code:
          description: code
          format: int64
          type: integer
        details:
          description: details
          items:
            properties: {}
            type: object
          type: array
        message:
          description: message
          type: string
        reason:
          description: reason
          type: string
        request:
          description: request
          type: string
        status:
          description: status
          type: string
      type: object
    DeleteRuleForbidden:
      description: The standard error format
      properties:
        Payload:
          $ref: '#/components/schemas/DeleteRuleForbiddenBody'
      title: DeleteRuleForbidden DeleteRuleForbidden DeleteRuleForbidden DeleteRuleForbidden
        DeleteRuleForbidden DeleteRuleForbidden DeleteRuleForbidden handles this case
        with default header values.
      type: object
    DeleteRuleForbiddenBody:
      description: DeleteRuleForbiddenBody DeleteRuleForbiddenBody DeleteRuleForbiddenBody
        DeleteRuleForbiddenBody DeleteRuleForbiddenBody DeleteRuleForbiddenBody DeleteRuleForbiddenBody
        delete rule forbidden body
      properties:
        code:
          description: code
          format: int64
          type: integer
        details:
          description: details
          items:
            properties: {}
            type: object
          type: array
        message:
          description: message
          type: string
        reason:
          description: reason
          type: string
        request:
          description: request
          type: string
        status:
          description: status
          type: string
      type: object
    DeleteRuleInternalServerError:
      description: The standard error format
      properties:
        Payload:
          $ref: '#/components/schemas/DeleteRuleInternalServerErrorBody'
      title: DeleteRuleInternalServerError DeleteRuleInternalServerError DeleteRuleInternalServerError
        DeleteRuleInternalServerError DeleteRuleInternalServerError DeleteRuleInternalServerError
        DeleteRuleInternalServerError handles this case with default header values.
      type: object
    DeleteRuleInternalServerErrorBody:
      description: DeleteRuleInternalServerErrorBody DeleteRuleInternalServerErrorBody
        DeleteRuleInternalServerErrorBody DeleteRuleInternalServerErrorBody DeleteRuleInternalServerErrorBody
        DeleteRuleInternalServerErrorBody DeleteRuleInternalServerErrorBody delete
        rule internal server error body
      properties:
        code:
          description: code
          format: int64
          type: integer
        details:
          description: details
          items:
            properties: {}
            type: object
          type: array
        message:
          description: message
          type: string
        reason:
          description: reason
          type: string
        request:
          description: request
          type: string
        status:
          description: status
          type: string
      type: object
    DeleteRuleNoContent:
      description: An empty response
      title: DeleteRuleNoContent DeleteRuleNoContent DeleteRuleNoContent DeleteRuleNoContent
        DeleteRuleNoContent DeleteRuleNoContent DeleteRuleNoContent handles this case
        with default header values.
      type: object
    DeleteRuleNotFound:
      description: The standard error format
      properties:
        Payload:
          $ref: '#/components/schemas/DeleteRuleNotFoundBody'
      title: DeleteRuleNotFound DeleteRuleNotFound DeleteRuleNotFound DeleteRuleNotFound
        DeleteRuleNotFound DeleteRuleNotFound DeleteRuleNotFound handles this case
        with default header values.
      type: object
    DeleteRuleNotFoundBody:
      description: DeleteRuleNotFoundBody DeleteRuleNotFoundBody DeleteRuleNotFoundBody
        DeleteRuleNotFoundBody DeleteRuleNotFoundBody DeleteRuleNotFoundBody DeleteRuleNotFoundBody
        delete rule not found body
      properties:
        code:
          description: code
          format: int64
          type: integer
        details:
          description: details
          items:
            properties: {}
            type: object
          type: array
        message:
          description: message
          type: string
        reason:
          description: reason
          type: string
        request:
          description: request
          type: string
        status:
          description: status
          type: string
      type: object
    DeleteRuleReader:
      title: DeleteRuleReader DeleteRuleReader DeleteRuleReader DeleteRuleReader DeleteRuleReader
        DeleteRuleReader DeleteRuleReader is a Reader for the DeleteRule structure.
      type: object
    DeleteRuleUnauthorized:
      description: The standard error format
      properties:
        Payload:
          $ref: '#/components/schemas/DeleteRuleUnauthorizedBody'
      title: DeleteRuleUnauthorized DeleteRuleUnauthorized DeleteRuleUnauthorized
        DeleteRuleUnauthorized DeleteRuleUnauthorized DeleteRuleUnauthorized DeleteRuleUnauthorized
        handles this case with default header values.
      type: object
    DeleteRuleUnauthorizedBody:
      description: DeleteRuleUnauthorizedBody DeleteRuleUnauthorizedBody DeleteRuleUnauthorizedBody
        DeleteRuleUnauthorizedBody DeleteRuleUnauthorizedBody DeleteRuleUnauthorizedBody
        DeleteRuleUnauthorizedBody delete rule unauthorized body
      properties:
        code:
          description: code
          format: int64
          type: integer
        details:
          description: details
          items:
            properties: {}
            type: object
          type: array
        message:
          description: message
          type: string
        reason:
          description: reason
          type: string
        request:
          description: request
          type: string
        status:
          description: status
          type: string
      type: object
    GetRuleForbidden:
      description: The standard error format
      properties:
        Payload:
          $ref: '#/components/schemas/GetRuleForbiddenBody'
      title: GetRuleForbidden GetRuleForbidden GetRuleForbidden GetRuleForbidden GetRuleForbidden
        GetRuleForbidden GetRuleForbidden handles this case with default header values.
      type: object
    GetRuleForbiddenBody:
      description: GetRuleForbiddenBody GetRuleForbiddenBody GetRuleForbiddenBody
        GetRuleForbiddenBody GetRuleForbiddenBody GetRuleForbiddenBody GetRuleForbiddenBody
        get rule forbidden body
      properties:
        code:
          description: code
          format: int64
          type: integer
        details:
          description: details
          items:
            properties: {}
            type: object
          type: array
        message:
          description: message
          type: string
        reason:
          description: reason
          type: string
        request:
          description: request
          type: string
        status:
          description: status
          type: string
      type: object
    GetRuleInternalServerError:
      description: The standard error format
      properties:
        Payload:
          $ref: '#/components/schemas/GetRuleInternalServerErrorBody'
      title: GetRuleInternalServerError GetRuleInternalServerError handles this case
        with default header values.
      type: object
    GetRuleInternalServerErrorBody:
      description: GetRuleInternalServerErrorBody GetRuleInternalServerErrorBody get
        rule internal server error body
      properties:
        code:
          description: code
          format: int64
          type: integer
        details:
          description: details
          items:
            properties: {}
            type: object
          type: array
        message:
          description: message
          type: string
        reason:
          description: reason
          type: string
        request:
          description: request
          type: string
        status:
          description: status
          type: string
      type: object
    GetRuleNotFound:
      description: The standard error format
      properties:
        Payload:
          $ref: '#/components/schemas/GetRuleNotFoundBody'
      title: GetRuleNotFound GetRuleNotFound handles this case with default header
        values.
      type: object
    GetRuleNotFoundBody:
      description: GetRuleNotFoundBody GetRuleNotFoundBody get rule not found body
      properties:
        code:
          description: code
          format: int64
          type: integer
        details:
          description: details
          items:
            properties: {}
            type: object
          type: array
        message:
          description: message
          type: string
        reason:
          description: reason
          type: string
        request:
          description: request
          type: string
        status:
          description: status
          type: string
      type: object
    GetRuleOK:
      description: A rule
      properties:
        Payload:
          $ref: '#/components/schemas/swaggerRule'
      title: GetRuleOK GetRuleOK handles this case with default header values.
      type: object
    GetRuleReader:
      title: GetRuleReader GetRuleReader is a Reader for the GetRule structure.
      type: object
    GetRuleUnauthorized:
      description: The standard error format
      properties:
        Payload:
          $ref: '#/components/schemas/GetRuleUnauthorizedBody'
      title: GetRuleUnauthorized GetRuleUnauthorized GetRuleUnauthorized GetRuleUnauthorized
        GetRuleUnauthorized GetRuleUnauthorized GetRuleUnauthorized handles this case
        with default header values.
      type: object
    GetRuleUnauthorizedBody:
      description: GetRuleUnauthorizedBody GetRuleUnauthorizedBody GetRuleUnauthorizedBody
        GetRuleUnauthorizedBody GetRuleUnauthorizedBody GetRuleUnauthorizedBody GetRuleUnauthorizedBody
        get rule unauthorized body
      properties:
        code:
          description: code
          format: int64
          type: integer
        details:
          description: details
          items:
            properties: {}
            type: object
          type: array
        message:
          description: message
          type: string
        reason:
          description: reason
          type: string
        request:
          description: request
          type: string
        status:
          description: status
          type: string
      type: object
    GetWellKnownForbidden:
      description: The standard error format
      properties:
        Payload:
          $ref: '#/components/schemas/GetWellKnownForbiddenBody'
      title: GetWellKnownForbidden GetWellKnownForbidden GetWellKnownForbidden GetWellKnownForbidden
        GetWellKnownForbidden GetWellKnownForbidden GetWellKnownForbidden handles
        this case with default header values.
      type: object
    GetWellKnownForbiddenBody:
      description: GetWellKnownForbiddenBody GetWellKnownForbiddenBody GetWellKnownForbiddenBody
        GetWellKnownForbiddenBody GetWellKnownForbiddenBody GetWellKnownForbiddenBody
        GetWellKnownForbiddenBody get well known forbidden body
      properties:
        code:
          description: code
          format: int64
          type: integer
        details:
          description: details
          items:
            properties: {}
            type: object
          type: array
        message:
          description: message
          type: string
        reason:
          description: reason
          type: string
        request:
          description: request
          type: string
        status:
          description: status
          type: string
      type: object
    GetWellKnownJSONWebKeysInternalServerError:
      description: The standard error format
      properties:
        Payload:
          $ref: '#/components/schemas/GetWellKnownJSONWebKeysInternalServerErrorBody'
      title: GetWellKnownJSONWebKeysInternalServerError GetWellKnownJSONWebKeysInternalServerError
        handles this case with default header values.
      type: object
    GetWellKnownJSONWebKeysInternalServerErrorBody:
      description: GetWellKnownJSONWebKeysInternalServerErrorBody GetWellKnownJSONWebKeysInternalServerErrorBody
        get well known JSON web keys internal server error body
      properties:
        code:
          description: code
          format: int64
          type: integer
        details:
          description: details
          items:
            properties: {}
            type: object
          type: array
        message:
          description: message
          type: string
        reason:
          description: reason
          type: string
        request:
          description: request
          type: string
        status:
          description: status
          type: string
      type: object
    GetWellKnownJSONWebKeysOK:
      description: jsonWebKeySet
      properties:
        Payload:
          $ref: '#/components/schemas/swaggerJSONWebKeySet'
      title: GetWellKnownJSONWebKeysOK GetWellKnownJSONWebKeysOK handles this case
        with default header values.
      type: object
    GetWellKnownJSONWebKeysReader:
      title: GetWellKnownJSONWebKeysReader GetWellKnownJSONWebKeysReader is a Reader
        for the GetWellKnownJSONWebKeys structure.
      type: object
    GetWellKnownOK:
      description: jsonWebKeySet
      properties:
        Payload:
          $ref: '#/components/schemas/swaggerJSONWebKeySet'
      title: GetWellKnownOK GetWellKnownOK GetWellKnownOK GetWellKnownOK GetWellKnownOK
        GetWellKnownOK GetWellKnownOK handles this case with default header values.
      type: object
    GetWellKnownReader:
      title: GetWellKnownReader GetWellKnownReader GetWellKnownReader GetWellKnownReader
        GetWellKnownReader GetWellKnownReader GetWellKnownReader is a Reader for the
        GetWellKnown structure.
      type: object
    GetWellKnownUnauthorized:
      description: The standard error format
      properties:
        Payload:
          $ref: '#/components/schemas/GetWellKnownUnauthorizedBody'
      title: GetWellKnownUnauthorized GetWellKnownUnauthorized GetWellKnownUnauthorized
        GetWellKnownUnauthorized GetWellKnownUnauthorized GetWellKnownUnauthorized
        GetWellKnownUnauthorized handles this case with default header values.
      type: object
    GetWellKnownUnauthorizedBody:
      description: GetWellKnownUnauthorizedBody GetWellKnownUnauthorizedBody GetWellKnownUnauthorizedBody
        GetWellKnownUnauthorizedBody GetWellKnownUnauthorizedBody GetWellKnownUnauthorizedBody
        GetWellKnownUnauthorizedBody get well known unauthorized body
      properties:
        code:
          description: code
          format: int64
          type: integer
        details:
          description: details
          items:
            properties: {}
            type: object
          type: array
        message:
          description: message
          type: string
        reason:
          description: reason
          type: string
        request:
          description: request
          type: string
        status:
          description: status
          type: string
      type: object
    IsInstanceAliveInternalServerError:
      description: The standard error format
      properties:
        Payload:
          $ref: '#/components/schemas/IsInstanceAliveInternalServerErrorBody'
      title: IsInstanceAliveInternalServerError IsInstanceAliveInternalServerError
        handles this case with default header values.
      type: object
    IsInstanceAliveInternalServerErrorBody:
      description: IsInstanceAliveInternalServerErrorBody IsInstanceAliveInternalServerErrorBody
        is instance alive internal server error body
      properties:
        code:
          description: code
          format: int64
          type: integer
        details:
          description: details
          items:
            properties: {}
            type: object
          type: array
        message:
          description: message
          type: string
        reason:
          description: reason
          type: string
        request:
          description: request
          type: string
        status:
          description: status
          type: string
      type: object
    IsInstanceAliveOK:
      description: healthStatus
      properties:
        Payload:
          $ref: '#/components/schemas/swaggerHealthStatus'
      title: IsInstanceAliveOK IsInstanceAliveOK handles this case with default header
        values.
      type: object
    IsInstanceAliveReader:
      title: IsInstanceAliveReader IsInstanceAliveReader is a Reader for the IsInstanceAlive
        structure.
      type: object
    JudgeForbidden:
      description: The standard error format
      properties:
        Payload:
          $ref: '#/components/schemas/JudgeForbiddenBody'
      title: JudgeForbidden JudgeForbidden JudgeForbidden handles this case with default
        header values.
      type: object
    JudgeForbiddenBody:
      description: JudgeForbiddenBody JudgeForbiddenBody JudgeForbiddenBody judge
        forbidden body
      properties:
        code:
          description: code
          format: int64
          type: integer
        details:
          description: details
          items:
            properties: {}
            type: object
          type: array
        message:
          description: message
          type: string
        reason:
          description: reason
          type: string
        request:
          description: request
          type: string
        status:
          description: status
          type: string
      type: object
    JudgeInternalServerError:
      description: The standard error format
      properties:
        Payload:
          $ref: '#/components/schemas/JudgeInternalServerErrorBody'
      title: JudgeInternalServerError JudgeInternalServerError JudgeInternalServerError
        handles this case with default header values.
      type: object
    JudgeInternalServerErrorBody:
      description: JudgeInternalServerErrorBody JudgeInternalServerErrorBody JudgeInternalServerErrorBody
        judge internal server error body
      properties:
        code:
          description: code
          format: int64
          type: integer
        details:
          description: details
          items:
            properties: {}
            type: object
          type: array
        message:
          description: message
          type: string
        reason:
          description: reason
          type: string
        request:
          description: request
          type: string
        status:
          description: status
          type: string
      type: object
    JudgeNotFound:
      description: The standard error format
      properties:
        Payload:
          $ref: '#/components/schemas/JudgeNotFoundBody'
      title: JudgeNotFound JudgeNotFound JudgeNotFound handles this case with default
        header values.
      type: object
    JudgeNotFoundBody:
      description: JudgeNotFoundBody JudgeNotFoundBody JudgeNotFoundBody judge not
        found body
      properties:
        code:
          description: code
          format: int64
          type: integer
        details:
          description: details
          items:
            properties: {}
            type: object
          type: array
        message:
          description: message
          type: string
        reason:
          description: reason
          type: string
        request:
          description: request
          type: string
        status:
          description: status
          type: string
      type: object
    JudgeOK:
      description: An empty response
      title: JudgeOK JudgeOK JudgeOK handles this case with default header values.
      type: object
    JudgeReader:
      title: JudgeReader JudgeReader JudgeReader is a Reader for the Judge structure.
      type: object
    JudgeUnauthorized:
      description: The standard error format
      properties:
        Payload:
          $ref: '#/components/schemas/JudgeUnauthorizedBody'
      title: JudgeUnauthorized JudgeUnauthorized JudgeUnauthorized handles this case
        with default header values.
      type: object
    JudgeUnauthorizedBody:
      description: JudgeUnauthorizedBody JudgeUnauthorizedBody JudgeUnauthorizedBody
        judge unauthorized body
      properties:
        code:
          description: code
          format: int64
          type: integer
        details:
          description: details
          items:
            properties: {}
            type: object
          type: array
        message:
          description: message
          type: string
        reason:
          description: reason
          type: string
        request:
          description: request
          type: string
        status:
          description: status
          type: string
      type: object
    ListRulesForbidden:
      description: The standard error format
      properties:
        Payload:
          $ref: '#/components/schemas/ListRulesForbiddenBody'
      title: ListRulesForbidden ListRulesForbidden ListRulesForbidden ListRulesForbidden
        ListRulesForbidden ListRulesForbidden ListRulesForbidden handles this case
        with default header values.
      type: object
    ListRulesForbiddenBody:
      description: ListRulesForbiddenBody ListRulesForbiddenBody ListRulesForbiddenBody
        ListRulesForbiddenBody ListRulesForbiddenBody ListRulesForbiddenBody ListRulesForbiddenBody
        list rules forbidden body
      properties:
        code:
          description: code
          format: int64
          type: integer
        details:
          description: details
          items:
            properties: {}
            type: object
          type: array
        message:
          description: message
          type: string
        reason:
          description: reason
          type: string
        request:
          description: request
          type: string
        status:
          description: status
          type: string
      type: object
    ListRulesInternalServerError:
      description: The standard error format
      properties:
        Payload:
          $ref: '#/components/schemas/ListRulesInternalServerErrorBody'
      title: ListRulesInternalServerError ListRulesInternalServerError handles this
        case with default header values.
      type: object
    ListRulesInternalServerErrorBody:
      description: ListRulesInternalServerErrorBody ListRulesInternalServerErrorBody
        list rules internal server error body
      properties:
        code:
          description: code
          format: int64
          type: integer
        details:
          description: details
          items:
            properties: {}
            type: object
          type: array
        message:
          description: message
          type: string
        reason:
          description: reason
          type: string
        request:
          description: request
          type: string
        status:
          description: status
          type: string
      type: object
    ListRulesOK:
      description: A list of rules
      properties:
        Payload:
          description: payload
          items:
            $ref: '#/components/schemas/swaggerRule'
          type: array
      title: ListRulesOK ListRulesOK handles this case with default header values.
      type: object
    ListRulesReader:
      title: ListRulesReader ListRulesReader is a Reader for the ListRules structure.
      type: object
    ListRulesUnauthorized:
      description: The standard error format
      properties:
        Payload:
          $ref: '#/components/schemas/ListRulesUnauthorizedBody'
      title: ListRulesUnauthorized ListRulesUnauthorized ListRulesUnauthorized ListRulesUnauthorized
        ListRulesUnauthorized ListRulesUnauthorized ListRulesUnauthorized handles
        this case with default header values.
      type: object
    ListRulesUnauthorizedBody:
      description: ListRulesUnauthorizedBody ListRulesUnauthorizedBody ListRulesUnauthorizedBody
        ListRulesUnauthorizedBody ListRulesUnauthorizedBody ListRulesUnauthorizedBody
        ListRulesUnauthorizedBody list rules unauthorized body
      properties:
        code:
          description: code
          format: int64
          type: integer
        details:
          description: details
          items:
            properties: {}
            type: object
          type: array
        message:
          description: message
          type: string
        reason:
          description: reason
          type: string
        request:
          description: request
          type: string
        status:
          description: status
          type: string
      type: object
    RawMessage:
      description: |-
        It implements Marshaler and Unmarshaler and can
        be used to delay JSON decoding or precompute a JSON encoding.
      items:
        format: uint8
        type: integer
      title: RawMessage RawMessage RawMessage RawMessage RawMessage RawMessage RawMessage
        is a raw encoded JSON value.
      type: array
    SwaggerCreateRuleParameters:
      description: SwaggerCreateRuleParameters SwaggerCreateRuleParameters SwaggerCreateRuleParameters
        SwaggerCreateRuleParameters SwaggerCreateRuleParameters swagger create rule
        parameters
      properties:
        Body:
          $ref: '#/components/schemas/swaggerRule'
      type: object
    SwaggerUpdateRuleParameters:
      description: SwaggerUpdateRuleParameters SwaggerUpdateRuleParameters SwaggerUpdateRuleParameters
        SwaggerUpdateRuleParameters SwaggerUpdateRuleParameters swagger update rule
        parameters
      properties:
        Body:
          $ref: '#/components/schemas/swaggerRule'
        id:
          description: 'in: path'
          type: string
      required:
      - id
      type: object
    UpdateRuleForbidden:
      description: The standard error format
      properties:
        Payload:
          $ref: '#/components/schemas/UpdateRuleForbiddenBody'
      title: UpdateRuleForbidden UpdateRuleForbidden UpdateRuleForbidden UpdateRuleForbidden
        UpdateRuleForbidden UpdateRuleForbidden UpdateRuleForbidden handles this case
        with default header values.
      type: object
    UpdateRuleForbiddenBody:
      description: UpdateRuleForbiddenBody UpdateRuleForbiddenBody UpdateRuleForbiddenBody
        UpdateRuleForbiddenBody UpdateRuleForbiddenBody UpdateRuleForbiddenBody UpdateRuleForbiddenBody
        update rule forbidden body
      properties:
        code:
          description: code
          format: int64
          type: integer
        details:
          description: details
          items:
            properties: {}
            type: object
          type: array
        message:
          description: message
          type: string
        reason:
          description: reason
          type: string
        request:
          description: request
          type: string
        status:
          description: status
          type: string
      type: object
    UpdateRuleInternalServerError:
      description: The standard error format
      properties:
        Payload:
          $ref: '#/components/schemas/UpdateRuleInternalServerErrorBody'
      title: UpdateRuleInternalServerError UpdateRuleInternalServerError UpdateRuleInternalServerError
        UpdateRuleInternalServerError UpdateRuleInternalServerError UpdateRuleInternalServerError
        UpdateRuleInternalServerError handles this case with default header values.
      type: object
    UpdateRuleInternalServerErrorBody:
      description: UpdateRuleInternalServerErrorBody UpdateRuleInternalServerErrorBody
        UpdateRuleInternalServerErrorBody UpdateRuleInternalServerErrorBody UpdateRuleInternalServerErrorBody
        UpdateRuleInternalServerErrorBody UpdateRuleInternalServerErrorBody update
        rule internal server error body
      properties:
        code:
          description: code
          format: int64
          type: integer
        details:
          description: details
          items:
            properties: {}
            type: object
          type: array
        message:
          description: message
          type: string
        reason:
          description: reason
          type: string
        request:
          description: request
          type: string
        status:
          description: status
          type: string
      type: object
    UpdateRuleNotFound:
      description: The standard error format
      properties:
        Payload:
          $ref: '#/components/schemas/UpdateRuleNotFoundBody'
      title: UpdateRuleNotFound UpdateRuleNotFound UpdateRuleNotFound UpdateRuleNotFound
        UpdateRuleNotFound UpdateRuleNotFound UpdateRuleNotFound handles this case
        with default header values.
      type: object
    UpdateRuleNotFoundBody:
      description: UpdateRuleNotFoundBody UpdateRuleNotFoundBody UpdateRuleNotFoundBody
        UpdateRuleNotFoundBody UpdateRuleNotFoundBody UpdateRuleNotFoundBody UpdateRuleNotFoundBody
        update rule not found body
      properties:
        code:
          description: code
          format: int64
          type: integer
        details:
          description: details
          items:
            properties: {}
            type: object
          type: array
        message:
          description: message
          type: string
        reason:
          description: reason
          type: string
        request:
          description: request
          type: string
        status:
          description: status
          type: string
      type: object
    UpdateRuleOK:
      description: A rule
      properties:
        Payload:
          $ref: '#/components/schemas/swaggerRule'
      title: UpdateRuleOK UpdateRuleOK UpdateRuleOK UpdateRuleOK UpdateRuleOK UpdateRuleOK
        UpdateRuleOK handles this case with default header values.
      type: object
    UpdateRuleReader:
      title: UpdateRuleReader UpdateRuleReader UpdateRuleReader UpdateRuleReader UpdateRuleReader
        UpdateRuleReader UpdateRuleReader is a Reader for the UpdateRule structure.
      type: object
    UpdateRuleUnauthorized:
      description: The standard error format
      properties:
        Payload:
          $ref: '#/components/schemas/UpdateRuleUnauthorizedBody'
      title: UpdateRuleUnauthorized UpdateRuleUnauthorized UpdateRuleUnauthorized
        UpdateRuleUnauthorized UpdateRuleUnauthorized UpdateRuleUnauthorized UpdateRuleUnauthorized
        handles this case with default header values.
      type: object
    UpdateRuleUnauthorizedBody:
      description: UpdateRuleUnauthorizedBody UpdateRuleUnauthorizedBody UpdateRuleUnauthorizedBody
        UpdateRuleUnauthorizedBody UpdateRuleUnauthorizedBody UpdateRuleUnauthorizedBody
        UpdateRuleUnauthorizedBody update rule unauthorized body
      properties:
        code:
          description: code
          format: int64
          type: integer
        details:
          description: details
          items:
            properties: {}
            type: object
          type: array
        message:
          description: message
          type: string
        reason:
          description: reason
          type: string
        request:
          description: request
          type: string
        status:
          description: status
          type: string
      type: object
    Upstream:
      description: Upstream Upstream Upstream Upstream Upstream Upstream Upstream
        upstream
      example:
        preserve_host: true
        strip_path: strip_path
        url: url
      properties:
        preserve_host:
          description: |-
            PreserveHost, if false (the default), tells ORY Oathkeeper to set the upstream request's Host header to the
            hostname of the API's upstream's URL. Setting this flag to true instructs ORY Oathkeeper not to do so.
          type: boolean
        strip_path:
          description: StripPath if set, replaces the provided path prefix when forwarding
            the requested URL to the upstream URL.
          type: string
        url:
          description: URL is the URL the request will be proxied to.
          type: string
      type: object
    healthNotReadyStatus:
      properties:
        errors:
          additionalProperties:
            type: string
          description: Errors contains a list of errors that caused the not ready
            status.
          type: object
      type: object
    healthStatus:
      example:
        status: status
      properties:
        status:
          description: Status always contains "ok".
          type: string
      type: object
    jsonWebKey:
      example:
        d: d
        e: e
        crv: crv
        use: use
        kid: kid
        x5c:
        - x5c
        - x5c
        k: k
        dp: dp
        dq: dq
        n: "n"
        p: p
        kty: kty
        q: q
        qi: qi
        x: x
        y: "y"
        alg: alg
      properties:
        alg:
          description: |-
            The "alg" (algorithm) parameter identifies the algorithm intended for
            use with the key.  The values used should either be registered in the
            IANA "JSON Web Signature and Encryption Algorithms" registry
            established by [JWA] or be a value that contains a Collision-
            Resistant Name.
          type: string
        crv:
          type: string
        d:
          type: string
        dp:
          type: string
        dq:
          type: string
        e:
          type: string
        k:
          type: string
        kid:
          description: |-
            The "kid" (key ID) parameter is used to match a specific key.  This
            is used, for instance, to choose among a set of keys within a JWK Set
            during key rollover.  The structure of the "kid" value is
            unspecified.  When "kid" values are used within a JWK Set, different
            keys within the JWK Set SHOULD use distinct "kid" values.  (One
            example in which different keys might use the same "kid" value is if
            they have different "kty" (key type) values but are considered to be
            equivalent alternatives by the application using them.)  The "kid"
            value is a case-sensitive string.
          type: string
        kty:
          description: |-
            The "kty" (key type) parameter identifies the cryptographic algorithm
            family used with the key, such as "RSA" or "EC". "kty" values should
            either be registered in the IANA "JSON Web Key Types" registry
            established by [JWA] or be a value that contains a Collision-
            Resistant Name.  The "kty" value is a case-sensitive string.
          type: string
        n:
          type: string
        p:
          type: string
        q:
          type: string
        qi:
          type: string
        use:
          description: |-
            The "use" (public key use) parameter identifies the intended use of
            the public key. The "use" parameter is employed to indicate whether
            a public key is used for encrypting data or verifying the signature
            on data. Values are commonly "sig" (signature) or "enc" (encryption).
          type: string
        x:
          type: string
        x5c:
          description: |-
            The "x5c" (X.509 certificate chain) parameter contains a chain of one
            or more PKIX certificates [RFC5280].  The certificate chain is
            represented as a JSON array of certificate value strings.  Each
            string in the array is a base64-encoded (Section 4 of [RFC4648] --
            not base64url-encoded) DER [ITU.X690.1994] PKIX certificate value.
            The PKIX certificate containing the key value MUST be the first
            certificate.
          items:
            type: string
          type: array
        y:
          type: string
      type: object
    jsonWebKeySet:
      example:
        keys:
        - d: d
          e: e
          crv: crv
          use: use
          kid: kid
          x5c:
          - x5c
          - x5c
          k: k
          dp: dp
          dq: dq
          n: "n"
          p: p
          kty: kty
          q: q
          qi: qi
          x: x
          y: "y"
          alg: alg
        - d: d
          e: e
          crv: crv
          use: use
          kid: kid
          x5c:
          - x5c
          - x5c
          k: k
          dp: dp
          dq: dq
          n: "n"
          p: p
          kty: kty
          q: q
          qi: qi
          x: x
          y: "y"
          alg: alg
      properties:
        keys:
          description: |-
            The value of the "keys" parameter is an array of JWK values.  By
            default, the order of the JWK values within the array does not imply
            an order of preference among them, although applications of JWK Sets
            can choose to assign a meaning to the order for their purposes, if
            desired.
          items:
            $ref: '#/components/schemas/jsonWebKey'
          type: array
      type: object
    rule:
      example:
        upstream:
          preserve_host: true
          strip_path: strip_path
          url: url
        authorizer:
          handler: handler
          config: '{}'
        authenticators:
        - handler: handler
          config: '{}'
        - handler: handler
          config: '{}'
        match:
          methods:
          - methods
          - methods
          url: url
        description: description
        mutators:
        - handler: handler
          config: '{}'
        - handler: handler
          config: '{}'
        id: id
      properties:
        authenticators:
          description: |-
            Authenticators is a list of authentication handlers that will try and authenticate the provided credentials.
            Authenticators are checked iteratively from index 0 to n and if the first authenticator to return a positive
            result will be the one used.

            If you want the rule to first check a specific authenticator  before "falling back" to others, have that authenticator
            as the first item in the array.
          items:
            $ref: '#/components/schemas/ruleHandler'
          type: array
        authorizer:
          $ref: '#/components/schemas/ruleHandler'
        description:
          description: Description is a human readable description of this rule.
          type: string
        id:
          description: |-
            ID is the unique id of the rule. It can be at most 190 characters long, but the layout of the ID is up to you.
            You will need this ID later on to update or delete the rule.
          type: string
        match:
          $ref: '#/components/schemas/ruleMatch'
        mutators:
          description: |-
            Mutators is a list of mutation handlers that transform the HTTP request. A common use case is generating a new set
            of credentials (e.g. JWT) which then will be forwarded to the upstream server.

            Mutations are performed iteratively from index 0 to n and should all succeed in order for the HTTP request to be forwarded.
          items:
            $ref: '#/components/schemas/ruleHandler'
          type: array
        upstream:
          $ref: '#/components/schemas/Upstream'
      title: swaggerRule is a single rule that will get checked on every HTTP request.
      type: object
    ruleHandler:
      example:
        handler: handler
        config: '{}'
      properties:
        config:
          description: |-
            Config contains the configuration for the handler. Please read the user
            guide for a complete list of each handler's available settings.
          properties: {}
          type: object
        handler:
          description: |-
            Handler identifies the implementation which will be used to handle this specific request. Please read the user
            guide for a complete list of available handlers.
          type: string
      type: object
    ruleMatch:
      example:
        methods:
        - methods
        - methods
        url: url
      properties:
        methods:
          description: |-
            An array of HTTP methods (e.g. GET, POST, PUT, DELETE, ...). When ORY Oathkeeper searches for rules
            to decide what to do with an incoming request to the proxy server, it compares the HTTP method of the incoming
            request with the HTTP methods of each rules. If a match is found, the rule is considered a partial match.
            If the matchesUrl field is satisfied as well, the rule is considered a full match.
          items:
            type: string
          type: array
        url:
          description: |-
            This field represents the URL pattern this rule matches. When ORY Oathkeeper searches for rules
            to decide what to do with an incoming request to the proxy server, it compares the full request URL
            (e.g. https://mydomain.com/api/resource) without query parameters of the incoming
            request with this field. If a match is found, the rule is considered a partial match.
            If the matchesMethods field is satisfied as well, the rule is considered a full match.

            You can use regular expressions in this field to match more than one url. Regular expressions are encapsulated in
            brackets < and >. The following example matches all paths of the domain `mydomain.com`: `https://mydomain.com/<.*>`.
          type: string
      type: object
    swaggerGetRuleParameters:
      description: SwaggerGetRuleParameters swagger get rule parameters
      properties:
        id:
          description: 'in: path'
          type: string
      required:
      - id
      type: object
    swaggerHealthStatus:
      description: SwaggerHealthStatus swagger health status
      properties:
        status:
          description: Status always contains "ok".
          type: string
      type: object
    swaggerJSONWebKey:
      description: SwaggerJSONWebKey swagger JSON web key
      properties:
        alg:
          description: |-
            The "alg" (algorithm) parameter identifies the algorithm intended for
            use with the key.  The values used should either be registered in the
            IANA "JSON Web Signature and Encryption Algorithms" registry
            established by [JWA] or be a value that contains a Collision-
            Resistant Name.
          type: string
        crv:
          description: crv
          type: string
        d:
          description: d
          type: string
        dp:
          description: dp
          type: string
        dq:
          description: dq
          type: string
        e:
          description: e
          type: string
        k:
          description: k
          type: string
        kid:
          description: |-
            The "kid" (key ID) parameter is used to match a specific key.  This
            is used, for instance, to choose among a set of keys within a JWK Set
            during key rollover.  The structure of the "kid" value is
            unspecified.  When "kid" values are used within a JWK Set, different
            keys within the JWK Set SHOULD use distinct "kid" values.  (One
            example in which different keys might use the same "kid" value is if
            they have different "kty" (key type) values but are considered to be
            equivalent alternatives by the application using them.)  The "kid"
            value is a case-sensitive string.
          type: string
        kty:
          description: |-
            The "kty" (key type) parameter identifies the cryptographic algorithm
            family used with the key, such as "RSA" or "EC". "kty" values should
            either be registered in the IANA "JSON Web Key Types" registry
            established by [JWA] or be a value that contains a Collision-
            Resistant Name.  The "kty" value is a case-sensitive string.
          type: string
        n:
          description: "n"
          type: string
        p:
          description: p
          type: string
        q:
          description: q
          type: string
        qi:
          description: qi
          type: string
        use:
          description: |-
            The "use" (public key use) parameter identifies the intended use of
            the public key. The "use" parameter is employed to indicate whether
            a public key is used for encrypting data or verifying the signature
            on data. Values are commonly "sig" (signature) or "enc" (encryption).
          type: string
        x:
          description: x
          type: string
        x5c:
          description: |-
            The "x5c" (X.509 certificate chain) parameter contains a chain of one
            or more PKIX certificates [RFC5280].  The certificate chain is
            represented as a JSON array of certificate value strings.  Each
            string in the array is a base64-encoded (Section 4 of [RFC4648] --
            not base64url-encoded) DER [ITU.X690.1994] PKIX certificate value.
            The PKIX certificate containing the key value MUST be the first
            certificate.
          items:
            type: string
          type: array
        y:
          description: "y"
          type: string
      type: object
    swaggerJSONWebKeySet:
      description: SwaggerJSONWebKeySet swagger JSON web key set
      properties:
        keys:
          description: |-
            The value of the "keys" parameter is an array of JWK values.  By
            default, the order of the JWK values within the array does not imply
            an order of preference among them, although applications of JWK Sets
            can choose to assign a meaning to the order for their purposes, if
            desired.
          items:
            $ref: '#/components/schemas/swaggerJSONWebKey'
          type: array
      type: object
    swaggerListRulesParameters:
      description: SwaggerListRulesParameters swagger list rules parameters
      properties:
        limit:
          description: |-
            The maximum amount of rules returned.
            in: query
          format: int64
          type: integer
        offset:
          description: |-
            The offset from where to start looking.
            in: query
          format: int64
          type: integer
      type: object
    swaggerNotReadyStatus:
      description: SwaggerNotReadyStatus swagger not ready status
      properties:
        errors:
          additionalProperties:
            type: string
          description: Errors contains a list of errors that caused the not ready
            status.
          type: object
      type: object
    swaggerRule:
      properties:
        authenticators:
          description: |-
            Authenticators is a list of authentication handlers that will try and authenticate the provided credentials.
            Authenticators are checked iteratively from index 0 to n and if the first authenticator to return a positive
            result will be the one used.

            If you want the rule to first check a specific authenticator  before "falling back" to others, have that authenticator
            as the first item in the array.
          items:
            $ref: '#/components/schemas/swaggerRuleHandler'
          type: array
        authorizer:
          $ref: '#/components/schemas/swaggerRuleHandler'
        description:
          description: Description is a human readable description of this rule.
          type: string
        id:
          description: |-
            ID is the unique id of the rule. It can be at most 190 characters long, but the layout of the ID is up to you.
            You will need this ID later on to update or delete the rule.
          type: string
        match:
          $ref: '#/components/schemas/swaggerRuleMatch'
        mutators:
          description: |-
            Mutators is a list of mutation handlers that transform the HTTP request. A common use case is generating a new set
            of credentials (e.g. JWT) which then will be forwarded to the upstream server.

            Mutations are performed iteratively from index 0 to n and should all succeed in order for the HTTP request to be forwarded.
          items:
            $ref: '#/components/schemas/swaggerRuleHandler'
          type: array
        upstream:
          $ref: '#/components/schemas/Upstream'
      title: SwaggerRule swaggerRule is a single rule that will get checked on every
        HTTP request.
      type: object
    swaggerRuleHandler:
      description: SwaggerRuleHandler swagger rule handler
      properties:
        config:
          description: |-
            Config contains the configuration for the handler. Please read the user
            guide for a complete list of each handler's available settings.
          properties: {}
          type: object
        handler:
          description: |-
            Handler identifies the implementation which will be used to handle this specific request. Please read the user
            guide for a complete list of available handlers.
          type: string
      type: object
    swaggerRuleMatch:
      description: SwaggerRuleMatch swagger rule match
      properties:
        methods:
          description: |-
            An array of HTTP methods (e.g. GET, POST, PUT, DELETE, ...). When ORY Oathkeeper searches for rules
            to decide what to do with an incoming request to the proxy server, it compares the HTTP method of the incoming
            request with the HTTP methods of each rules. If a match is found, the rule is considered a partial match.
            If the matchesUrl field is satisfied as well, the rule is considered a full match.
          items:
            type: string
          type: array
        url:
          description: |-
            This field represents the URL pattern this rule matches. When ORY Oathkeeper searches for rules
            to decide what to do with an incoming request to the proxy server, it compares the full request URL
            (e.g. https://mydomain.com/api/resource) without query parameters of the incoming
            request with this field. If a match is found, the rule is considered a partial match.
            If the matchesMethods field is satisfied as well, the rule is considered a full match.

            You can use regular expressions in this field to match more than one url. Regular expressions are encapsulated in
            brackets < and >. The following example matches all paths of the domain `mydomain.com`: `https://mydomain.com/<.*>`.
          type: string
      type: object
    swaggerRuleResponse:
      description: SwaggerRuleResponse A rule
      properties:
        Body:
          $ref: '#/components/schemas/swaggerRule'
      type: object
    swaggerRulesResponse:
      description: SwaggerRulesResponse A list of rules
      properties:
        Body:
          description: |-
            in: body
            type: array
          items:
            $ref: '#/components/schemas/swaggerRule'
          type: array
      type: object
    swaggerVersion:
      description: SwaggerVersion swagger version
      properties:
        version:
          description: Version is the service's version.
          type: string
      type: object
    version:
      example:
        version: version
      properties:
        version:
          description: Version is the service's version.
          type: string
      type: object
    inline_response_500:
      properties:
        code:
          format: int64
          type: integer
        details:
          items:
            properties: {}
            type: object
          type: array
        message:
          type: string
        reason:
          type: string
        request:
          type: string
        status:
          type: string
      type: object
x-forwarded-proto: string
x-request-id: string
x-original-swagger-version: "2.0"

