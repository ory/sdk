/*
 * ORY Oathkeeper
 * ORY Oathkeeper is a reverse proxy that checks the HTTP Authorization for validity against a set of rules. This service uses Hydra to validate access tokens and policies.
 *
 * The version of the OpenAPI document: v0.38.25-beta.1
 * Contact: hi@ory.am
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package sh.ory.oathkeeper.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for JsonWebKey
 */
public class JsonWebKeyTest {
    private final JsonWebKey model = new JsonWebKey();

    /**
     * Model tests for JsonWebKey
     */
    @Test
    public void testJsonWebKey() {
        // TODO: test JsonWebKey
    }

    /**
     * Test the property 'alg'
     */
    @Test
    public void algTest() {
        // TODO: test alg
    }

    /**
     * Test the property 'crv'
     */
    @Test
    public void crvTest() {
        // TODO: test crv
    }

    /**
     * Test the property 'd'
     */
    @Test
    public void dTest() {
        // TODO: test d
    }

    /**
     * Test the property 'dp'
     */
    @Test
    public void dpTest() {
        // TODO: test dp
    }

    /**
     * Test the property 'dq'
     */
    @Test
    public void dqTest() {
        // TODO: test dq
    }

    /**
     * Test the property 'e'
     */
    @Test
    public void eTest() {
        // TODO: test e
    }

    /**
     * Test the property 'k'
     */
    @Test
    public void kTest() {
        // TODO: test k
    }

    /**
     * Test the property 'kid'
     */
    @Test
    public void kidTest() {
        // TODO: test kid
    }

    /**
     * Test the property 'kty'
     */
    @Test
    public void ktyTest() {
        // TODO: test kty
    }

    /**
     * Test the property 'n'
     */
    @Test
    public void nTest() {
        // TODO: test n
    }

    /**
     * Test the property 'p'
     */
    @Test
    public void pTest() {
        // TODO: test p
    }

    /**
     * Test the property 'q'
     */
    @Test
    public void qTest() {
        // TODO: test q
    }

    /**
     * Test the property 'qi'
     */
    @Test
    public void qiTest() {
        // TODO: test qi
    }

    /**
     * Test the property 'use'
     */
    @Test
    public void useTest() {
        // TODO: test use
    }

    /**
     * Test the property 'x'
     */
    @Test
    public void xTest() {
        // TODO: test x
    }

    /**
     * Test the property 'x5c'
     */
    @Test
    public void x5cTest() {
        // TODO: test x5c
    }

    /**
     * Test the property 'y'
     */
    @Test
    public void yTest() {
        // TODO: test y
    }

}
