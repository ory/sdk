/*
 * ORY Oathkeeper
 *
 * ORY Oathkeeper is a reverse proxy that checks the HTTP Authorization for validity against a set of rules. This service uses Hydra to validate access tokens and policies.
 *
 * The version of the OpenAPI document: v0.0.0
 * Contact: hi@ory.am
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Ory.Oathkeeper.Client.Api;
using Ory.Oathkeeper.Client.Model;
using Ory.Oathkeeper.Client.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Ory.Oathkeeper.Client.Test.Model
{
    /// <summary>
    ///  Class for testing OathkeeperGetRuleUnauthorized
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class OathkeeperGetRuleUnauthorizedTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for OathkeeperGetRuleUnauthorized
        //private OathkeeperGetRuleUnauthorized instance;

        public OathkeeperGetRuleUnauthorizedTests()
        {
            // TODO uncomment below to create an instance of OathkeeperGetRuleUnauthorized
            //instance = new OathkeeperGetRuleUnauthorized();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of OathkeeperGetRuleUnauthorized
        /// </summary>
        [Fact]
        public void OathkeeperGetRuleUnauthorizedInstanceTest()
        {
            // TODO uncomment below to test "IsType" OathkeeperGetRuleUnauthorized
            //Assert.IsType<OathkeeperGetRuleUnauthorized>(instance);
        }


        /// <summary>
        /// Test the property 'Payload'
        /// </summary>
        [Fact]
        public void PayloadTest()
        {
            // TODO unit test for the property 'Payload'
        }

    }

}
