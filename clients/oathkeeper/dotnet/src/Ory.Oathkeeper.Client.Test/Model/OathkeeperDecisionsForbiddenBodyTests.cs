/*
 * ORY Oathkeeper
 *
 * ORY Oathkeeper is a reverse proxy that checks the HTTP Authorization for validity against a set of rules. This service uses Hydra to validate access tokens and policies.
 *
 * The version of the OpenAPI document: v0.0.0
 * Contact: hi@ory.am
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Ory.Oathkeeper.Client.Api;
using Ory.Oathkeeper.Client.Model;
using Ory.Oathkeeper.Client.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Ory.Oathkeeper.Client.Test.Model
{
    /// <summary>
    ///  Class for testing OathkeeperDecisionsForbiddenBody
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class OathkeeperDecisionsForbiddenBodyTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for OathkeeperDecisionsForbiddenBody
        //private OathkeeperDecisionsForbiddenBody instance;

        public OathkeeperDecisionsForbiddenBodyTests()
        {
            // TODO uncomment below to create an instance of OathkeeperDecisionsForbiddenBody
            //instance = new OathkeeperDecisionsForbiddenBody();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of OathkeeperDecisionsForbiddenBody
        /// </summary>
        [Fact]
        public void OathkeeperDecisionsForbiddenBodyInstanceTest()
        {
            // TODO uncomment below to test "IsType" OathkeeperDecisionsForbiddenBody
            //Assert.IsType<OathkeeperDecisionsForbiddenBody>(instance);
        }


        /// <summary>
        /// Test the property 'Code'
        /// </summary>
        [Fact]
        public void CodeTest()
        {
            // TODO unit test for the property 'Code'
        }
        /// <summary>
        /// Test the property 'Details'
        /// </summary>
        [Fact]
        public void DetailsTest()
        {
            // TODO unit test for the property 'Details'
        }
        /// <summary>
        /// Test the property 'Message'
        /// </summary>
        [Fact]
        public void MessageTest()
        {
            // TODO unit test for the property 'Message'
        }
        /// <summary>
        /// Test the property 'Reason'
        /// </summary>
        [Fact]
        public void ReasonTest()
        {
            // TODO unit test for the property 'Reason'
        }
        /// <summary>
        /// Test the property 'Request'
        /// </summary>
        [Fact]
        public void RequestTest()
        {
            // TODO unit test for the property 'Request'
        }
        /// <summary>
        /// Test the property 'Status'
        /// </summary>
        [Fact]
        public void StatusTest()
        {
            // TODO unit test for the property 'Status'
        }

    }

}
