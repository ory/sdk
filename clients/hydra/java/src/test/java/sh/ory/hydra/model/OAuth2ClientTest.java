/*
 * ORY Hydra
 * Welcome to the ORY Hydra HTTP API documentation. You will find documentation for all HTTP APIs here.
 *
 * The version of the OpenAPI document: v0.0.0-alpha.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package sh.ory.hydra.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.threeten.bp.OffsetDateTime;
import sh.ory.hydra.model.JSONWebKeySet;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for OAuth2Client
 */
public class OAuth2ClientTest {
    private final OAuth2Client model = new OAuth2Client();

    /**
     * Model tests for OAuth2Client
     */
    @Test
    public void testOAuth2Client() {
        // TODO: test OAuth2Client
    }

    /**
     * Test the property 'allowedCorsOrigins'
     */
    @Test
    public void allowedCorsOriginsTest() {
        // TODO: test allowedCorsOrigins
    }

    /**
     * Test the property 'audience'
     */
    @Test
    public void audienceTest() {
        // TODO: test audience
    }

    /**
     * Test the property 'backchannelLogoutSessionRequired'
     */
    @Test
    public void backchannelLogoutSessionRequiredTest() {
        // TODO: test backchannelLogoutSessionRequired
    }

    /**
     * Test the property 'backchannelLogoutUri'
     */
    @Test
    public void backchannelLogoutUriTest() {
        // TODO: test backchannelLogoutUri
    }

    /**
     * Test the property 'clientId'
     */
    @Test
    public void clientIdTest() {
        // TODO: test clientId
    }

    /**
     * Test the property 'clientName'
     */
    @Test
    public void clientNameTest() {
        // TODO: test clientName
    }

    /**
     * Test the property 'clientSecret'
     */
    @Test
    public void clientSecretTest() {
        // TODO: test clientSecret
    }

    /**
     * Test the property 'clientSecretExpiresAt'
     */
    @Test
    public void clientSecretExpiresAtTest() {
        // TODO: test clientSecretExpiresAt
    }

    /**
     * Test the property 'clientUri'
     */
    @Test
    public void clientUriTest() {
        // TODO: test clientUri
    }

    /**
     * Test the property 'contacts'
     */
    @Test
    public void contactsTest() {
        // TODO: test contacts
    }

    /**
     * Test the property 'createdAt'
     */
    @Test
    public void createdAtTest() {
        // TODO: test createdAt
    }

    /**
     * Test the property 'frontchannelLogoutSessionRequired'
     */
    @Test
    public void frontchannelLogoutSessionRequiredTest() {
        // TODO: test frontchannelLogoutSessionRequired
    }

    /**
     * Test the property 'frontchannelLogoutUri'
     */
    @Test
    public void frontchannelLogoutUriTest() {
        // TODO: test frontchannelLogoutUri
    }

    /**
     * Test the property 'grantTypes'
     */
    @Test
    public void grantTypesTest() {
        // TODO: test grantTypes
    }

    /**
     * Test the property 'jwks'
     */
    @Test
    public void jwksTest() {
        // TODO: test jwks
    }

    /**
     * Test the property 'jwksUri'
     */
    @Test
    public void jwksUriTest() {
        // TODO: test jwksUri
    }

    /**
     * Test the property 'logoUri'
     */
    @Test
    public void logoUriTest() {
        // TODO: test logoUri
    }

    /**
     * Test the property 'metadata'
     */
    @Test
    public void metadataTest() {
        // TODO: test metadata
    }

    /**
     * Test the property 'owner'
     */
    @Test
    public void ownerTest() {
        // TODO: test owner
    }

    /**
     * Test the property 'policyUri'
     */
    @Test
    public void policyUriTest() {
        // TODO: test policyUri
    }

    /**
     * Test the property 'postLogoutRedirectUris'
     */
    @Test
    public void postLogoutRedirectUrisTest() {
        // TODO: test postLogoutRedirectUris
    }

    /**
     * Test the property 'redirectUris'
     */
    @Test
    public void redirectUrisTest() {
        // TODO: test redirectUris
    }

    /**
     * Test the property 'requestObjectSigningAlg'
     */
    @Test
    public void requestObjectSigningAlgTest() {
        // TODO: test requestObjectSigningAlg
    }

    /**
     * Test the property 'requestUris'
     */
    @Test
    public void requestUrisTest() {
        // TODO: test requestUris
    }

    /**
     * Test the property 'responseTypes'
     */
    @Test
    public void responseTypesTest() {
        // TODO: test responseTypes
    }

    /**
     * Test the property 'scope'
     */
    @Test
    public void scopeTest() {
        // TODO: test scope
    }

    /**
     * Test the property 'sectorIdentifierUri'
     */
    @Test
    public void sectorIdentifierUriTest() {
        // TODO: test sectorIdentifierUri
    }

    /**
     * Test the property 'subjectType'
     */
    @Test
    public void subjectTypeTest() {
        // TODO: test subjectType
    }

    /**
     * Test the property 'tokenEndpointAuthMethod'
     */
    @Test
    public void tokenEndpointAuthMethodTest() {
        // TODO: test tokenEndpointAuthMethod
    }

    /**
     * Test the property 'tosUri'
     */
    @Test
    public void tosUriTest() {
        // TODO: test tosUri
    }

    /**
     * Test the property 'updatedAt'
     */
    @Test
    public void updatedAtTest() {
        // TODO: test updatedAt
    }

    /**
     * Test the property 'userinfoSignedResponseAlg'
     */
    @Test
    public void userinfoSignedResponseAlgTest() {
        // TODO: test userinfoSignedResponseAlg
    }

}
