<?php
/**
 * OAuth2ClientTokenLifespansTest
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  Ory\Hydra\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Ory Hydra API
 *
 * Documentation for all of Ory Hydra's APIs.
 *
 * The version of the OpenAPI document: v2.1.1
 * Contact: hi@ory.sh
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace Ory\Hydra\Client\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * OAuth2ClientTokenLifespansTest Class Doc Comment
 *
 * @category    Class
 * @description Lifespans of different token types issued for this OAuth 2.0 Client.
 * @package     Ory\Hydra\Client
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class OAuth2ClientTokenLifespansTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "OAuth2ClientTokenLifespans"
     */
    public function testOAuth2ClientTokenLifespans()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "authorizationCodeGrantAccessTokenLifespan"
     */
    public function testPropertyAuthorizationCodeGrantAccessTokenLifespan()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "authorizationCodeGrantIdTokenLifespan"
     */
    public function testPropertyAuthorizationCodeGrantIdTokenLifespan()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "authorizationCodeGrantRefreshTokenLifespan"
     */
    public function testPropertyAuthorizationCodeGrantRefreshTokenLifespan()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "clientCredentialsGrantAccessTokenLifespan"
     */
    public function testPropertyClientCredentialsGrantAccessTokenLifespan()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "implicitGrantAccessTokenLifespan"
     */
    public function testPropertyImplicitGrantAccessTokenLifespan()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "implicitGrantIdTokenLifespan"
     */
    public function testPropertyImplicitGrantIdTokenLifespan()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "jwtBearerGrantAccessTokenLifespan"
     */
    public function testPropertyJwtBearerGrantAccessTokenLifespan()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "refreshTokenGrantAccessTokenLifespan"
     */
    public function testPropertyRefreshTokenGrantAccessTokenLifespan()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "refreshTokenGrantIdTokenLifespan"
     */
    public function testPropertyRefreshTokenGrantIdTokenLifespan()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "refreshTokenGrantRefreshTokenLifespan"
     */
    public function testPropertyRefreshTokenGrantRefreshTokenLifespan()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
