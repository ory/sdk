<?php
/**
 * WellKnownTest
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  Ory\Hydra\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Ory Oathkeeper API
 *
 * Documentation for all of Ory Oathkeeper's APIs.
 *
 * The version of the OpenAPI document: v1.11.6
 * Contact: hi@ory.sh
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace Ory\Hydra\Client\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * WellKnownTest Class Doc Comment
 *
 * @category    Class
 * @description It includes links to several endpoints (e.g. /oauth2/token) and exposes information on supported signature algorithms among others.
 * @package     Ory\Hydra\Client
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class WellKnownTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "WellKnown"
     */
    public function testWellKnown()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "authorizationEndpoint"
     */
    public function testPropertyAuthorizationEndpoint()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "backchannelLogoutSessionSupported"
     */
    public function testPropertyBackchannelLogoutSessionSupported()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "backchannelLogoutSupported"
     */
    public function testPropertyBackchannelLogoutSupported()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "claimsParameterSupported"
     */
    public function testPropertyClaimsParameterSupported()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "claimsSupported"
     */
    public function testPropertyClaimsSupported()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "codeChallengeMethodsSupported"
     */
    public function testPropertyCodeChallengeMethodsSupported()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "endSessionEndpoint"
     */
    public function testPropertyEndSessionEndpoint()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "frontchannelLogoutSessionSupported"
     */
    public function testPropertyFrontchannelLogoutSessionSupported()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "frontchannelLogoutSupported"
     */
    public function testPropertyFrontchannelLogoutSupported()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "grantTypesSupported"
     */
    public function testPropertyGrantTypesSupported()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "idTokenSigningAlgValuesSupported"
     */
    public function testPropertyIdTokenSigningAlgValuesSupported()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "issuer"
     */
    public function testPropertyIssuer()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "jwksUri"
     */
    public function testPropertyJwksUri()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "registrationEndpoint"
     */
    public function testPropertyRegistrationEndpoint()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "requestObjectSigningAlgValuesSupported"
     */
    public function testPropertyRequestObjectSigningAlgValuesSupported()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "requestParameterSupported"
     */
    public function testPropertyRequestParameterSupported()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "requestUriParameterSupported"
     */
    public function testPropertyRequestUriParameterSupported()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "requireRequestUriRegistration"
     */
    public function testPropertyRequireRequestUriRegistration()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "responseModesSupported"
     */
    public function testPropertyResponseModesSupported()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "responseTypesSupported"
     */
    public function testPropertyResponseTypesSupported()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "revocationEndpoint"
     */
    public function testPropertyRevocationEndpoint()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "scopesSupported"
     */
    public function testPropertyScopesSupported()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "subjectTypesSupported"
     */
    public function testPropertySubjectTypesSupported()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "tokenEndpoint"
     */
    public function testPropertyTokenEndpoint()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "tokenEndpointAuthMethodsSupported"
     */
    public function testPropertyTokenEndpointAuthMethodsSupported()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "userinfoEndpoint"
     */
    public function testPropertyUserinfoEndpoint()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "userinfoSigningAlgValuesSupported"
     */
    public function testPropertyUserinfoSigningAlgValuesSupported()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
