<?php
/**
 * PublicApiTest
 * PHP version 7.3
 *
 * @category Class
 * @package  Ory\Hydra\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Ory Hydra API
 *
 * Documentation for all of Ory Hydra's APIs.
 *
 * The version of the OpenAPI document: v1.11.8
 * Contact: hi@ory.sh
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Ory\Hydra\Client\Test\Api;

use \Ory\Hydra\Client\Configuration;
use \Ory\Hydra\Client\ApiException;
use \Ory\Hydra\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * PublicApiTest Class Doc Comment
 *
 * @category Class
 * @package  Ory\Hydra\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class PublicApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for disconnectUser
     *
     * OpenID Connect Front-Backchannel Enabled Logout.
     *
     */
    public function testDisconnectUser()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for discoverOpenIDConfiguration
     *
     * OpenID Connect Discovery.
     *
     */
    public function testDiscoverOpenIDConfiguration()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for dynamicClientRegistrationCreateOAuth2Client
     *
     * Register an OAuth 2.0 Client using the OpenID / OAuth2 Dynamic Client Registration Management Protocol.
     *
     */
    public function testDynamicClientRegistrationCreateOAuth2Client()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for dynamicClientRegistrationDeleteOAuth2Client
     *
     * Deletes an OAuth 2.0 Client using the OpenID / OAuth2 Dynamic Client Registration Management Protocol.
     *
     */
    public function testDynamicClientRegistrationDeleteOAuth2Client()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for dynamicClientRegistrationGetOAuth2Client
     *
     * Get an OAuth 2.0 Client using the OpenID / OAuth2 Dynamic Client Registration Management Protocol.
     *
     */
    public function testDynamicClientRegistrationGetOAuth2Client()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for dynamicClientRegistrationUpdateOAuth2Client
     *
     * Update an OAuth 2.0 Client using the OpenID / OAuth2 Dynamic Client Registration Management Protocol.
     *
     */
    public function testDynamicClientRegistrationUpdateOAuth2Client()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for oauth2Token
     *
     * The OAuth 2.0 Token Endpoint.
     *
     */
    public function testOauth2Token()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for oauthAuth
     *
     * The OAuth 2.0 Authorize Endpoint.
     *
     */
    public function testOauthAuth()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for revokeOAuth2Token
     *
     * Revoke OAuth2 Tokens.
     *
     */
    public function testRevokeOAuth2Token()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userinfo
     *
     * OpenID Connect Userinfo.
     *
     */
    public function testUserinfo()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for wellKnown
     *
     * JSON Web Keys Discovery.
     *
     */
    public function testWellKnown()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
