// Code generated by go-swagger; DO NOT EDIT.

package public

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewRevokeOAuth2TokenParams creates a new RevokeOAuth2TokenParams object
// with the default values initialized.
func NewRevokeOAuth2TokenParams() *RevokeOAuth2TokenParams {
	var ()
	return &RevokeOAuth2TokenParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewRevokeOAuth2TokenParamsWithTimeout creates a new RevokeOAuth2TokenParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewRevokeOAuth2TokenParamsWithTimeout(timeout time.Duration) *RevokeOAuth2TokenParams {
	var ()
	return &RevokeOAuth2TokenParams{

		timeout: timeout,
	}
}

// NewRevokeOAuth2TokenParamsWithContext creates a new RevokeOAuth2TokenParams object
// with the default values initialized, and the ability to set a context for a request
func NewRevokeOAuth2TokenParamsWithContext(ctx context.Context) *RevokeOAuth2TokenParams {
	var ()
	return &RevokeOAuth2TokenParams{

		Context: ctx,
	}
}

// NewRevokeOAuth2TokenParamsWithHTTPClient creates a new RevokeOAuth2TokenParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewRevokeOAuth2TokenParamsWithHTTPClient(client *http.Client) *RevokeOAuth2TokenParams {
	var ()
	return &RevokeOAuth2TokenParams{
		HTTPClient: client,
	}
}

/*RevokeOAuth2TokenParams contains all the parameters to send to the API endpoint
for the revoke o auth2 token operation typically these are written to a http.Request
*/
type RevokeOAuth2TokenParams struct {

	/*Token*/
	Token string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the revoke o auth2 token params
func (o *RevokeOAuth2TokenParams) WithTimeout(timeout time.Duration) *RevokeOAuth2TokenParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the revoke o auth2 token params
func (o *RevokeOAuth2TokenParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the revoke o auth2 token params
func (o *RevokeOAuth2TokenParams) WithContext(ctx context.Context) *RevokeOAuth2TokenParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the revoke o auth2 token params
func (o *RevokeOAuth2TokenParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the revoke o auth2 token params
func (o *RevokeOAuth2TokenParams) WithHTTPClient(client *http.Client) *RevokeOAuth2TokenParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the revoke o auth2 token params
func (o *RevokeOAuth2TokenParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithToken adds the token to the revoke o auth2 token params
func (o *RevokeOAuth2TokenParams) WithToken(token string) *RevokeOAuth2TokenParams {
	o.SetToken(token)
	return o
}

// SetToken adds the token to the revoke o auth2 token params
func (o *RevokeOAuth2TokenParams) SetToken(token string) {
	o.Token = token
}

// WriteToRequest writes these params to a swagger request
func (o *RevokeOAuth2TokenParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// form param token
	frToken := o.Token
	fToken := frToken
	if fToken != "" {
		if err := r.SetFormParam("token", fToken); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
