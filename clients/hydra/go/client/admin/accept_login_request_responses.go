// Code generated by go-swagger; DO NOT EDIT.

package admin

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/ory/hydra-client-go/models"
)

// AcceptLoginRequestReader is a Reader for the AcceptLoginRequest structure.
type AcceptLoginRequestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AcceptLoginRequestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAcceptLoginRequestOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewAcceptLoginRequestUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAcceptLoginRequestNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAcceptLoginRequestInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAcceptLoginRequestOK creates a AcceptLoginRequestOK with default headers values
func NewAcceptLoginRequestOK() *AcceptLoginRequestOK {
	return &AcceptLoginRequestOK{}
}

/*AcceptLoginRequestOK handles this case with default header values.

completedRequest
*/
type AcceptLoginRequestOK struct {
	Payload *models.CompletedRequest
}

func (o *AcceptLoginRequestOK) Error() string {
	return fmt.Sprintf("[PUT /oauth2/auth/requests/login/accept][%d] acceptLoginRequestOK  %+v", 200, o.Payload)
}

func (o *AcceptLoginRequestOK) GetPayload() *models.CompletedRequest {
	return o.Payload
}

func (o *AcceptLoginRequestOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CompletedRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAcceptLoginRequestUnauthorized creates a AcceptLoginRequestUnauthorized with default headers values
func NewAcceptLoginRequestUnauthorized() *AcceptLoginRequestUnauthorized {
	return &AcceptLoginRequestUnauthorized{}
}

/*AcceptLoginRequestUnauthorized handles this case with default header values.

genericError
*/
type AcceptLoginRequestUnauthorized struct {
	Payload *models.GenericError
}

func (o *AcceptLoginRequestUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /oauth2/auth/requests/login/accept][%d] acceptLoginRequestUnauthorized  %+v", 401, o.Payload)
}

func (o *AcceptLoginRequestUnauthorized) GetPayload() *models.GenericError {
	return o.Payload
}

func (o *AcceptLoginRequestUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAcceptLoginRequestNotFound creates a AcceptLoginRequestNotFound with default headers values
func NewAcceptLoginRequestNotFound() *AcceptLoginRequestNotFound {
	return &AcceptLoginRequestNotFound{}
}

/*AcceptLoginRequestNotFound handles this case with default header values.

genericError
*/
type AcceptLoginRequestNotFound struct {
	Payload *models.GenericError
}

func (o *AcceptLoginRequestNotFound) Error() string {
	return fmt.Sprintf("[PUT /oauth2/auth/requests/login/accept][%d] acceptLoginRequestNotFound  %+v", 404, o.Payload)
}

func (o *AcceptLoginRequestNotFound) GetPayload() *models.GenericError {
	return o.Payload
}

func (o *AcceptLoginRequestNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAcceptLoginRequestInternalServerError creates a AcceptLoginRequestInternalServerError with default headers values
func NewAcceptLoginRequestInternalServerError() *AcceptLoginRequestInternalServerError {
	return &AcceptLoginRequestInternalServerError{}
}

/*AcceptLoginRequestInternalServerError handles this case with default header values.

genericError
*/
type AcceptLoginRequestInternalServerError struct {
	Payload *models.GenericError
}

func (o *AcceptLoginRequestInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /oauth2/auth/requests/login/accept][%d] acceptLoginRequestInternalServerError  %+v", 500, o.Payload)
}

func (o *AcceptLoginRequestInternalServerError) GetPayload() *models.GenericError {
	return o.Payload
}

func (o *AcceptLoginRequestInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
