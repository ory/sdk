# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule Ory.Api.Metadata do
  @moduledoc """
  API calls for all endpoints tagged `Metadata`.
  """

  alias Ory.Connection
  import Ory.RequestBuilder


  @doc """
  Get snapshot metrics from the service. If you're using k8s, you can then add annotations to your deployment like so:
  ``` metadata: annotations: prometheus.io/port: \"4434\" prometheus.io/path: \"/metrics/prometheus\" ```

  ## Parameters

  - connection (Ory.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters
  ## Returns

  {:ok, nil} on success
  {:error, Tesla.Env.t} on failure
  """
  @spec prometheus(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def prometheus(connection, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/metrics/prometheus")
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      { 200, false}
    ])
  end
end
