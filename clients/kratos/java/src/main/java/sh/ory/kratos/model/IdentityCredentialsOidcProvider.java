/*
 * Ory Identities API
 * This is the API specification for Ory Identities with features such as registration, login, recovery, account verification, profile settings, password reset, identity management, session management, email and sms delivery, and more. 
 *
 * The version of the OpenAPI document: v0.13.1
 * Contact: office@ory.sh
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package sh.ory.kratos.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import sh.ory.kratos.JSON;

/**
 * IdentityCredentialsOidcProvider
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-04-29T16:30:11.172323687Z[Etc/UTC]")
public class IdentityCredentialsOidcProvider {
  public static final String SERIALIZED_NAME_INITIAL_ACCESS_TOKEN = "initial_access_token";
  @SerializedName(SERIALIZED_NAME_INITIAL_ACCESS_TOKEN)
  private String initialAccessToken;

  public static final String SERIALIZED_NAME_INITIAL_ID_TOKEN = "initial_id_token";
  @SerializedName(SERIALIZED_NAME_INITIAL_ID_TOKEN)
  private String initialIdToken;

  public static final String SERIALIZED_NAME_INITIAL_REFRESH_TOKEN = "initial_refresh_token";
  @SerializedName(SERIALIZED_NAME_INITIAL_REFRESH_TOKEN)
  private String initialRefreshToken;

  public static final String SERIALIZED_NAME_PROVIDER = "provider";
  @SerializedName(SERIALIZED_NAME_PROVIDER)
  private String provider;

  public static final String SERIALIZED_NAME_SUBJECT = "subject";
  @SerializedName(SERIALIZED_NAME_SUBJECT)
  private String subject;

  public IdentityCredentialsOidcProvider() {
  }

  public IdentityCredentialsOidcProvider initialAccessToken(String initialAccessToken) {
    
    this.initialAccessToken = initialAccessToken;
    return this;
  }

   /**
   * Get initialAccessToken
   * @return initialAccessToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getInitialAccessToken() {
    return initialAccessToken;
  }


  public void setInitialAccessToken(String initialAccessToken) {
    this.initialAccessToken = initialAccessToken;
  }


  public IdentityCredentialsOidcProvider initialIdToken(String initialIdToken) {
    
    this.initialIdToken = initialIdToken;
    return this;
  }

   /**
   * Get initialIdToken
   * @return initialIdToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getInitialIdToken() {
    return initialIdToken;
  }


  public void setInitialIdToken(String initialIdToken) {
    this.initialIdToken = initialIdToken;
  }


  public IdentityCredentialsOidcProvider initialRefreshToken(String initialRefreshToken) {
    
    this.initialRefreshToken = initialRefreshToken;
    return this;
  }

   /**
   * Get initialRefreshToken
   * @return initialRefreshToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getInitialRefreshToken() {
    return initialRefreshToken;
  }


  public void setInitialRefreshToken(String initialRefreshToken) {
    this.initialRefreshToken = initialRefreshToken;
  }


  public IdentityCredentialsOidcProvider provider(String provider) {
    
    this.provider = provider;
    return this;
  }

   /**
   * Get provider
   * @return provider
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getProvider() {
    return provider;
  }


  public void setProvider(String provider) {
    this.provider = provider;
  }


  public IdentityCredentialsOidcProvider subject(String subject) {
    
    this.subject = subject;
    return this;
  }

   /**
   * Get subject
   * @return subject
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSubject() {
    return subject;
  }


  public void setSubject(String subject) {
    this.subject = subject;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IdentityCredentialsOidcProvider identityCredentialsOidcProvider = (IdentityCredentialsOidcProvider) o;
    return Objects.equals(this.initialAccessToken, identityCredentialsOidcProvider.initialAccessToken) &&
        Objects.equals(this.initialIdToken, identityCredentialsOidcProvider.initialIdToken) &&
        Objects.equals(this.initialRefreshToken, identityCredentialsOidcProvider.initialRefreshToken) &&
        Objects.equals(this.provider, identityCredentialsOidcProvider.provider) &&
        Objects.equals(this.subject, identityCredentialsOidcProvider.subject);
  }

  @Override
  public int hashCode() {
    return Objects.hash(initialAccessToken, initialIdToken, initialRefreshToken, provider, subject);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IdentityCredentialsOidcProvider {\n");
    sb.append("    initialAccessToken: ").append(toIndentedString(initialAccessToken)).append("\n");
    sb.append("    initialIdToken: ").append(toIndentedString(initialIdToken)).append("\n");
    sb.append("    initialRefreshToken: ").append(toIndentedString(initialRefreshToken)).append("\n");
    sb.append("    provider: ").append(toIndentedString(provider)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("initial_access_token");
    openapiFields.add("initial_id_token");
    openapiFields.add("initial_refresh_token");
    openapiFields.add("provider");
    openapiFields.add("subject");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to IdentityCredentialsOidcProvider
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!IdentityCredentialsOidcProvider.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in IdentityCredentialsOidcProvider is not found in the empty JSON string", IdentityCredentialsOidcProvider.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!IdentityCredentialsOidcProvider.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `IdentityCredentialsOidcProvider` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("initial_access_token") != null && !jsonObj.get("initial_access_token").isJsonNull()) && !jsonObj.get("initial_access_token").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `initial_access_token` to be a primitive type in the JSON string but got `%s`", jsonObj.get("initial_access_token").toString()));
      }
      if ((jsonObj.get("initial_id_token") != null && !jsonObj.get("initial_id_token").isJsonNull()) && !jsonObj.get("initial_id_token").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `initial_id_token` to be a primitive type in the JSON string but got `%s`", jsonObj.get("initial_id_token").toString()));
      }
      if ((jsonObj.get("initial_refresh_token") != null && !jsonObj.get("initial_refresh_token").isJsonNull()) && !jsonObj.get("initial_refresh_token").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `initial_refresh_token` to be a primitive type in the JSON string but got `%s`", jsonObj.get("initial_refresh_token").toString()));
      }
      if ((jsonObj.get("provider") != null && !jsonObj.get("provider").isJsonNull()) && !jsonObj.get("provider").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `provider` to be a primitive type in the JSON string but got `%s`", jsonObj.get("provider").toString()));
      }
      if ((jsonObj.get("subject") != null && !jsonObj.get("subject").isJsonNull()) && !jsonObj.get("subject").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subject` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subject").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!IdentityCredentialsOidcProvider.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'IdentityCredentialsOidcProvider' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<IdentityCredentialsOidcProvider> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(IdentityCredentialsOidcProvider.class));

       return (TypeAdapter<T>) new TypeAdapter<IdentityCredentialsOidcProvider>() {
           @Override
           public void write(JsonWriter out, IdentityCredentialsOidcProvider value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public IdentityCredentialsOidcProvider read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of IdentityCredentialsOidcProvider given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of IdentityCredentialsOidcProvider
  * @throws IOException if the JSON string is invalid with respect to IdentityCredentialsOidcProvider
  */
  public static IdentityCredentialsOidcProvider fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, IdentityCredentialsOidcProvider.class);
  }

 /**
  * Convert an instance of IdentityCredentialsOidcProvider to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

