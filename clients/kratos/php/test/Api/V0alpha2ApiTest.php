<?php
/**
 * V0alpha2ApiTest
 * PHP version 7.3
 *
 * @category Class
 * @package  Ory\Kratos\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Ory Kratos API
 *
 * Documentation for all public and administrative Ory Kratos APIs. Public and administrative APIs are exposed on different ports. Public APIs can face the public internet without any protection while administrative APIs should never be exposed without prior authorization. To protect the administative API port you should use something like Nginx, Ory Oathkeeper, or any other technology capable of authorizing incoming requests.
 *
 * The version of the OpenAPI document: v0.9.0-alpha.3
 * Contact: hi@ory.sh
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Ory\Kratos\Client\Test\Api;

use \Ory\Kratos\Client\Configuration;
use \Ory\Kratos\Client\ApiException;
use \Ory\Kratos\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * V0alpha2ApiTest Class Doc Comment
 *
 * @category Class
 * @package  Ory\Kratos\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class V0alpha2ApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for adminCreateIdentity
     *
     * Create an Identity.
     *
     */
    public function testAdminCreateIdentity()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminCreateSelfServiceRecoveryLink
     *
     * Create a Recovery Link.
     *
     */
    public function testAdminCreateSelfServiceRecoveryLink()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminDeleteIdentity
     *
     * Delete an Identity.
     *
     */
    public function testAdminDeleteIdentity()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminDeleteIdentitySessions
     *
     * Calling this endpoint irrecoverably and permanently deletes and invalidates all sessions that belong to the given Identity..
     *
     */
    public function testAdminDeleteIdentitySessions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminGetIdentity
     *
     * Get an Identity.
     *
     */
    public function testAdminGetIdentity()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminListIdentities
     *
     * List Identities.
     *
     */
    public function testAdminListIdentities()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminListIdentitySessions
     *
     * This endpoint returns all sessions that belong to the given Identity..
     *
     */
    public function testAdminListIdentitySessions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminUpdateIdentity
     *
     * Update an Identity.
     *
     */
    public function testAdminUpdateIdentity()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createSelfServiceLogoutFlowUrlForBrowsers
     *
     * Create a Logout URL for Browsers.
     *
     */
    public function testCreateSelfServiceLogoutFlowUrlForBrowsers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getJsonSchema
     *
     * .
     *
     */
    public function testGetJsonSchema()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSelfServiceError
     *
     * Get Self-Service Errors.
     *
     */
    public function testGetSelfServiceError()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSelfServiceLoginFlow
     *
     * Get Login Flow.
     *
     */
    public function testGetSelfServiceLoginFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSelfServiceRecoveryFlow
     *
     * Get Recovery Flow.
     *
     */
    public function testGetSelfServiceRecoveryFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSelfServiceRegistrationFlow
     *
     * Get Registration Flow.
     *
     */
    public function testGetSelfServiceRegistrationFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSelfServiceSettingsFlow
     *
     * Get Settings Flow.
     *
     */
    public function testGetSelfServiceSettingsFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSelfServiceVerificationFlow
     *
     * Get Verification Flow.
     *
     */
    public function testGetSelfServiceVerificationFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getWebAuthnJavaScript
     *
     * Get WebAuthn JavaScript.
     *
     */
    public function testGetWebAuthnJavaScript()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for initializeSelfServiceLoginFlowForBrowsers
     *
     * Initialize Login Flow for Browsers.
     *
     */
    public function testInitializeSelfServiceLoginFlowForBrowsers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for initializeSelfServiceLoginFlowWithoutBrowser
     *
     * Initialize Login Flow for APIs, Services, Apps, ....
     *
     */
    public function testInitializeSelfServiceLoginFlowWithoutBrowser()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for initializeSelfServiceRecoveryFlowForBrowsers
     *
     * Initialize Recovery Flow for Browsers.
     *
     */
    public function testInitializeSelfServiceRecoveryFlowForBrowsers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for initializeSelfServiceRecoveryFlowWithoutBrowser
     *
     * Initialize Recovery Flow for APIs, Services, Apps, ....
     *
     */
    public function testInitializeSelfServiceRecoveryFlowWithoutBrowser()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for initializeSelfServiceRegistrationFlowForBrowsers
     *
     * Initialize Registration Flow for Browsers.
     *
     */
    public function testInitializeSelfServiceRegistrationFlowForBrowsers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for initializeSelfServiceRegistrationFlowWithoutBrowser
     *
     * Initialize Registration Flow for APIs, Services, Apps, ....
     *
     */
    public function testInitializeSelfServiceRegistrationFlowWithoutBrowser()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for initializeSelfServiceSettingsFlowForBrowsers
     *
     * Initialize Settings Flow for Browsers.
     *
     */
    public function testInitializeSelfServiceSettingsFlowForBrowsers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for initializeSelfServiceSettingsFlowWithoutBrowser
     *
     * Initialize Settings Flow for APIs, Services, Apps, ....
     *
     */
    public function testInitializeSelfServiceSettingsFlowWithoutBrowser()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for initializeSelfServiceVerificationFlowForBrowsers
     *
     * Initialize Verification Flow for Browser Clients.
     *
     */
    public function testInitializeSelfServiceVerificationFlowForBrowsers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for initializeSelfServiceVerificationFlowWithoutBrowser
     *
     * Initialize Verification Flow for APIs, Services, Apps, ....
     *
     */
    public function testInitializeSelfServiceVerificationFlowWithoutBrowser()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listIdentitySchemas
     *
     * .
     *
     */
    public function testListIdentitySchemas()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listSessions
     *
     * This endpoints returns all other active sessions that belong to the logged-in user. The current session can be retrieved by calling the `/sessions/whoami` endpoint..
     *
     */
    public function testListSessions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for revokeSession
     *
     * Calling this endpoint invalidates the specified session. The current session cannot be revoked. Session data are not deleted..
     *
     */
    public function testRevokeSession()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for revokeSessions
     *
     * Calling this endpoint invalidates all except the current session that belong to the logged-in user. Session data are not deleted..
     *
     */
    public function testRevokeSessions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for submitSelfServiceLoginFlow
     *
     * Submit a Login Flow.
     *
     */
    public function testSubmitSelfServiceLoginFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for submitSelfServiceLogoutFlow
     *
     * Complete Self-Service Logout.
     *
     */
    public function testSubmitSelfServiceLogoutFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for submitSelfServiceLogoutFlowWithoutBrowser
     *
     * Perform Logout for APIs, Services, Apps, ....
     *
     */
    public function testSubmitSelfServiceLogoutFlowWithoutBrowser()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for submitSelfServiceRecoveryFlow
     *
     * Complete Recovery Flow.
     *
     */
    public function testSubmitSelfServiceRecoveryFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for submitSelfServiceRegistrationFlow
     *
     * Submit a Registration Flow.
     *
     */
    public function testSubmitSelfServiceRegistrationFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for submitSelfServiceSettingsFlow
     *
     * Complete Settings Flow.
     *
     */
    public function testSubmitSelfServiceSettingsFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for submitSelfServiceVerificationFlow
     *
     * Complete Verification Flow.
     *
     */
    public function testSubmitSelfServiceVerificationFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for toSession
     *
     * Check Who the Current HTTP Session Belongs To.
     *
     */
    public function testToSession()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
