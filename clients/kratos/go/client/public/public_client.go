// Code generated by go-swagger; DO NOT EDIT.

package public

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new public API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for public API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
CompleteProfileManagementFlow completes profile management flow

This endpoint returns a login request's context with, for example, error details and
other information.

For an in-depth look at ORY Krato's profile management flow, head over to: https://www.ory.sh/docs/kratos/selfservice/profile
*/
func (a *Client) CompleteProfileManagementFlow(params *CompleteProfileManagementFlowParams) error {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCompleteProfileManagementFlowParams()
	}

	_, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "completeProfileManagementFlow",
		Method:             "POST",
		PathPattern:        "/profiles",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json", "application/x-www-form-urlencoded"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &CompleteProfileManagementFlowReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return err
	}
	return nil
}

/*
GetLoginRequest gets login request

This endpoint returns a login request's context with, for example, error details and
other information.

For an in-depth look at ORY Krato's login flow, head over to: https://www.ory.sh/docs/kratos/selfservice/login
*/
func (a *Client) GetLoginRequest(params *GetLoginRequestParams) (*GetLoginRequestOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetLoginRequestParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getLoginRequest",
		Method:             "GET",
		PathPattern:        "/auth/browser/requests/login",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json", "application/x-www-form-urlencoded"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &GetLoginRequestReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetLoginRequestOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getLoginRequest: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetProfileManagementRequest gets profile management request via cookie

This endpoint returns a profile management request's context with, for example, error details and
other information.

It can be used from a Single Page Application or other applications running on a client device.
The request must be made with valid authentication cookies or it will fail!

If you wish to access this endpoint without the valid cookies (e.g. as part of a server)
please call this path at the admin port.

For an in-depth look at ORY Krato's profile management flow, head over to: https://www.ory.sh/docs/kratos/selfservice/profile
*/
func (a *Client) GetProfileManagementRequest(params *GetProfileManagementRequestParams) (*GetProfileManagementRequestOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetProfileManagementRequestParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getProfileManagementRequest",
		Method:             "GET",
		PathPattern:        "/profiles/requests",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json", "application/x-www-form-urlencoded"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &GetProfileManagementRequestReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetProfileManagementRequestOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getProfileManagementRequest: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetRegistrationRequest gets registration request

This endpoint returns a registration request's context with, for example, error details and
other information.

For an in-depth look at ORY Krato's registration flow, head over to: https://www.ory.sh/docs/kratos/selfservice/registration
*/
func (a *Client) GetRegistrationRequest(params *GetRegistrationRequestParams) (*GetRegistrationRequestOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetRegistrationRequestParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getRegistrationRequest",
		Method:             "GET",
		PathPattern:        "/auth/browser/requests/registration",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json", "application/x-www-form-urlencoded"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &GetRegistrationRequestReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetRegistrationRequestOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getRegistrationRequest: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
InitializeLoginFlow initializes a login flow

This endpoint initializes a login flow. This endpoint **should not be called from a programatic API**
but instead for the, for example, browser. It will redirect the user agent (e.g. browser) to the
configured login UI, appending the login challenge.

If the user-agent already has a valid authentication session, the server will respond with a 302
code redirecting to the config value of `urls.default_return_to`.

For an in-depth look at ORY Krato's login flow, head over to: https://www.ory.sh/docs/kratos/selfservice/login
*/
func (a *Client) InitializeLoginFlow(params *InitializeLoginFlowParams) error {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInitializeLoginFlowParams()
	}

	_, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "initializeLoginFlow",
		Method:             "GET",
		PathPattern:        "/auth/browser/login",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json", "application/x-www-form-urlencoded"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &InitializeLoginFlowReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return err
	}
	return nil
}

/*
InitializeProfileManagementFlow initializes profile management flow

This endpoint initializes a profile update flow. This endpoint **should not be called from a programatic API**
but instead for the, for example, browser. It will redirect the user agent (e.g. browser) to the
configured login UI, appending the login challenge.

If the user-agent does not have a valid authentication session, a 302 code will be returned which
redirects to the initializeLoginFlow endpoint, appending this page as the return_to value.

For an in-depth look at ORY Krato's profile management flow, head over to: https://www.ory.sh/docs/kratos/selfservice/profile
*/
func (a *Client) InitializeProfileManagementFlow(params *InitializeProfileManagementFlowParams) error {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInitializeProfileManagementFlowParams()
	}

	_, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "initializeProfileManagementFlow",
		Method:             "GET",
		PathPattern:        "/profiles",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json", "application/x-www-form-urlencoded"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &InitializeProfileManagementFlowReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return err
	}
	return nil
}

/*
InitializeRegistrationFlow initializes a registration flow

This endpoint initializes a registration flow. This endpoint **should not be called from a programatic API**
but instead for the, for example, browser. It will redirect the user agent (e.g. browser) to the
configured registration UI, appending the registration challenge.

For an in-depth look at ORY Krato's registration flow, head over to: https://www.ory.sh/docs/kratos/selfservice/registration
*/
func (a *Client) InitializeRegistrationFlow(params *InitializeRegistrationFlowParams) error {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInitializeRegistrationFlowParams()
	}

	_, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "initializeRegistrationFlow",
		Method:             "GET",
		PathPattern:        "/auth/browser/registration",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json", "application/x-www-form-urlencoded"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &InitializeRegistrationFlowReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return err
	}
	return nil
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
