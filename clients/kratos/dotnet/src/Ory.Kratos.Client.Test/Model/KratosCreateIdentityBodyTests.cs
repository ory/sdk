/*
 * Ory Identities API
 *
 * This is the API specification for Ory Identities with features such as registration, login, recovery, account verification, profile settings, password reset, identity management, session management, email and sms delivery, and more. 
 *
 * The version of the OpenAPI document: v0.13.1
 * Contact: office@ory.sh
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Ory.Kratos.Client.Api;
using Ory.Kratos.Client.Model;
using Ory.Kratos.Client.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Ory.Kratos.Client.Test.Model
{
    /// <summary>
    ///  Class for testing KratosCreateIdentityBody
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class KratosCreateIdentityBodyTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for KratosCreateIdentityBody
        //private KratosCreateIdentityBody instance;

        public KratosCreateIdentityBodyTests()
        {
            // TODO uncomment below to create an instance of KratosCreateIdentityBody
            //instance = new KratosCreateIdentityBody();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of KratosCreateIdentityBody
        /// </summary>
        [Fact]
        public void KratosCreateIdentityBodyInstanceTest()
        {
            // TODO uncomment below to test "IsType" KratosCreateIdentityBody
            //Assert.IsType<KratosCreateIdentityBody>(instance);
        }


        /// <summary>
        /// Test the property 'Credentials'
        /// </summary>
        [Fact]
        public void CredentialsTest()
        {
            // TODO unit test for the property 'Credentials'
        }
        /// <summary>
        /// Test the property 'MetadataAdmin'
        /// </summary>
        [Fact]
        public void MetadataAdminTest()
        {
            // TODO unit test for the property 'MetadataAdmin'
        }
        /// <summary>
        /// Test the property 'MetadataPublic'
        /// </summary>
        [Fact]
        public void MetadataPublicTest()
        {
            // TODO unit test for the property 'MetadataPublic'
        }
        /// <summary>
        /// Test the property 'RecoveryAddresses'
        /// </summary>
        [Fact]
        public void RecoveryAddressesTest()
        {
            // TODO unit test for the property 'RecoveryAddresses'
        }
        /// <summary>
        /// Test the property 'SchemaId'
        /// </summary>
        [Fact]
        public void SchemaIdTest()
        {
            // TODO unit test for the property 'SchemaId'
        }
        /// <summary>
        /// Test the property 'State'
        /// </summary>
        [Fact]
        public void StateTest()
        {
            // TODO unit test for the property 'State'
        }
        /// <summary>
        /// Test the property 'Traits'
        /// </summary>
        [Fact]
        public void TraitsTest()
        {
            // TODO unit test for the property 'Traits'
        }
        /// <summary>
        /// Test the property 'VerifiableAddresses'
        /// </summary>
        [Fact]
        public void VerifiableAddressesTest()
        {
            // TODO unit test for the property 'VerifiableAddresses'
        }

    }

}
