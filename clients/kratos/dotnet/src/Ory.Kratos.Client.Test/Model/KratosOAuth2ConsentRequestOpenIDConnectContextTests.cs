/*
 * Ory Identities API
 *
 * This is the API specification for Ory Identities with features such as registration, login, recovery, account verification, profile settings, password reset, identity management, session management, email and sms delivery, and more. 
 *
 * The version of the OpenAPI document: v0.13.1
 * Contact: office@ory.sh
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Ory.Kratos.Client.Api;
using Ory.Kratos.Client.Model;
using Ory.Kratos.Client.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Ory.Kratos.Client.Test.Model
{
    /// <summary>
    ///  Class for testing KratosOAuth2ConsentRequestOpenIDConnectContext
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class KratosOAuth2ConsentRequestOpenIDConnectContextTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for KratosOAuth2ConsentRequestOpenIDConnectContext
        //private KratosOAuth2ConsentRequestOpenIDConnectContext instance;

        public KratosOAuth2ConsentRequestOpenIDConnectContextTests()
        {
            // TODO uncomment below to create an instance of KratosOAuth2ConsentRequestOpenIDConnectContext
            //instance = new KratosOAuth2ConsentRequestOpenIDConnectContext();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of KratosOAuth2ConsentRequestOpenIDConnectContext
        /// </summary>
        [Fact]
        public void KratosOAuth2ConsentRequestOpenIDConnectContextInstanceTest()
        {
            // TODO uncomment below to test "IsType" KratosOAuth2ConsentRequestOpenIDConnectContext
            //Assert.IsType<KratosOAuth2ConsentRequestOpenIDConnectContext>(instance);
        }


        /// <summary>
        /// Test the property 'AcrValues'
        /// </summary>
        [Fact]
        public void AcrValuesTest()
        {
            // TODO unit test for the property 'AcrValues'
        }
        /// <summary>
        /// Test the property 'Display'
        /// </summary>
        [Fact]
        public void DisplayTest()
        {
            // TODO unit test for the property 'Display'
        }
        /// <summary>
        /// Test the property 'IdTokenHintClaims'
        /// </summary>
        [Fact]
        public void IdTokenHintClaimsTest()
        {
            // TODO unit test for the property 'IdTokenHintClaims'
        }
        /// <summary>
        /// Test the property 'LoginHint'
        /// </summary>
        [Fact]
        public void LoginHintTest()
        {
            // TODO unit test for the property 'LoginHint'
        }
        /// <summary>
        /// Test the property 'UiLocales'
        /// </summary>
        [Fact]
        public void UiLocalesTest()
        {
            // TODO unit test for the property 'UiLocales'
        }

    }

}
