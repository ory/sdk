/*
 * Ory Identities API
 *
 * This is the API specification for Ory Identities with features such as registration, login, recovery, account verification, profile settings, password reset, identity management, session management, email and sms delivery, and more. 
 *
 * The version of the OpenAPI document: v0.13.1
 * Contact: office@ory.sh
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Ory.Kratos.Client.Api;
using Ory.Kratos.Client.Model;
using Ory.Kratos.Client.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Ory.Kratos.Client.Test.Model
{
    /// <summary>
    ///  Class for testing KratosUpdateSettingsFlowWithOidcMethod
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class KratosUpdateSettingsFlowWithOidcMethodTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for KratosUpdateSettingsFlowWithOidcMethod
        //private KratosUpdateSettingsFlowWithOidcMethod instance;

        public KratosUpdateSettingsFlowWithOidcMethodTests()
        {
            // TODO uncomment below to create an instance of KratosUpdateSettingsFlowWithOidcMethod
            //instance = new KratosUpdateSettingsFlowWithOidcMethod();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of KratosUpdateSettingsFlowWithOidcMethod
        /// </summary>
        [Fact]
        public void KratosUpdateSettingsFlowWithOidcMethodInstanceTest()
        {
            // TODO uncomment below to test "IsType" KratosUpdateSettingsFlowWithOidcMethod
            //Assert.IsType<KratosUpdateSettingsFlowWithOidcMethod>(instance);
        }


        /// <summary>
        /// Test the property 'Flow'
        /// </summary>
        [Fact]
        public void FlowTest()
        {
            // TODO unit test for the property 'Flow'
        }
        /// <summary>
        /// Test the property 'Link'
        /// </summary>
        [Fact]
        public void LinkTest()
        {
            // TODO unit test for the property 'Link'
        }
        /// <summary>
        /// Test the property 'Method'
        /// </summary>
        [Fact]
        public void MethodTest()
        {
            // TODO unit test for the property 'Method'
        }
        /// <summary>
        /// Test the property 'Traits'
        /// </summary>
        [Fact]
        public void TraitsTest()
        {
            // TODO unit test for the property 'Traits'
        }
        /// <summary>
        /// Test the property 'Unlink'
        /// </summary>
        [Fact]
        public void UnlinkTest()
        {
            // TODO unit test for the property 'Unlink'
        }
        /// <summary>
        /// Test the property 'UpstreamParameters'
        /// </summary>
        [Fact]
        public void UpstreamParametersTest()
        {
            // TODO unit test for the property 'UpstreamParameters'
        }

    }

}
