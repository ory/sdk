/*
 * Ory Kratos API
 *
 * Documentation for all public and administrative Ory Kratos APIs. Public and administrative APIs are exposed on different ports. Public APIs can face the public internet without any protection while administrative APIs should never be exposed without prior authorization. To protect the administative API port you should use something like Nginx, Ory Oathkeeper, or any other technology capable of authorizing incoming requests. 
 *
 * The version of the OpenAPI document: v0.9.0-alpha.3
 * Contact: hi@ory.sh
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using JsonSubTypes;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Ory.Kratos.Client.Client.OpenAPIDateConverter;
using System.Reflection;

namespace Ory.Kratos.Client.Model
{
    /// <summary>
    /// KratosSubmitSelfServiceLoginFlowBody
    /// </summary>
    [JsonConverter(typeof(KratosSubmitSelfServiceLoginFlowBodyJsonConverter))]
    [DataContract(Name = "submitSelfServiceLoginFlowBody")]
    public partial class KratosSubmitSelfServiceLoginFlowBody : AbstractOpenAPISchema, IEquatable<KratosSubmitSelfServiceLoginFlowBody>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="KratosSubmitSelfServiceLoginFlowBody" /> class
        /// with the <see cref="KratosSubmitSelfServiceLoginFlowWithLookupSecretMethodBody" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of KratosSubmitSelfServiceLoginFlowWithLookupSecretMethodBody.</param>
        public KratosSubmitSelfServiceLoginFlowBody(KratosSubmitSelfServiceLoginFlowWithLookupSecretMethodBody actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="KratosSubmitSelfServiceLoginFlowBody" /> class
        /// with the <see cref="KratosSubmitSelfServiceLoginFlowWithOidcMethodBody" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of KratosSubmitSelfServiceLoginFlowWithOidcMethodBody.</param>
        public KratosSubmitSelfServiceLoginFlowBody(KratosSubmitSelfServiceLoginFlowWithOidcMethodBody actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="KratosSubmitSelfServiceLoginFlowBody" /> class
        /// with the <see cref="KratosSubmitSelfServiceLoginFlowWithPasswordMethodBody" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of KratosSubmitSelfServiceLoginFlowWithPasswordMethodBody.</param>
        public KratosSubmitSelfServiceLoginFlowBody(KratosSubmitSelfServiceLoginFlowWithPasswordMethodBody actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="KratosSubmitSelfServiceLoginFlowBody" /> class
        /// with the <see cref="KratosSubmitSelfServiceLoginFlowWithTotpMethodBody" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of KratosSubmitSelfServiceLoginFlowWithTotpMethodBody.</param>
        public KratosSubmitSelfServiceLoginFlowBody(KratosSubmitSelfServiceLoginFlowWithTotpMethodBody actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="KratosSubmitSelfServiceLoginFlowBody" /> class
        /// with the <see cref="KratosSubmitSelfServiceLoginFlowWithWebAuthnMethodBody" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of KratosSubmitSelfServiceLoginFlowWithWebAuthnMethodBody.</param>
        public KratosSubmitSelfServiceLoginFlowBody(KratosSubmitSelfServiceLoginFlowWithWebAuthnMethodBody actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }


        private Object _actualInstance;

        /// <summary>
        /// Gets or Sets ActualInstance
        /// </summary>
        public override Object ActualInstance
        {
            get
            {
                return _actualInstance;
            }
            set
            {
                if (value.GetType() == typeof(KratosSubmitSelfServiceLoginFlowWithLookupSecretMethodBody))
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(KratosSubmitSelfServiceLoginFlowWithOidcMethodBody))
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(KratosSubmitSelfServiceLoginFlowWithPasswordMethodBody))
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(KratosSubmitSelfServiceLoginFlowWithTotpMethodBody))
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(KratosSubmitSelfServiceLoginFlowWithWebAuthnMethodBody))
                {
                    this._actualInstance = value;
                }
                else
                {
                    throw new ArgumentException("Invalid instance found. Must be the following types: KratosSubmitSelfServiceLoginFlowWithLookupSecretMethodBody, KratosSubmitSelfServiceLoginFlowWithOidcMethodBody, KratosSubmitSelfServiceLoginFlowWithPasswordMethodBody, KratosSubmitSelfServiceLoginFlowWithTotpMethodBody, KratosSubmitSelfServiceLoginFlowWithWebAuthnMethodBody");
                }
            }
        }

        /// <summary>
        /// Get the actual instance of `KratosSubmitSelfServiceLoginFlowWithLookupSecretMethodBody`. If the actual instance is not `KratosSubmitSelfServiceLoginFlowWithLookupSecretMethodBody`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of KratosSubmitSelfServiceLoginFlowWithLookupSecretMethodBody</returns>
        public KratosSubmitSelfServiceLoginFlowWithLookupSecretMethodBody GetKratosSubmitSelfServiceLoginFlowWithLookupSecretMethodBody()
        {
            return (KratosSubmitSelfServiceLoginFlowWithLookupSecretMethodBody)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `KratosSubmitSelfServiceLoginFlowWithOidcMethodBody`. If the actual instance is not `KratosSubmitSelfServiceLoginFlowWithOidcMethodBody`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of KratosSubmitSelfServiceLoginFlowWithOidcMethodBody</returns>
        public KratosSubmitSelfServiceLoginFlowWithOidcMethodBody GetKratosSubmitSelfServiceLoginFlowWithOidcMethodBody()
        {
            return (KratosSubmitSelfServiceLoginFlowWithOidcMethodBody)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `KratosSubmitSelfServiceLoginFlowWithPasswordMethodBody`. If the actual instance is not `KratosSubmitSelfServiceLoginFlowWithPasswordMethodBody`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of KratosSubmitSelfServiceLoginFlowWithPasswordMethodBody</returns>
        public KratosSubmitSelfServiceLoginFlowWithPasswordMethodBody GetKratosSubmitSelfServiceLoginFlowWithPasswordMethodBody()
        {
            return (KratosSubmitSelfServiceLoginFlowWithPasswordMethodBody)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `KratosSubmitSelfServiceLoginFlowWithTotpMethodBody`. If the actual instance is not `KratosSubmitSelfServiceLoginFlowWithTotpMethodBody`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of KratosSubmitSelfServiceLoginFlowWithTotpMethodBody</returns>
        public KratosSubmitSelfServiceLoginFlowWithTotpMethodBody GetKratosSubmitSelfServiceLoginFlowWithTotpMethodBody()
        {
            return (KratosSubmitSelfServiceLoginFlowWithTotpMethodBody)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `KratosSubmitSelfServiceLoginFlowWithWebAuthnMethodBody`. If the actual instance is not `KratosSubmitSelfServiceLoginFlowWithWebAuthnMethodBody`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of KratosSubmitSelfServiceLoginFlowWithWebAuthnMethodBody</returns>
        public KratosSubmitSelfServiceLoginFlowWithWebAuthnMethodBody GetKratosSubmitSelfServiceLoginFlowWithWebAuthnMethodBody()
        {
            return (KratosSubmitSelfServiceLoginFlowWithWebAuthnMethodBody)this.ActualInstance;
        }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class KratosSubmitSelfServiceLoginFlowBody {\n");
            sb.Append("  ActualInstance: ").Append(this.ActualInstance).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public override string ToJson()
        {
            return JsonConvert.SerializeObject(this.ActualInstance, KratosSubmitSelfServiceLoginFlowBody.SerializerSettings);
        }

        /// <summary>
        /// Converts the JSON string into an instance of KratosSubmitSelfServiceLoginFlowBody
        /// </summary>
        /// <param name="jsonString">JSON string</param>
        /// <returns>An instance of KratosSubmitSelfServiceLoginFlowBody</returns>
        public static KratosSubmitSelfServiceLoginFlowBody FromJson(string jsonString)
        {
            KratosSubmitSelfServiceLoginFlowBody newKratosSubmitSelfServiceLoginFlowBody = null;

            if (string.IsNullOrEmpty(jsonString))
            {
                return newKratosSubmitSelfServiceLoginFlowBody;
            }
            int match = 0;
            List<string> matchedTypes = new List<string>();

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(KratosSubmitSelfServiceLoginFlowWithLookupSecretMethodBody).GetProperty("AdditionalProperties") == null)
                {
                    newKratosSubmitSelfServiceLoginFlowBody = new KratosSubmitSelfServiceLoginFlowBody(JsonConvert.DeserializeObject<KratosSubmitSelfServiceLoginFlowWithLookupSecretMethodBody>(jsonString, KratosSubmitSelfServiceLoginFlowBody.SerializerSettings));
                }
                else
                {
                    newKratosSubmitSelfServiceLoginFlowBody = new KratosSubmitSelfServiceLoginFlowBody(JsonConvert.DeserializeObject<KratosSubmitSelfServiceLoginFlowWithLookupSecretMethodBody>(jsonString, KratosSubmitSelfServiceLoginFlowBody.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("KratosSubmitSelfServiceLoginFlowWithLookupSecretMethodBody");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into KratosSubmitSelfServiceLoginFlowWithLookupSecretMethodBody: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(KratosSubmitSelfServiceLoginFlowWithOidcMethodBody).GetProperty("AdditionalProperties") == null)
                {
                    newKratosSubmitSelfServiceLoginFlowBody = new KratosSubmitSelfServiceLoginFlowBody(JsonConvert.DeserializeObject<KratosSubmitSelfServiceLoginFlowWithOidcMethodBody>(jsonString, KratosSubmitSelfServiceLoginFlowBody.SerializerSettings));
                }
                else
                {
                    newKratosSubmitSelfServiceLoginFlowBody = new KratosSubmitSelfServiceLoginFlowBody(JsonConvert.DeserializeObject<KratosSubmitSelfServiceLoginFlowWithOidcMethodBody>(jsonString, KratosSubmitSelfServiceLoginFlowBody.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("KratosSubmitSelfServiceLoginFlowWithOidcMethodBody");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into KratosSubmitSelfServiceLoginFlowWithOidcMethodBody: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(KratosSubmitSelfServiceLoginFlowWithPasswordMethodBody).GetProperty("AdditionalProperties") == null)
                {
                    newKratosSubmitSelfServiceLoginFlowBody = new KratosSubmitSelfServiceLoginFlowBody(JsonConvert.DeserializeObject<KratosSubmitSelfServiceLoginFlowWithPasswordMethodBody>(jsonString, KratosSubmitSelfServiceLoginFlowBody.SerializerSettings));
                }
                else
                {
                    newKratosSubmitSelfServiceLoginFlowBody = new KratosSubmitSelfServiceLoginFlowBody(JsonConvert.DeserializeObject<KratosSubmitSelfServiceLoginFlowWithPasswordMethodBody>(jsonString, KratosSubmitSelfServiceLoginFlowBody.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("KratosSubmitSelfServiceLoginFlowWithPasswordMethodBody");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into KratosSubmitSelfServiceLoginFlowWithPasswordMethodBody: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(KratosSubmitSelfServiceLoginFlowWithTotpMethodBody).GetProperty("AdditionalProperties") == null)
                {
                    newKratosSubmitSelfServiceLoginFlowBody = new KratosSubmitSelfServiceLoginFlowBody(JsonConvert.DeserializeObject<KratosSubmitSelfServiceLoginFlowWithTotpMethodBody>(jsonString, KratosSubmitSelfServiceLoginFlowBody.SerializerSettings));
                }
                else
                {
                    newKratosSubmitSelfServiceLoginFlowBody = new KratosSubmitSelfServiceLoginFlowBody(JsonConvert.DeserializeObject<KratosSubmitSelfServiceLoginFlowWithTotpMethodBody>(jsonString, KratosSubmitSelfServiceLoginFlowBody.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("KratosSubmitSelfServiceLoginFlowWithTotpMethodBody");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into KratosSubmitSelfServiceLoginFlowWithTotpMethodBody: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(KratosSubmitSelfServiceLoginFlowWithWebAuthnMethodBody).GetProperty("AdditionalProperties") == null)
                {
                    newKratosSubmitSelfServiceLoginFlowBody = new KratosSubmitSelfServiceLoginFlowBody(JsonConvert.DeserializeObject<KratosSubmitSelfServiceLoginFlowWithWebAuthnMethodBody>(jsonString, KratosSubmitSelfServiceLoginFlowBody.SerializerSettings));
                }
                else
                {
                    newKratosSubmitSelfServiceLoginFlowBody = new KratosSubmitSelfServiceLoginFlowBody(JsonConvert.DeserializeObject<KratosSubmitSelfServiceLoginFlowWithWebAuthnMethodBody>(jsonString, KratosSubmitSelfServiceLoginFlowBody.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("KratosSubmitSelfServiceLoginFlowWithWebAuthnMethodBody");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into KratosSubmitSelfServiceLoginFlowWithWebAuthnMethodBody: {1}", jsonString, exception.ToString()));
            }

            if (match == 0)
            {
                throw new InvalidDataException("The JSON string `" + jsonString + "` cannot be deserialized into any schema defined.");
            }
            else if (match > 1)
            {
                throw new InvalidDataException("The JSON string `" + jsonString + "` incorrectly matches more than one schema (should be exactly one match): " + matchedTypes);
            }

            // deserialization is considered successful at this point if no exception has been thrown.
            return newKratosSubmitSelfServiceLoginFlowBody;
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as KratosSubmitSelfServiceLoginFlowBody);
        }

        /// <summary>
        /// Returns true if KratosSubmitSelfServiceLoginFlowBody instances are equal
        /// </summary>
        /// <param name="input">Instance of KratosSubmitSelfServiceLoginFlowBody to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(KratosSubmitSelfServiceLoginFlowBody input)
        {
            if (input == null)
                return false;

            return this.ActualInstance.Equals(input.ActualInstance);
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ActualInstance != null)
                    hashCode = hashCode * 59 + this.ActualInstance.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

    /// <summary>
    /// Custom JSON converter for KratosSubmitSelfServiceLoginFlowBody
    /// </summary>
    public class KratosSubmitSelfServiceLoginFlowBodyJsonConverter : JsonConverter
    {
        /// <summary>
        /// To write the JSON string
        /// </summary>
        /// <param name="writer">JSON writer</param>
        /// <param name="value">Object to be converted into a JSON string</param>
        /// <param name="serializer">JSON Serializer</param>
        public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
        {
            writer.WriteRawValue((string)(typeof(KratosSubmitSelfServiceLoginFlowBody).GetMethod("ToJson").Invoke(value, null)));
        }

        /// <summary>
        /// To convert a JSON string into an object
        /// </summary>
        /// <param name="reader">JSON reader</param>
        /// <param name="objectType">Object type</param>
        /// <param name="existingValue">Existing value</param>
        /// <param name="serializer">JSON Serializer</param>
        /// <returns>The object converted from the JSON string</returns>
        public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
        {
            if(reader.TokenType != JsonToken.Null)
            {
                return KratosSubmitSelfServiceLoginFlowBody.FromJson(JObject.Load(reader).ToString(Formatting.None));
            }
            return null;
        }

        /// <summary>
        /// Check if the object can be converted
        /// </summary>
        /// <param name="objectType">Object type</param>
        /// <returns>True if the object can be converted</returns>
        public override bool CanConvert(Type objectType)
        {
            return false;
        }
    }

}
